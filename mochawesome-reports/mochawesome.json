{
  "reportTitle": "sgtcloud-html5-sdk",
  "stats": {
    "suites": 226,
    "tests": 198,
    "passes": 196,
    "pending": 2,
    "failures": 0,
    "start": "2015-10-26T11:52:19.270Z",
    "end": "2015-10-26T11:53:36.378Z",
    "duration": 77108,
    "testsRegistered": 198,
    "passPercent": 100,
    "pendingPercent": 1,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "UserService",
        "suites": [
          {
            "title": "login",
            "suites": [],
            "tests": [
              {
                "title": "should login",
                "fullTitle": "UserService login should login",
                "timedOut": false,
                "duration": 844,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.UserService.login(<span class=\"hljs-string\">'Ak61E175'</span>, <span class=\"hljs-string\">'yoedge2014'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        user = data;<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "9166bc62-1aff-4303-857b-343d74095885",
                "parentUUID": "6bb34d3a-c111-4b39-9f3d-a432fba551aa",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "6bb34d3a-c111-4b39-9f3d-a432fba551aa",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should login",
                "fullTitle": "UserService login should login",
                "timedOut": false,
                "duration": 844,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.UserService.login(<span class=\"hljs-string\">'Ak61E175'</span>, <span class=\"hljs-string\">'yoedge2014'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        user = data;<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "9166bc62-1aff-4303-857b-343d74095885",
                "parentUUID": "6bb34d3a-c111-4b39-9f3d-a432fba551aa",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 844
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "859b4ea5-d3c8-4769-8566-dc719633a631",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "PlayerService",
        "suites": [
          {
            "title": "create",
            "suites": [],
            "tests": [
              {
                "title": "should create player",
                "fullTitle": "PlayerService create should create player",
                "timedOut": false,
                "duration": 458,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.create(player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (data) {<br>        player = data;<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        assert.strictEqual(player.name, data.name);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "63c4a947-84b1-480a-ac7d-87ccefc9fdce",
                "parentUUID": "4266a66c-6716-4338-ae59-2e0141cf2d25",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "4266a66c-6716-4338-ae59-2e0141cf2d25",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should create player",
                "fullTitle": "PlayerService create should create player",
                "timedOut": false,
                "duration": 458,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.create(player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (data) {<br>        player = data;<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        assert.strictEqual(player.name, data.name);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "63c4a947-84b1-480a-ac7d-87ccefc9fdce",
                "parentUUID": "4266a66c-6716-4338-ae59-2e0141cf2d25",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 458
          },
          {
            "title": "downloadSave",
            "suites": [],
            "tests": [
              {
                "title": "should download Save",
                "fullTitle": "PlayerService downloadSave should download Save",
                "timedOut": false,
                "duration": 385,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.downloadSave(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f37da6c3-6e69-4483-aa65-4b9eb35971aa",
                "parentUUID": "0f8afa56-1082-4ef4-b1a6-51ccb71d0834",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "0f8afa56-1082-4ef4-b1a6-51ccb71d0834",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should download Save",
                "fullTitle": "PlayerService downloadSave should download Save",
                "timedOut": false,
                "duration": 385,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.downloadSave(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f37da6c3-6e69-4483-aa65-4b9eb35971aa",
                "parentUUID": "0f8afa56-1082-4ef4-b1a6-51ccb71d0834",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 385
          },
          {
            "title": "getByLastLoginTime",
            "suites": [],
            "tests": [
              {
                "title": "should get by last login time",
                "fullTitle": "PlayerService getByLastLoginTime should get by last login time",
                "timedOut": false,
                "duration": 379,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.getByLastLoginTime(<span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "635bae42-a941-4b6e-9e31-725f1879584d",
                "parentUUID": "7cb31a4e-7590-40da-bc75-5c28192786bb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "7cb31a4e-7590-40da-bc75-5c28192786bb",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get by last login time",
                "fullTitle": "PlayerService getByLastLoginTime should get by last login time",
                "timedOut": false,
                "duration": 379,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.getByLastLoginTime(<span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "635bae42-a941-4b6e-9e31-725f1879584d",
                "parentUUID": "7cb31a4e-7590-40da-bc75-5c28192786bb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 379
          },
          {
            "title": "getByName",
            "suites": [],
            "tests": [
              {
                "title": "should get by name",
                "fullTitle": "PlayerService getByName should get by name",
                "timedOut": false,
                "duration": 366,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.getByName(player.name, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "b713284c-8007-4ecc-9f1e-b7647203ce88",
                "parentUUID": "f9461266-7070-43dd-b945-5ee58e02317f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "f9461266-7070-43dd-b945-5ee58e02317f",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get by name",
                "fullTitle": "PlayerService getByName should get by name",
                "timedOut": false,
                "duration": 366,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.getByName(player.name, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "b713284c-8007-4ecc-9f1e-b7647203ce88",
                "parentUUID": "f9461266-7070-43dd-b945-5ee58e02317f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 366
          },
          {
            "title": "getByUserId",
            "suites": [],
            "tests": [
              {
                "title": "should get by user id",
                "fullTitle": "PlayerService getByUserId should get by user id",
                "timedOut": false,
                "duration": 418,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.getByUserId(user.userid, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "da9639bc-d0c4-4487-a80e-a01faed7047c",
                "parentUUID": "089b3938-3918-41e4-9556-a51b077ba93d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "089b3938-3918-41e4-9556-a51b077ba93d",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get by user id",
                "fullTitle": "PlayerService getByUserId should get by user id",
                "timedOut": false,
                "duration": 418,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.getByUserId(user.userid, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "da9639bc-d0c4-4487-a80e-a01faed7047c",
                "parentUUID": "089b3938-3918-41e4-9556-a51b077ba93d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 418
          },
          {
            "title": "getFriendsMaxNumber",
            "suites": [],
            "tests": [
              {
                "title": "should get friends max number",
                "fullTitle": "PlayerService getFriendsMaxNumber should get friends max number",
                "timedOut": false,
                "duration": 405,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.getFriendsMaxNumber(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6c2d6cc8-6b9a-44b2-829f-3b066de38d00",
                "parentUUID": "7e5e6b6a-581b-481e-a6ec-979b4265292d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "7e5e6b6a-581b-481e-a6ec-979b4265292d",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get friends max number",
                "fullTitle": "PlayerService getFriendsMaxNumber should get friends max number",
                "timedOut": false,
                "duration": 405,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.getFriendsMaxNumber(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6c2d6cc8-6b9a-44b2-829f-3b066de38d00",
                "parentUUID": "7e5e6b6a-581b-481e-a6ec-979b4265292d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 405
          },
          {
            "title": "getOneByUserId",
            "suites": [],
            "tests": [
              {
                "title": "should get one by user id",
                "fullTitle": "PlayerService getOneByUserId should get one by user id",
                "timedOut": false,
                "duration": 438,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.getOneByUserId(user.userid, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "fe524596-812a-407b-ba2d-376a44797dcf",
                "parentUUID": "aff14dcc-1111-4cd7-8f18-fc1b08727f29",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "aff14dcc-1111-4cd7-8f18-fc1b08727f29",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get one by user id",
                "fullTitle": "PlayerService getOneByUserId should get one by user id",
                "timedOut": false,
                "duration": 438,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.getOneByUserId(user.userid, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "fe524596-812a-407b-ba2d-376a44797dcf",
                "parentUUID": "aff14dcc-1111-4cd7-8f18-fc1b08727f29",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 438
          },
          {
            "title": "getPlayerByCustomId",
            "suites": [],
            "tests": [
              {
                "title": "should get player by custom id",
                "fullTitle": "PlayerService getPlayerByCustomId should get player by custom id",
                "timedOut": false,
                "duration": 375,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.getPlayerByCustomId(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "c8fc4813-9bb2-4631-ab00-625564a6aa89",
                "parentUUID": "af16ee72-2f02-49af-9362-dccd06ebc5cc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "af16ee72-2f02-49af-9362-dccd06ebc5cc",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get player by custom id",
                "fullTitle": "PlayerService getPlayerByCustomId should get player by custom id",
                "timedOut": false,
                "duration": 375,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.getPlayerByCustomId(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "c8fc4813-9bb2-4631-ab00-625564a6aa89",
                "parentUUID": "af16ee72-2f02-49af-9362-dccd06ebc5cc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 375
          },
          {
            "title": "getPlayerById",
            "suites": [],
            "tests": [
              {
                "title": "should get player by id",
                "fullTitle": "PlayerService getPlayerById should get player by id",
                "timedOut": false,
                "duration": 409,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.getPlayerById(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6c683c1b-d10f-4735-a147-80f1f5f9b9d3",
                "parentUUID": "1c7f89ba-5840-4dc2-8c2b-878ef8da955d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "1c7f89ba-5840-4dc2-8c2b-878ef8da955d",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get player by id",
                "fullTitle": "PlayerService getPlayerById should get player by id",
                "timedOut": false,
                "duration": 409,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.getPlayerById(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6c683c1b-d10f-4735-a147-80f1f5f9b9d3",
                "parentUUID": "1c7f89ba-5840-4dc2-8c2b-878ef8da955d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 409
          },
          {
            "title": "searchPlayersByLastLogin",
            "suites": [],
            "tests": [
              {
                "title": "should search players by last login",
                "fullTitle": "PlayerService searchPlayersByLastLogin should search players by last login",
                "timedOut": false,
                "duration": 377,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.searchPlayersByLastLogin(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "42b26c26-38a2-454a-866d-d83d78a76fb7",
                "parentUUID": "e47deed1-846f-4382-a844-0b2050b3a2ea",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "e47deed1-846f-4382-a844-0b2050b3a2ea",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should search players by last login",
                "fullTitle": "PlayerService searchPlayersByLastLogin should search players by last login",
                "timedOut": false,
                "duration": 377,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.searchPlayersByLastLogin(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "42b26c26-38a2-454a-866d-d83d78a76fb7",
                "parentUUID": "e47deed1-846f-4382-a844-0b2050b3a2ea",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 377
          },
          {
            "title": "searchPlayersByLastLoginCondition",
            "suites": [],
            "tests": [
              {
                "title": "should search players by last login condition",
                "fullTitle": "PlayerService searchPlayersByLastLoginCondition should search players by last login condition",
                "timedOut": false,
                "duration": 388,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.searchPlayersByLastLoginCondition(<span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">1</span>, [player.id], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6555ef42-b718-4f4f-bb43-fcf424d12642",
                "parentUUID": "006eb53c-787c-4dc6-85cb-e9ec8375a7b8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "006eb53c-787c-4dc6-85cb-e9ec8375a7b8",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should search players by last login condition",
                "fullTitle": "PlayerService searchPlayersByLastLoginCondition should search players by last login condition",
                "timedOut": false,
                "duration": 388,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.searchPlayersByLastLoginCondition(<span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">1</span>, [player.id], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6555ef42-b718-4f4f-bb43-fcf424d12642",
                "parentUUID": "006eb53c-787c-4dc6-85cb-e9ec8375a7b8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 388
          },
          {
            "title": "setFriendsMaxNumber",
            "suites": [],
            "tests": [
              {
                "title": "should set friends max number",
                "fullTitle": "PlayerService setFriendsMaxNumber should set friends max number",
                "timedOut": false,
                "duration": 376,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.setFriendsMaxNumber(player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e6125889-428e-4232-bb83-0568f287211e",
                "parentUUID": "b02dba13-2a33-4f68-80b6-bf3cdcc2b770",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "b02dba13-2a33-4f68-80b6-bf3cdcc2b770",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should set friends max number",
                "fullTitle": "PlayerService setFriendsMaxNumber should set friends max number",
                "timedOut": false,
                "duration": 376,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.setFriendsMaxNumber(player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e6125889-428e-4232-bb83-0568f287211e",
                "parentUUID": "b02dba13-2a33-4f68-80b6-bf3cdcc2b770",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 376
          },
          {
            "title": "update",
            "suites": [],
            "tests": [
              {
                "title": "should update",
                "fullTitle": "PlayerService update should update",
                "timedOut": false,
                "duration": 381,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.update(player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f46091fb-e90b-46cc-8229-8998ca122b39",
                "parentUUID": "912ccc14-2924-42bf-b5fd-b4abe20d2634",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "912ccc14-2924-42bf-b5fd-b4abe20d2634",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should update",
                "fullTitle": "PlayerService update should update",
                "timedOut": false,
                "duration": 381,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.update(player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f46091fb-e90b-46cc-8229-8998ca122b39",
                "parentUUID": "912ccc14-2924-42bf-b5fd-b4abe20d2634",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 381
          },
          {
            "title": "uploadSave",
            "suites": [],
            "tests": [
              {
                "title": "should upload Save",
                "fullTitle": "PlayerService uploadSave should upload Save",
                "timedOut": false,
                "duration": 373,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.uploadSave(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "ba86b2f5-f368-4484-ab07-f0805790a22b",
                "parentUUID": "206c717c-b963-486e-9f33-2c35b8ee3fff",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "206c717c-b963-486e-9f33-2c35b8ee3fff",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should upload Save",
                "fullTitle": "PlayerService uploadSave should upload Save",
                "timedOut": false,
                "duration": 373,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.uploadSave(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "ba86b2f5-f368-4484-ab07-f0805790a22b",
                "parentUUID": "206c717c-b963-486e-9f33-2c35b8ee3fff",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 373
          },
          {
            "title": "deletePlayerByPlayerId",
            "suites": [],
            "tests": [
              {
                "title": "should delete player",
                "fullTitle": "PlayerService deletePlayerByPlayerId should delete player",
                "timedOut": false,
                "duration": 793,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.deletePlayerByPlayerId(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        SgtApi.PlayerService.getPlayerById(<span class=\"hljs-string\">'8a20a23072544'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>            player = data;<br>        });<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "3c523f84-a504-4e0d-91e6-c69697efc1f0",
                "parentUUID": "0228152f-3eda-4705-bf79-f61fb3f41601",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "0228152f-3eda-4705-bf79-f61fb3f41601",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should delete player",
                "fullTitle": "PlayerService deletePlayerByPlayerId should delete player",
                "timedOut": false,
                "duration": 793,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerService.deletePlayerByPlayerId(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        SgtApi.PlayerService.getPlayerById(<span class=\"hljs-string\">'8a20a23072544'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>            player = data;<br>        });<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "3c523f84-a504-4e0d-91e6-c69697efc1f0",
                "parentUUID": "0228152f-3eda-4705-bf79-f61fb3f41601",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 793
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "37c2a7d8-a8b5-4acf-b66f-2657df7d640f",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "PlayerExtraService",
        "suites": [
          {
            "title": "addPlayer",
            "suites": [],
            "tests": [
              {
                "title": "should add player",
                "fullTitle": "PlayerExtraService addPlayer should add player",
                "timedOut": false,
                "duration": 371,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerExtraService.addPlayer(player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6fcde35f-ae17-4275-810a-bd8805d2788f",
                "parentUUID": "b6b66862-cdd7-4cfa-a63a-7a7452b374ad",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "b6b66862-cdd7-4cfa-a63a-7a7452b374ad",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should add player",
                "fullTitle": "PlayerExtraService addPlayer should add player",
                "timedOut": false,
                "duration": 371,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerExtraService.addPlayer(player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6fcde35f-ae17-4275-810a-bd8805d2788f",
                "parentUUID": "b6b66862-cdd7-4cfa-a63a-7a7452b374ad",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 371
          },
          {
            "title": "findAll",
            "suites": [],
            "tests": [
              {
                "title": "should find add",
                "fullTitle": "PlayerExtraService findAll should find add",
                "timedOut": false,
                "duration": 381,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerExtraService.findAll(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "9ea24201-dbab-40a4-8e08-98e130c388ac",
                "parentUUID": "d5f92e9b-d5be-4c69-8ba2-79ca692cf132",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "d5f92e9b-d5be-4c69-8ba2-79ca692cf132",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should find add",
                "fullTitle": "PlayerExtraService findAll should find add",
                "timedOut": false,
                "duration": 381,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerExtraService.findAll(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "9ea24201-dbab-40a4-8e08-98e130c388ac",
                "parentUUID": "d5f92e9b-d5be-4c69-8ba2-79ca692cf132",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 381
          },
          {
            "title": "findAllByCondition",
            "suites": [],
            "tests": [
              {
                "title": "should find all by condition",
                "fullTitle": "PlayerExtraService findAllByCondition should find all by condition",
                "timedOut": false,
                "duration": 404,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerExtraService.findAllByCondition({}, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "2cb1e1a5-28ac-4cd2-9980-eabd9e1597d0",
                "parentUUID": "83138090-d61e-4746-8810-e3f86d73ec16",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "83138090-d61e-4746-8810-e3f86d73ec16",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should find all by condition",
                "fullTitle": "PlayerExtraService findAllByCondition should find all by condition",
                "timedOut": false,
                "duration": 404,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerExtraService.findAllByCondition({}, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "2cb1e1a5-28ac-4cd2-9980-eabd9e1597d0",
                "parentUUID": "83138090-d61e-4746-8810-e3f86d73ec16",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 404
          },
          {
            "title": "getPlayerById",
            "suites": [],
            "tests": [
              {
                "title": "should get player by id",
                "fullTitle": "PlayerExtraService getPlayerById should get player by id",
                "timedOut": false,
                "duration": 371,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerExtraService.getPlayerById(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "949117f7-514a-49b4-985d-187f04f3f25d",
                "parentUUID": "3506211f-ef67-419f-8714-de3e00964ae3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "3506211f-ef67-419f-8714-de3e00964ae3",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get player by id",
                "fullTitle": "PlayerExtraService getPlayerById should get player by id",
                "timedOut": false,
                "duration": 371,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerExtraService.getPlayerById(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "949117f7-514a-49b4-985d-187f04f3f25d",
                "parentUUID": "3506211f-ef67-419f-8714-de3e00964ae3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 371
          },
          {
            "title": "getPlayerList",
            "suites": [],
            "tests": [
              {
                "title": "should get player list",
                "fullTitle": "PlayerExtraService getPlayerList should get player list",
                "timedOut": false,
                "duration": 354,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerExtraService.getPlayerList({}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "5deface2-1bba-4173-990c-0a8f3d6f2d52",
                "parentUUID": "4b21f3ac-d960-42dc-89db-f0df126cb815",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "4b21f3ac-d960-42dc-89db-f0df126cb815",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get player list",
                "fullTitle": "PlayerExtraService getPlayerList should get player list",
                "timedOut": false,
                "duration": 354,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerExtraService.getPlayerList({}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "5deface2-1bba-4173-990c-0a8f3d6f2d52",
                "parentUUID": "4b21f3ac-d960-42dc-89db-f0df126cb815",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 354
          },
          {
            "title": "updatePlayerMap",
            "suites": [],
            "tests": [
              {
                "title": "should update player map",
                "fullTitle": "PlayerExtraService updatePlayerMap should update player map",
                "timedOut": false,
                "duration": 384,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerExtraService.updatePlayerMap(player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "acf7d672-26d1-4407-8cb4-70422729502e",
                "parentUUID": "d8f6b0c4-57fd-4bba-ad63-765d1edbf09f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "d8f6b0c4-57fd-4bba-ad63-765d1edbf09f",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should update player map",
                "fullTitle": "PlayerExtraService updatePlayerMap should update player map",
                "timedOut": false,
                "duration": 384,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerExtraService.updatePlayerMap(player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "acf7d672-26d1-4407-8cb4-70422729502e",
                "parentUUID": "d8f6b0c4-57fd-4bba-ad63-765d1edbf09f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 384
          },
          {
            "title": "updatePlayer",
            "suites": [],
            "tests": [
              {
                "title": "should update player",
                "fullTitle": "PlayerExtraService updatePlayer should update player",
                "timedOut": false,
                "duration": 373,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerExtraService.updatePlayer(player.id, player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "152819f3-e1a8-4a8d-a5ea-ad6b308758b9",
                "parentUUID": "b436a7d8-0bc7-4fce-9ef2-2cb0d5b8b7f3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "b436a7d8-0bc7-4fce-9ef2-2cb0d5b8b7f3",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should update player",
                "fullTitle": "PlayerExtraService updatePlayer should update player",
                "timedOut": false,
                "duration": 373,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerExtraService.updatePlayer(player.id, player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "152819f3-e1a8-4a8d-a5ea-ad6b308758b9",
                "parentUUID": "b436a7d8-0bc7-4fce-9ef2-2cb0d5b8b7f3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 373
          },
          {
            "title": "deletePlayerById",
            "suites": [],
            "tests": [
              {
                "title": "should delete player by id",
                "fullTitle": "PlayerExtraService deletePlayerById should delete player by id",
                "timedOut": false,
                "duration": 351,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerExtraService.deletePlayerById(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "3200004d-95a2-4533-b97f-35fd179af658",
                "parentUUID": "31f76fd1-5b3f-4f8a-84b7-d0aa21c3876b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "31f76fd1-5b3f-4f8a-84b7-d0aa21c3876b",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should delete player by id",
                "fullTitle": "PlayerExtraService deletePlayerById should delete player by id",
                "timedOut": false,
                "duration": 351,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PlayerExtraService.deletePlayerById(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "3200004d-95a2-4533-b97f-35fd179af658",
                "parentUUID": "31f76fd1-5b3f-4f8a-84b7-d0aa21c3876b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 351
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "574ff20c-b0c1-48c0-b19d-9feb1bc533ed",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "AchievementService",
        "suites": [
          {
            "title": "achieve",
            "suites": [],
            "tests": [
              {
                "title": "should achieve",
                "fullTitle": "AchievementService achieve should achieve",
                "timedOut": false,
                "duration": 336,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.achieve(player.id, achievementId, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "07b57b1f-b49f-4234-b226-e5ef5973cac0",
                "parentUUID": "336b5dc3-d7fe-4f78-a7b2-714f40c6b029",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "336b5dc3-d7fe-4f78-a7b2-714f40c6b029",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should achieve",
                "fullTitle": "AchievementService achieve should achieve",
                "timedOut": false,
                "duration": 336,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.achieve(player.id, achievementId, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "07b57b1f-b49f-4234-b226-e5ef5973cac0",
                "parentUUID": "336b5dc3-d7fe-4f78-a7b2-714f40c6b029",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 336
          },
          {
            "title": "complete",
            "suites": [],
            "tests": [
              {
                "title": "should complete",
                "fullTitle": "AchievementService complete should complete",
                "timedOut": false,
                "duration": 357,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.complete(player.id, achievementId, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "85e126b2-7b80-4905-aa61-01d834f71218",
                "parentUUID": "7975cb54-b27f-4426-86c2-8c20be56af4e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "7975cb54-b27f-4426-86c2-8c20be56af4e",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should complete",
                "fullTitle": "AchievementService complete should complete",
                "timedOut": false,
                "duration": 357,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.complete(player.id, achievementId, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "85e126b2-7b80-4905-aa61-01d834f71218",
                "parentUUID": "7975cb54-b27f-4426-86c2-8c20be56af4e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 357
          },
          {
            "title": "excuteAchievementsByType",
            "suites": [],
            "tests": [
              {
                "title": "should excute achievements by type",
                "fullTitle": "AchievementService excuteAchievementsByType should excute achievements by type",
                "timedOut": false,
                "duration": 374,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.excuteAchievementsByType(<span class=\"hljs-string\">'123456789'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "7648f413-f88f-4e58-98b5-01828e4cdc3a",
                "parentUUID": "6bdb297f-55ba-4de0-a3b8-312bf7d3bf32",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "6bdb297f-55ba-4de0-a3b8-312bf7d3bf32",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should excute achievements by type",
                "fullTitle": "AchievementService excuteAchievementsByType should excute achievements by type",
                "timedOut": false,
                "duration": 374,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.excuteAchievementsByType(<span class=\"hljs-string\">'123456789'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "7648f413-f88f-4e58-98b5-01828e4cdc3a",
                "parentUUID": "6bdb297f-55ba-4de0-a3b8-312bf7d3bf32",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 374
          },
          {
            "title": "customAchievementsByType",
            "suites": [],
            "tests": [
              {
                "title": "should custom achievement by type",
                "fullTitle": "AchievementService customAchievementsByType should custom achievement by type",
                "timedOut": false,
                "duration": 365,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.customAchievementsByType(<span class=\"hljs-string\">'123456789'</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "4016f6a5-8424-4ed1-b146-ac0c32a38fb3",
                "parentUUID": "aeac4c96-8dde-496c-bdf9-97448f07d4e0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "aeac4c96-8dde-496c-bdf9-97448f07d4e0",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should custom achievement by type",
                "fullTitle": "AchievementService customAchievementsByType should custom achievement by type",
                "timedOut": false,
                "duration": 365,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.customAchievementsByType(<span class=\"hljs-string\">'123456789'</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "4016f6a5-8424-4ed1-b146-ac0c32a38fb3",
                "parentUUID": "aeac4c96-8dde-496c-bdf9-97448f07d4e0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 365
          },
          {
            "title": "getAchievementById",
            "suites": [],
            "tests": [
              {
                "title": "should get achievement by id",
                "fullTitle": "AchievementService getAchievementById should get achievement by id",
                "timedOut": false,
                "duration": 350,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.getAchievementById(achievementId, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f4011a07-fd30-4c68-9f68-7c38198f214a",
                "parentUUID": "6237ee44-4133-4ae3-a7b4-0262a83f7ee7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "6237ee44-4133-4ae3-a7b4-0262a83f7ee7",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get achievement by id",
                "fullTitle": "AchievementService getAchievementById should get achievement by id",
                "timedOut": false,
                "duration": 350,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.getAchievementById(achievementId, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f4011a07-fd30-4c68-9f68-7c38198f214a",
                "parentUUID": "6237ee44-4133-4ae3-a7b4-0262a83f7ee7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 350
          },
          {
            "title": "getAchievementsByType",
            "suites": [],
            "tests": [
              {
                "title": "should get achievements by type",
                "fullTitle": "AchievementService getAchievementsByType should get achievements by type",
                "timedOut": false,
                "duration": 377,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.getAchievementsByType(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f2812693-8d99-4cb0-a294-23e89038ad81",
                "parentUUID": "69fcb8ef-c9e7-4465-93af-cb914b502343",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "69fcb8ef-c9e7-4465-93af-cb914b502343",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get achievements by type",
                "fullTitle": "AchievementService getAchievementsByType should get achievements by type",
                "timedOut": false,
                "duration": 377,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.getAchievementsByType(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f2812693-8d99-4cb0-a294-23e89038ad81",
                "parentUUID": "69fcb8ef-c9e7-4465-93af-cb914b502343",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 377
          },
          {
            "title": "getAllAchievements",
            "suites": [],
            "tests": [
              {
                "title": "should all achievements",
                "fullTitle": "AchievementService getAllAchievements should all achievements",
                "timedOut": false,
                "duration": 412,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.getAllAchievements(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "7ab6e5f3-d9c8-478a-b0d7-1b7cbc0293db",
                "parentUUID": "a0863346-8857-473f-b9b2-32b0418ffa72",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "a0863346-8857-473f-b9b2-32b0418ffa72",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should all achievements",
                "fullTitle": "AchievementService getAllAchievements should all achievements",
                "timedOut": false,
                "duration": 412,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.getAllAchievements(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "7ab6e5f3-d9c8-478a-b0d7-1b7cbc0293db",
                "parentUUID": "a0863346-8857-473f-b9b2-32b0418ffa72",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 412
          },
          {
            "title": "getAvailableAchievements",
            "suites": [],
            "tests": [
              {
                "title": "should get available achievements",
                "fullTitle": "AchievementService getAvailableAchievements should get available achievements",
                "timedOut": false,
                "duration": 435,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.getAvailableAchievements(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "d9ed2948-56b0-4a52-b139-46e0d282c498",
                "parentUUID": "ec584ead-573a-4c07-980f-161f8120a261",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "ec584ead-573a-4c07-980f-161f8120a261",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get available achievements",
                "fullTitle": "AchievementService getAvailableAchievements should get available achievements",
                "timedOut": false,
                "duration": 435,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.getAvailableAchievements(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "d9ed2948-56b0-4a52-b139-46e0d282c498",
                "parentUUID": "ec584ead-573a-4c07-980f-161f8120a261",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 435
          },
          {
            "title": "getCompleteAchievements",
            "suites": [],
            "tests": [
              {
                "title": "should get complete achievements",
                "fullTitle": "AchievementService getCompleteAchievements should get complete achievements",
                "timedOut": false,
                "duration": 448,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.getCompleteAchievements(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "b8120a31-9b41-42ff-a223-19faf4adee92",
                "parentUUID": "89e8eb79-fcb9-41cf-888b-f859b22383b1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "89e8eb79-fcb9-41cf-888b-f859b22383b1",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get complete achievements",
                "fullTitle": "AchievementService getCompleteAchievements should get complete achievements",
                "timedOut": false,
                "duration": 448,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.getCompleteAchievements(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "b8120a31-9b41-42ff-a223-19faf4adee92",
                "parentUUID": "89e8eb79-fcb9-41cf-888b-f859b22383b1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 448
          },
          {
            "title": "getDoneAchievements",
            "suites": [],
            "tests": [
              {
                "title": "should get done achievements",
                "fullTitle": "AchievementService getDoneAchievements should get done achievements",
                "timedOut": false,
                "duration": 437,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.getDoneAchievements(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e9692580-ada2-475d-b344-a3082f39b861",
                "parentUUID": "e5ac127b-0d1c-48f6-9d32-0bd7783c72ac",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "e5ac127b-0d1c-48f6-9d32-0bd7783c72ac",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get done achievements",
                "fullTitle": "AchievementService getDoneAchievements should get done achievements",
                "timedOut": false,
                "duration": 437,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.getDoneAchievements(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e9692580-ada2-475d-b344-a3082f39b861",
                "parentUUID": "e5ac127b-0d1c-48f6-9d32-0bd7783c72ac",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 437
          },
          {
            "title": "setAchievementProgress",
            "suites": [],
            "tests": [
              {
                "title": "should set achievement progress",
                "fullTitle": "AchievementService setAchievementProgress should set achievement progress",
                "timedOut": false,
                "duration": 396,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.setAchievementProgress(player.id, achievementId, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6e0f71c2-8f97-4c9e-9ba2-2602d11ce17b",
                "parentUUID": "080b704f-8a26-42dd-9374-b69848b0019f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "080b704f-8a26-42dd-9374-b69848b0019f",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should set achievement progress",
                "fullTitle": "AchievementService setAchievementProgress should set achievement progress",
                "timedOut": false,
                "duration": 396,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.setAchievementProgress(player.id, achievementId, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6e0f71c2-8f97-4c9e-9ba2-2602d11ce17b",
                "parentUUID": "080b704f-8a26-42dd-9374-b69848b0019f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 396
          },
          {
            "title": "setAchievementsProgressByType",
            "suites": [],
            "tests": [
              {
                "title": "should set achievements progress by type",
                "fullTitle": "AchievementService setAchievementsProgressByType should set achievements progress by type",
                "timedOut": false,
                "duration": 364,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.setAchievementsProgressByType(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8a18c0a0-76d1-47a1-bd57-bb192d8edc5c",
                "parentUUID": "4fbd45c1-a825-4a0b-b25c-181b403a8a37",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "4fbd45c1-a825-4a0b-b25c-181b403a8a37",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should set achievements progress by type",
                "fullTitle": "AchievementService setAchievementsProgressByType should set achievements progress by type",
                "timedOut": false,
                "duration": 364,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AchievementService.setAchievementsProgressByType(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8a18c0a0-76d1-47a1-bd57-bb192d8edc5c",
                "parentUUID": "4fbd45c1-a825-4a0b-b25c-181b403a8a37",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 364
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "2b61bc1e-d379-4ade-9bde-c02c0ba896f7",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "AnnouncementService",
        "suites": [
          {
            "title": "getAnnounceByType",
            "suites": [],
            "tests": [
              {
                "title": "should get announce by type",
                "fullTitle": "AnnouncementService getAnnounceByType should get announce by type",
                "timedOut": false,
                "duration": 457,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AnnouncementService.getAnnounceByType(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "fe6c6567-380a-4146-b4ee-2017571340c3",
                "parentUUID": "abd19c15-567f-440a-8c10-8a0941d135d8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "abd19c15-567f-440a-8c10-8a0941d135d8",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get announce by type",
                "fullTitle": "AnnouncementService getAnnounceByType should get announce by type",
                "timedOut": false,
                "duration": 457,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.AnnouncementService.getAnnounceByType(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "fe6c6567-380a-4146-b4ee-2017571340c3",
                "parentUUID": "abd19c15-567f-440a-8c10-8a0941d135d8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 457
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "f199c372-a412-47e5-9b3c-d41297e1584e",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "CampaignService",
        "suites": [
          {
            "title": "getAvailableCampaigns",
            "suites": [],
            "tests": [
              {
                "title": "should get available campaigns",
                "fullTitle": "CampaignService getAvailableCampaigns should get available campaigns",
                "timedOut": false,
                "duration": 350,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CampaignService.getAvailableCampaigns(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8c7f6127-834a-4ea9-ae87-79ee66b0b0bc",
                "parentUUID": "3265dc6b-6bac-4fb6-b820-bea6fb66c7cb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "3265dc6b-6bac-4fb6-b820-bea6fb66c7cb",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get available campaigns",
                "fullTitle": "CampaignService getAvailableCampaigns should get available campaigns",
                "timedOut": false,
                "duration": 350,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CampaignService.getAvailableCampaigns(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8c7f6127-834a-4ea9-ae87-79ee66b0b0bc",
                "parentUUID": "3265dc6b-6bac-4fb6-b820-bea6fb66c7cb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 350
          },
          {
            "title": "getByTimeZone",
            "suites": [],
            "tests": [
              {
                "title": "should get by time zone",
                "fullTitle": "CampaignService getByTimeZone should get by time zone",
                "timedOut": false,
                "duration": 366,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CampaignService.getByTimeZone(<span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "917f7135-aef6-4dfd-9355-29f6323a6341",
                "parentUUID": "5f063b75-7970-43b5-b935-0a55d3232a78",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "5f063b75-7970-43b5-b935-0a55d3232a78",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get by time zone",
                "fullTitle": "CampaignService getByTimeZone should get by time zone",
                "timedOut": false,
                "duration": 366,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CampaignService.getByTimeZone(<span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "917f7135-aef6-4dfd-9355-29f6323a6341",
                "parentUUID": "5f063b75-7970-43b5-b935-0a55d3232a78",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 366
          },
          {
            "title": "getCampaignById",
            "suites": [],
            "tests": [
              {
                "title": "should get campaign by id",
                "fullTitle": "CampaignService getCampaignById should get campaign by id",
                "timedOut": false,
                "duration": 402,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CampaignService.getCampaignById(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "a48928b9-fece-4a9a-9213-bcbae6b53acf",
                "parentUUID": "a42e436e-1882-47c4-a7f6-d715612f8562",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "a42e436e-1882-47c4-a7f6-d715612f8562",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get campaign by id",
                "fullTitle": "CampaignService getCampaignById should get campaign by id",
                "timedOut": false,
                "duration": 402,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CampaignService.getCampaignById(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "a48928b9-fece-4a9a-9213-bcbae6b53acf",
                "parentUUID": "a42e436e-1882-47c4-a7f6-d715612f8562",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 402
          },
          {
            "title": "getCampaignDetailByCampaignId",
            "suites": [],
            "tests": [
              {
                "title": "should get campaign detail by campaign id",
                "fullTitle": "CampaignService getCampaignDetailByCampaignId should get campaign detail by campaign id",
                "timedOut": false,
                "duration": 444,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CampaignService.getCampaignDetailByCampaignId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "13299da2-c1f4-45d9-940a-420485064a1c",
                "parentUUID": "84064b1a-c052-4d07-adf4-72d162bff92c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "84064b1a-c052-4d07-adf4-72d162bff92c",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get campaign detail by campaign id",
                "fullTitle": "CampaignService getCampaignDetailByCampaignId should get campaign detail by campaign id",
                "timedOut": false,
                "duration": 444,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CampaignService.getCampaignDetailByCampaignId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "13299da2-c1f4-45d9-940a-420485064a1c",
                "parentUUID": "84064b1a-c052-4d07-adf4-72d162bff92c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 444
          },
          {
            "title": "getCampaignDetailByCampaignDetailId",
            "suites": [],
            "tests": [
              {
                "title": "should get campaign detail by campaign detail id",
                "fullTitle": "CampaignService getCampaignDetailByCampaignDetailId should get campaign detail by campaign detail id",
                "timedOut": false,
                "duration": 418,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CampaignService.getCampaignDetailByCampaignDetailId(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e5bba331-121c-451f-a00d-cef6368c2f69",
                "parentUUID": "6182f864-760d-483a-b22e-973dda68efd0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "6182f864-760d-483a-b22e-973dda68efd0",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get campaign detail by campaign detail id",
                "fullTitle": "CampaignService getCampaignDetailByCampaignDetailId should get campaign detail by campaign detail id",
                "timedOut": false,
                "duration": 418,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CampaignService.getCampaignDetailByCampaignDetailId(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e5bba331-121c-451f-a00d-cef6368c2f69",
                "parentUUID": "6182f864-760d-483a-b22e-973dda68efd0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 418
          },
          {
            "title": "getCampaignProgress",
            "suites": [],
            "tests": [
              {
                "title": "should get campaign progress",
                "fullTitle": "CampaignService getCampaignProgress should get campaign progress",
                "timedOut": false,
                "duration": 419,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CampaignService.getCampaignProgress(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "d7b66045-227d-494d-96da-94d79c19d62e",
                "parentUUID": "b1e91850-b0b8-4017-8344-89936afd43e1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "b1e91850-b0b8-4017-8344-89936afd43e1",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get campaign progress",
                "fullTitle": "CampaignService getCampaignProgress should get campaign progress",
                "timedOut": false,
                "duration": 419,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CampaignService.getCampaignProgress(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "d7b66045-227d-494d-96da-94d79c19d62e",
                "parentUUID": "b1e91850-b0b8-4017-8344-89936afd43e1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 419
          },
          {
            "title": "updateProgress",
            "suites": [],
            "tests": [
              {
                "title": "should update progress",
                "fullTitle": "CampaignService updateProgress should update progress",
                "timedOut": false,
                "duration": 395,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CampaignService.updateProgress(<span class=\"hljs-string\">'2'</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "4f853086-ce5f-44cf-b176-8297a474d4de",
                "parentUUID": "02bc43df-444b-4c4d-b288-54a5b7757617",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "02bc43df-444b-4c4d-b288-54a5b7757617",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should update progress",
                "fullTitle": "CampaignService updateProgress should update progress",
                "timedOut": false,
                "duration": 395,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CampaignService.updateProgress(<span class=\"hljs-string\">'2'</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "4f853086-ce5f-44cf-b176-8297a474d4de",
                "parentUUID": "02bc43df-444b-4c4d-b288-54a5b7757617",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 395
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "d698febe-078f-419a-96f0-9912b4294dfe",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "CheckinBoardService",
        "suites": [
          {
            "title": "checkin",
            "suites": [],
            "tests": [
              {
                "title": "should checkin",
                "fullTitle": "CheckinBoardService checkin should checkin",
                "timedOut": false,
                "duration": 411,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.checkin(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f1e16fbf-f1be-44d1-8d60-02514b3b6a94",
                "parentUUID": "385ac6e0-c4c2-41f6-8855-84a166e880c2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "385ac6e0-c4c2-41f6-8855-84a166e880c2",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should checkin",
                "fullTitle": "CheckinBoardService checkin should checkin",
                "timedOut": false,
                "duration": 411,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.checkin(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f1e16fbf-f1be-44d1-8d60-02514b3b6a94",
                "parentUUID": "385ac6e0-c4c2-41f6-8855-84a166e880c2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 411
          },
          {
            "title": "accumulateCount",
            "suites": [],
            "tests": [
              {
                "title": "should accumulate count",
                "fullTitle": "CheckinBoardService accumulateCount should accumulate count",
                "timedOut": false,
                "duration": 372,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.accumulateCount(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "ada2ee32-4a45-460c-9e67-374864522115",
                "parentUUID": "16b8d5d7-7802-4a24-90eb-0d76f46a9651",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "16b8d5d7-7802-4a24-90eb-0d76f46a9651",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should accumulate count",
                "fullTitle": "CheckinBoardService accumulateCount should accumulate count",
                "timedOut": false,
                "duration": 372,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.accumulateCount(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "ada2ee32-4a45-460c-9e67-374864522115",
                "parentUUID": "16b8d5d7-7802-4a24-90eb-0d76f46a9651",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 372
          },
          {
            "title": "continuousCount",
            "suites": [],
            "tests": [
              {
                "title": "should continuous count",
                "fullTitle": "CheckinBoardService continuousCount should continuous count",
                "timedOut": false,
                "duration": 399,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.continuousCount(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "cc1afcd8-c4f7-4b4f-81ee-4c9bacee6b98",
                "parentUUID": "2f450c2e-c1fe-4816-af34-3bbbfc66ab9b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "2f450c2e-c1fe-4816-af34-3bbbfc66ab9b",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should continuous count",
                "fullTitle": "CheckinBoardService continuousCount should continuous count",
                "timedOut": false,
                "duration": 399,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.continuousCount(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "cc1afcd8-c4f7-4b4f-81ee-4c9bacee6b98",
                "parentUUID": "2f450c2e-c1fe-4816-af34-3bbbfc66ab9b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 399
          },
          {
            "title": "getCheckinBoardByCheckinBoardId",
            "suites": [],
            "tests": [
              {
                "title": "should get checkin board by checkin board id",
                "fullTitle": "CheckinBoardService getCheckinBoardByCheckinBoardId should get checkin board by checkin board id",
                "timedOut": false,
                "duration": 377,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.getCheckinBoardByCheckinBoardId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        asser.ok(<span class=\"hljs-literal\">false</span>);<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "2c2afea2-6048-4784-aac7-d9d10d7990a5",
                "parentUUID": "162bb3ea-a992-48f4-9f4f-6185f26a0a19",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "162bb3ea-a992-48f4-9f4f-6185f26a0a19",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get checkin board by checkin board id",
                "fullTitle": "CheckinBoardService getCheckinBoardByCheckinBoardId should get checkin board by checkin board id",
                "timedOut": false,
                "duration": 377,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.getCheckinBoardByCheckinBoardId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        asser.ok(<span class=\"hljs-literal\">false</span>);<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "2c2afea2-6048-4784-aac7-d9d10d7990a5",
                "parentUUID": "162bb3ea-a992-48f4-9f4f-6185f26a0a19",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 377
          },
          {
            "title": "getLastCheckinTime",
            "suites": [],
            "tests": [
              {
                "title": "should get last checkin time",
                "fullTitle": "CheckinBoardService getLastCheckinTime should get last checkin time",
                "timedOut": false,
                "duration": 332,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.getLastCheckinTime(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "0135d844-c0d4-4fea-a660-02f4197c4da5",
                "parentUUID": "ae669bbd-a741-4608-ab17-7e18ecef62fc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "ae669bbd-a741-4608-ab17-7e18ecef62fc",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get last checkin time",
                "fullTitle": "CheckinBoardService getLastCheckinTime should get last checkin time",
                "timedOut": false,
                "duration": 332,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.getLastCheckinTime(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "0135d844-c0d4-4fea-a660-02f4197c4da5",
                "parentUUID": "ae669bbd-a741-4608-ab17-7e18ecef62fc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 332
          },
          {
            "title": "getRewardByCheckinBoardId",
            "suites": [],
            "tests": [
              {
                "title": "should get reward by checkin board id",
                "fullTitle": "CheckinBoardService getRewardByCheckinBoardId should get reward by checkin board id",
                "timedOut": false,
                "duration": 332,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.getRewardByCheckinBoardId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6b343c07-1626-438b-981c-87f8d44f5ada",
                "parentUUID": "c62c3758-3703-4c1f-915a-4d1e89d1a51b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "c62c3758-3703-4c1f-915a-4d1e89d1a51b",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get reward by checkin board id",
                "fullTitle": "CheckinBoardService getRewardByCheckinBoardId should get reward by checkin board id",
                "timedOut": false,
                "duration": 332,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.getRewardByCheckinBoardId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6b343c07-1626-438b-981c-87f8d44f5ada",
                "parentUUID": "c62c3758-3703-4c1f-915a-4d1e89d1a51b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 332
          },
          {
            "title": "setCheckinTimes",
            "suites": [],
            "tests": [
              {
                "title": "should set checkin times",
                "fullTitle": "CheckinBoardService setCheckinTimes should set checkin times",
                "timedOut": false,
                "duration": 374,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.setCheckinTimes(player.id, <span class=\"hljs-string\">'begintoday'</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "656b7ab1-9230-46c0-b748-e72935c44b60",
                "parentUUID": "150e0bb3-a5c3-4c2c-9e16-ea382b95df7c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "150e0bb3-a5c3-4c2c-9e16-ea382b95df7c",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should set checkin times",
                "fullTitle": "CheckinBoardService setCheckinTimes should set checkin times",
                "timedOut": false,
                "duration": 374,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.setCheckinTimes(player.id, <span class=\"hljs-string\">'begintoday'</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "656b7ab1-9230-46c0-b748-e72935c44b60",
                "parentUUID": "150e0bb3-a5c3-4c2c-9e16-ea382b95df7c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 374
          },
          {
            "title": "validateCheckin",
            "suites": [],
            "tests": [
              {
                "title": "should validate checkin",
                "fullTitle": "CheckinBoardService validateCheckin should validate checkin",
                "timedOut": false,
                "duration": 383,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.validateCheckin(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6afda049-36b7-4b93-9914-1b159bb52d9c",
                "parentUUID": "9d72c1ed-13c1-4b09-b221-638fac4421b1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "9d72c1ed-13c1-4b09-b221-638fac4421b1",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should validate checkin",
                "fullTitle": "CheckinBoardService validateCheckin should validate checkin",
                "timedOut": false,
                "duration": 383,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.validateCheckin(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6afda049-36b7-4b93-9914-1b159bb52d9c",
                "parentUUID": "9d72c1ed-13c1-4b09-b221-638fac4421b1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 383
          },
          {
            "title": "getAvailableCheckinBoards",
            "suites": [],
            "tests": [
              {
                "title": "should get available chekcin boards",
                "fullTitle": "CheckinBoardService getAvailableCheckinBoards should get available chekcin boards",
                "timedOut": false,
                "duration": 408,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.getAvailableCheckinBoards(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "28ad5337-e7ed-4196-ace5-c6d07f5f9a02",
                "parentUUID": "e9b7246f-02e5-4fc4-9075-45e03fb9b071",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "e9b7246f-02e5-4fc4-9075-45e03fb9b071",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get available chekcin boards",
                "fullTitle": "CheckinBoardService getAvailableCheckinBoards should get available chekcin boards",
                "timedOut": false,
                "duration": 408,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.getAvailableCheckinBoards(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "28ad5337-e7ed-4196-ace5-c6d07f5f9a02",
                "parentUUID": "e9b7246f-02e5-4fc4-9075-45e03fb9b071",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 408
          },
          {
            "title": "getAvailableCheckinBoardsByTag",
            "suites": [],
            "tests": [
              {
                "title": "should get available chekcin boards by tag",
                "fullTitle": "CheckinBoardService getAvailableCheckinBoardsByTag should get available chekcin boards by tag",
                "timedOut": false,
                "duration": 368,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.getAvailableCheckinBoardsByTag(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "d21c1ada-5217-4909-a4c0-bf31ab6ab69c",
                "parentUUID": "821c9c73-3107-4f55-ae93-e031ec41d7c5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "821c9c73-3107-4f55-ae93-e031ec41d7c5",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get available chekcin boards by tag",
                "fullTitle": "CheckinBoardService getAvailableCheckinBoardsByTag should get available chekcin boards by tag",
                "timedOut": false,
                "duration": 368,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.getAvailableCheckinBoardsByTag(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "d21c1ada-5217-4909-a4c0-bf31ab6ab69c",
                "parentUUID": "821c9c73-3107-4f55-ae93-e031ec41d7c5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 368
          },
          {
            "title": "getAvailableCheckinBoardsByType",
            "suites": [],
            "tests": [
              {
                "title": "should get available chekcin boards by type",
                "fullTitle": "CheckinBoardService getAvailableCheckinBoardsByType should get available chekcin boards by type",
                "timedOut": false,
                "duration": 354,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.getAvailableCheckinBoardsByType(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "c5f54376-8ba8-483a-a6db-b90d29d67e8b",
                "parentUUID": "f25ce327-6e7b-4760-8cb4-bb3c0c13f154",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "f25ce327-6e7b-4760-8cb4-bb3c0c13f154",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get available chekcin boards by type",
                "fullTitle": "CheckinBoardService getAvailableCheckinBoardsByType should get available chekcin boards by type",
                "timedOut": false,
                "duration": 354,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.CheckinBoardService.getAvailableCheckinBoardsByType(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "c5f54376-8ba8-483a-a6db-b90d29d67e8b",
                "parentUUID": "f25ce327-6e7b-4760-8cb4-bb3c0c13f154",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 354
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "43e23358-0195-401d-8b2d-842e91fdf01c",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "DailyTaskService",
        "suites": [
          {
            "title": "executeTask",
            "suites": [],
            "tests": [
              {
                "title": "should execute task",
                "fullTitle": "DailyTaskService executeTask should execute task",
                "timedOut": false,
                "duration": 386,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DailyTaskService.executeTask(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "913a53e2-b202-44f7-8c5c-5bb371824837",
                "parentUUID": "b862ea67-4776-4cc8-8faa-fef99fc16a16",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "b862ea67-4776-4cc8-8faa-fef99fc16a16",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should execute task",
                "fullTitle": "DailyTaskService executeTask should execute task",
                "timedOut": false,
                "duration": 386,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DailyTaskService.executeTask(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "913a53e2-b202-44f7-8c5c-5bb371824837",
                "parentUUID": "b862ea67-4776-4cc8-8faa-fef99fc16a16",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 386
          },
          {
            "title": "executeTasksByType",
            "suites": [],
            "tests": [
              {
                "title": "should execute task by type",
                "fullTitle": "DailyTaskService executeTasksByType should execute task by type",
                "timedOut": false,
                "duration": 361,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DailyTaskService.executeTasksByType(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "013cb7bc-4b70-4c40-9c60-7303549f1fff",
                "parentUUID": "454448a2-e219-457a-b5e4-8bc656785473",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "454448a2-e219-457a-b5e4-8bc656785473",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should execute task by type",
                "fullTitle": "DailyTaskService executeTasksByType should execute task by type",
                "timedOut": false,
                "duration": 361,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DailyTaskService.executeTasksByType(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "013cb7bc-4b70-4c40-9c60-7303549f1fff",
                "parentUUID": "454448a2-e219-457a-b5e4-8bc656785473",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 361
          },
          {
            "title": "addExecuteTasksByType",
            "suites": [],
            "tests": [
              {
                "title": "should add execute tasks by type",
                "fullTitle": "DailyTaskService addExecuteTasksByType should add execute tasks by type",
                "timedOut": false,
                "duration": 365,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DailyTaskService.addExecuteTasksByType(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "69809326-ea04-45fe-aaec-42613f9a731c",
                "parentUUID": "f3cf441a-8b54-4827-9152-ea65ea8263d1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "f3cf441a-8b54-4827-9152-ea65ea8263d1",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should add execute tasks by type",
                "fullTitle": "DailyTaskService addExecuteTasksByType should add execute tasks by type",
                "timedOut": false,
                "duration": 365,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DailyTaskService.addExecuteTasksByType(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "69809326-ea04-45fe-aaec-42613f9a731c",
                "parentUUID": "f3cf441a-8b54-4827-9152-ea65ea8263d1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 365
          },
          {
            "title": "getDailyTasks",
            "suites": [],
            "tests": [
              {
                "title": "should get daily tasks",
                "fullTitle": "DailyTaskService getDailyTasks should get daily tasks",
                "timedOut": false,
                "duration": 394,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DailyTaskService.getDailyTasks(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8b6c03fd-ed25-4ecb-b01b-9f90555652d6",
                "parentUUID": "33392cc6-ee7c-4b36-a23d-dfdc2bc8e0f0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "33392cc6-ee7c-4b36-a23d-dfdc2bc8e0f0",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get daily tasks",
                "fullTitle": "DailyTaskService getDailyTasks should get daily tasks",
                "timedOut": false,
                "duration": 394,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DailyTaskService.getDailyTasks(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8b6c03fd-ed25-4ecb-b01b-9f90555652d6",
                "parentUUID": "33392cc6-ee7c-4b36-a23d-dfdc2bc8e0f0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 394
          },
          {
            "title": "getDailyTasksByType",
            "suites": [],
            "tests": [
              {
                "title": "should get daily tasks by type",
                "fullTitle": "DailyTaskService getDailyTasksByType should get daily tasks by type",
                "timedOut": false,
                "duration": 404,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DailyTaskService.getDailyTasksByType(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "1f77371f-857d-4db4-bf8e-cc2825433e81",
                "parentUUID": "574805ab-62cc-4c15-801d-15e94b58d4ea",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "574805ab-62cc-4c15-801d-15e94b58d4ea",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get daily tasks by type",
                "fullTitle": "DailyTaskService getDailyTasksByType should get daily tasks by type",
                "timedOut": false,
                "duration": 404,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DailyTaskService.getDailyTasksByType(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "1f77371f-857d-4db4-bf8e-cc2825433e81",
                "parentUUID": "574805ab-62cc-4c15-801d-15e94b58d4ea",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 404
          },
          {
            "title": "getReward",
            "suites": [],
            "tests": [
              {
                "title": "should get reward",
                "fullTitle": "DailyTaskService getReward should get reward",
                "timedOut": false,
                "duration": 407,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DailyTaskService.getReward(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data === <span class=\"hljs-string\">'您已经领取了任务奖励，不要这么贪得无厌哦！'</span>) {<br>            assert(<span class=\"hljs-literal\">true</span>);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>                assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>            } <span class=\"hljs-keyword\">else</span> {<br>                assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>            }<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "77d9d390-2ab2-4f28-a62d-aa7ad797273c",
                "parentUUID": "b3aadd87-4bd9-44f2-8db0-1872e8ff08d9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "b3aadd87-4bd9-44f2-8db0-1872e8ff08d9",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get reward",
                "fullTitle": "DailyTaskService getReward should get reward",
                "timedOut": false,
                "duration": 407,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DailyTaskService.getReward(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data === <span class=\"hljs-string\">'您已经领取了任务奖励，不要这么贪得无厌哦！'</span>) {<br>            assert(<span class=\"hljs-literal\">true</span>);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>                assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>            } <span class=\"hljs-keyword\">else</span> {<br>                assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>            }<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "77d9d390-2ab2-4f28-a62d-aa7ad797273c",
                "parentUUID": "b3aadd87-4bd9-44f2-8db0-1872e8ff08d9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 407
          },
          {
            "title": "setTaskProgress",
            "suites": [],
            "tests": [
              {
                "title": "should set task progress",
                "fullTitle": "DailyTaskService setTaskProgress should set task progress",
                "timedOut": false,
                "duration": 354,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DailyTaskService.setTaskProgress(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "5efd7512-6736-40ef-accf-b322bcd7db1c",
                "parentUUID": "135181a4-7246-4a05-be32-ae1a6bbd690c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "135181a4-7246-4a05-be32-ae1a6bbd690c",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should set task progress",
                "fullTitle": "DailyTaskService setTaskProgress should set task progress",
                "timedOut": false,
                "duration": 354,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DailyTaskService.setTaskProgress(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "5efd7512-6736-40ef-accf-b322bcd7db1c",
                "parentUUID": "135181a4-7246-4a05-be32-ae1a6bbd690c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 354
          },
          {
            "title": "setTasksProgressByType",
            "suites": [],
            "tests": [
              {
                "title": "should set task progress by type",
                "fullTitle": "DailyTaskService setTasksProgressByType should set task progress by type",
                "timedOut": false,
                "duration": 366,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DailyTaskService.setTasksProgressByType(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "4707f62b-be59-424b-89b3-f4d250b17a71",
                "parentUUID": "f9b0a651-d31f-4481-a021-ae3954c25480",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "f9b0a651-d31f-4481-a021-ae3954c25480",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should set task progress by type",
                "fullTitle": "DailyTaskService setTasksProgressByType should set task progress by type",
                "timedOut": false,
                "duration": 366,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DailyTaskService.setTasksProgressByType(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "4707f62b-be59-424b-89b3-f4d250b17a71",
                "parentUUID": "f9b0a651-d31f-4481-a021-ae3954c25480",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 366
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "e1a9ec1b-52cc-4e8f-b64d-1256a8982d0f",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "TaskService",
        "suites": [
          {
            "title": "addActionCount",
            "suites": [],
            "tests": [
              {
                "title": "should add action count",
                "fullTitle": "TaskService addActionCount should add action count",
                "timedOut": false,
                "duration": 362,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.addActionCount(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "01b41621-12bd-4548-ac11-6060748452bd",
                "parentUUID": "ce1e7558-84e6-4e1f-84dd-7a142c9d1631",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "ce1e7558-84e6-4e1f-84dd-7a142c9d1631",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should add action count",
                "fullTitle": "TaskService addActionCount should add action count",
                "timedOut": false,
                "duration": 362,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.addActionCount(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "01b41621-12bd-4548-ac11-6060748452bd",
                "parentUUID": "ce1e7558-84e6-4e1f-84dd-7a142c9d1631",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 362
          },
          {
            "title": "addActionCountTime",
            "suites": [],
            "tests": [
              {
                "title": "should add action count time",
                "fullTitle": "TaskService addActionCountTime should add action count time",
                "timedOut": false,
                "duration": 392,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.addActionCountTime(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "2a5ea10b-aeba-4b29-bca6-cd0e2a726575",
                "parentUUID": "b09dbfdf-e7f7-4792-b2f6-50b4d9da9582",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "b09dbfdf-e7f7-4792-b2f6-50b4d9da9582",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should add action count time",
                "fullTitle": "TaskService addActionCountTime should add action count time",
                "timedOut": false,
                "duration": 392,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.addActionCountTime(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "2a5ea10b-aeba-4b29-bca6-cd0e2a726575",
                "parentUUID": "b09dbfdf-e7f7-4792-b2f6-50b4d9da9582",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 392
          },
          {
            "title": "complete",
            "suites": [],
            "tests": [
              {
                "title": "should complete",
                "fullTitle": "TaskService complete should complete",
                "timedOut": false,
                "duration": 395,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.complete(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "86c3cfc7-e7b8-47a7-8a35-7a8168c9712c",
                "parentUUID": "24d17813-2a48-4c4d-b4af-e3a10945f5b6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "24d17813-2a48-4c4d-b4af-e3a10945f5b6",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should complete",
                "fullTitle": "TaskService complete should complete",
                "timedOut": false,
                "duration": 395,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.complete(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "86c3cfc7-e7b8-47a7-8a35-7a8168c9712c",
                "parentUUID": "24d17813-2a48-4c4d-b4af-e3a10945f5b6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 395
          },
          {
            "title": "getAchievementById",
            "suites": [],
            "tests": [
              {
                "title": "should get achievement by id",
                "fullTitle": "TaskService getAchievementById should get achievement by id",
                "timedOut": false,
                "duration": 363,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getAchievementById(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "ffeeb4d3-5b78-4360-a414-68b4a9c61e0f",
                "parentUUID": "93392d22-e8be-4009-a2ed-4785220323b1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "93392d22-e8be-4009-a2ed-4785220323b1",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get achievement by id",
                "fullTitle": "TaskService getAchievementById should get achievement by id",
                "timedOut": false,
                "duration": 363,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getAchievementById(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "ffeeb4d3-5b78-4360-a414-68b4a9c61e0f",
                "parentUUID": "93392d22-e8be-4009-a2ed-4785220323b1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 363
          },
          {
            "title": "getAchievements",
            "suites": [],
            "tests": [
              {
                "title": "should get achievements",
                "fullTitle": "TaskService getAchievements should get achievements",
                "timedOut": false,
                "duration": 389,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getAchievements(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "662f1ca0-4810-40a3-8548-aca17c7df0ac",
                "parentUUID": "ad9686e4-058d-4cd9-8cfc-a63578703bad",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "ad9686e4-058d-4cd9-8cfc-a63578703bad",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get achievements",
                "fullTitle": "TaskService getAchievements should get achievements",
                "timedOut": false,
                "duration": 389,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getAchievements(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "662f1ca0-4810-40a3-8548-aca17c7df0ac",
                "parentUUID": "ad9686e4-058d-4cd9-8cfc-a63578703bad",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 389
          },
          {
            "title": "getAchievementsByType",
            "suites": [],
            "tests": [
              {
                "title": "should get achievements by type",
                "fullTitle": "TaskService getAchievementsByType should get achievements by type",
                "timedOut": false,
                "duration": 372,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getAchievementsByType(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "fdb403d6-04e6-43f6-bcfd-4ac9dc53bcfd",
                "parentUUID": "a0609a1b-69e8-4027-9299-189cfc9f3fad",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "a0609a1b-69e8-4027-9299-189cfc9f3fad",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get achievements by type",
                "fullTitle": "TaskService getAchievementsByType should get achievements by type",
                "timedOut": false,
                "duration": 372,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getAchievementsByType(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "fdb403d6-04e6-43f6-bcfd-4ac9dc53bcfd",
                "parentUUID": "a0609a1b-69e8-4027-9299-189cfc9f3fad",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 372
          },
          {
            "title": "getActionCount",
            "suites": [],
            "tests": [
              {
                "title": "should get action count",
                "fullTitle": "TaskService getActionCount should get action count",
                "timedOut": false,
                "duration": 376,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getActionCount(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "5c2d91f2-e585-4ae4-83d4-87cd4225f378",
                "parentUUID": "5eb428a6-dc09-4e9a-bb30-da3a834c5010",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "5eb428a6-dc09-4e9a-bb30-da3a834c5010",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get action count",
                "fullTitle": "TaskService getActionCount should get action count",
                "timedOut": false,
                "duration": 376,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getActionCount(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "5c2d91f2-e585-4ae4-83d4-87cd4225f378",
                "parentUUID": "5eb428a6-dc09-4e9a-bb30-da3a834c5010",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 376
          },
          {
            "title": "getAllAchievements",
            "suites": [],
            "tests": [
              {
                "title": "should get all achievements",
                "fullTitle": "TaskService getAllAchievements should get all achievements",
                "timedOut": false,
                "duration": 358,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getAllAchievements(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8b977e0f-d781-4d56-ab86-999061b5960f",
                "parentUUID": "f3dff5a2-af9f-4c24-9b6d-fd28274ac4d4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "f3dff5a2-af9f-4c24-9b6d-fd28274ac4d4",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get all achievements",
                "fullTitle": "TaskService getAllAchievements should get all achievements",
                "timedOut": false,
                "duration": 358,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getAllAchievements(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8b977e0f-d781-4d56-ab86-999061b5960f",
                "parentUUID": "f3dff5a2-af9f-4c24-9b6d-fd28274ac4d4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 358
          },
          {
            "title": "getAllDailyTasks",
            "suites": [],
            "tests": [
              {
                "title": "should get all daily tasks",
                "fullTitle": "TaskService getAllDailyTasks should get all daily tasks",
                "timedOut": false,
                "duration": 367,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getAllDailyTasks(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "bca80047-bb0a-4385-a2f5-d20cbfffd412",
                "parentUUID": "c0403cde-11f5-41ea-bf38-71765526f30a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "c0403cde-11f5-41ea-bf38-71765526f30a",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get all daily tasks",
                "fullTitle": "TaskService getAllDailyTasks should get all daily tasks",
                "timedOut": false,
                "duration": 367,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getAllDailyTasks(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "bca80047-bb0a-4385-a2f5-d20cbfffd412",
                "parentUUID": "c0403cde-11f5-41ea-bf38-71765526f30a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 367
          },
          {
            "title": "getAllTasks",
            "suites": [],
            "tests": [
              {
                "title": "should get all tasks",
                "fullTitle": "TaskService getAllTasks should get all tasks",
                "timedOut": false,
                "duration": 406,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getAllTasks(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "87061bc6-131f-4d8e-ba72-76d091a5defd",
                "parentUUID": "0ae09f12-5e14-407f-b0b8-1fceede5652e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "0ae09f12-5e14-407f-b0b8-1fceede5652e",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get all tasks",
                "fullTitle": "TaskService getAllTasks should get all tasks",
                "timedOut": false,
                "duration": 406,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getAllTasks(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "87061bc6-131f-4d8e-ba72-76d091a5defd",
                "parentUUID": "0ae09f12-5e14-407f-b0b8-1fceede5652e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 406
          },
          {
            "title": "getCompleteAchievements",
            "suites": [],
            "tests": [
              {
                "title": "should get complete achievements",
                "fullTitle": "TaskService getCompleteAchievements should get complete achievements",
                "timedOut": false,
                "duration": 373,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getCompleteAchievements(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8db60dc2-5072-451e-8a49-e9b25624999e",
                "parentUUID": "0cb9bd02-5103-4e21-9c54-c508db75beab",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "0cb9bd02-5103-4e21-9c54-c508db75beab",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get complete achievements",
                "fullTitle": "TaskService getCompleteAchievements should get complete achievements",
                "timedOut": false,
                "duration": 373,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getCompleteAchievements(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8db60dc2-5072-451e-8a49-e9b25624999e",
                "parentUUID": "0cb9bd02-5103-4e21-9c54-c508db75beab",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 373
          },
          {
            "title": "getCompleteDailyTasks",
            "suites": [],
            "tests": [
              {
                "title": "should get complete daily tasks",
                "fullTitle": "TaskService getCompleteDailyTasks should get complete daily tasks",
                "timedOut": false,
                "duration": 366,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getCompleteDailyTasks(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "089e5667-9180-4e23-9ea4-126c54ad9165",
                "parentUUID": "e670f62c-d5c2-46c1-8cf9-52a3d3536cce",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "e670f62c-d5c2-46c1-8cf9-52a3d3536cce",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get complete daily tasks",
                "fullTitle": "TaskService getCompleteDailyTasks should get complete daily tasks",
                "timedOut": false,
                "duration": 366,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getCompleteDailyTasks(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "089e5667-9180-4e23-9ea4-126c54ad9165",
                "parentUUID": "e670f62c-d5c2-46c1-8cf9-52a3d3536cce",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 366
          },
          {
            "title": "getCompleteTasks",
            "suites": [],
            "tests": [
              {
                "title": "should get complete tasks",
                "fullTitle": "TaskService getCompleteTasks should get complete tasks",
                "timedOut": false,
                "duration": 343,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getCompleteTasks(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f56dcf2b-d237-45a1-a943-13014ebb7bd4",
                "parentUUID": "50b40968-9656-4f45-bd49-91b5dd8a82bd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "50b40968-9656-4f45-bd49-91b5dd8a82bd",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get complete tasks",
                "fullTitle": "TaskService getCompleteTasks should get complete tasks",
                "timedOut": false,
                "duration": 343,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getCompleteTasks(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f56dcf2b-d237-45a1-a943-13014ebb7bd4",
                "parentUUID": "50b40968-9656-4f45-bd49-91b5dd8a82bd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 343
          },
          {
            "title": "getDailyTaskById",
            "suites": [],
            "tests": [
              {
                "title": "should get daily task by id",
                "fullTitle": "TaskService getDailyTaskById should get daily task by id",
                "timedOut": false,
                "duration": 360,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getDailyTaskById(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "2f6371fb-b354-4b0c-9ea5-a74155e31be3",
                "parentUUID": "e0d825ef-885d-4a1a-9f57-77307a606264",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "e0d825ef-885d-4a1a-9f57-77307a606264",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get daily task by id",
                "fullTitle": "TaskService getDailyTaskById should get daily task by id",
                "timedOut": false,
                "duration": 360,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getDailyTaskById(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "2f6371fb-b354-4b0c-9ea5-a74155e31be3",
                "parentUUID": "e0d825ef-885d-4a1a-9f57-77307a606264",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 360
          },
          {
            "title": "getDailyTasks",
            "suites": [],
            "tests": [
              {
                "title": "should get daily tasks",
                "fullTitle": "TaskService getDailyTasks should get daily tasks",
                "timedOut": false,
                "duration": 350,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getDailyTasks(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "08ee1133-87ac-48d9-a539-9c4f00d6dc18",
                "parentUUID": "256ba909-6a42-499b-ab19-667ddaf67ff0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "256ba909-6a42-499b-ab19-667ddaf67ff0",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get daily tasks",
                "fullTitle": "TaskService getDailyTasks should get daily tasks",
                "timedOut": false,
                "duration": 350,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getDailyTasks(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "08ee1133-87ac-48d9-a539-9c4f00d6dc18",
                "parentUUID": "256ba909-6a42-499b-ab19-667ddaf67ff0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 350
          },
          {
            "title": "getDailyTasksByType",
            "suites": [],
            "tests": [
              {
                "title": "should get daily tasks by type",
                "fullTitle": "TaskService getDailyTasksByType should get daily tasks by type",
                "timedOut": false,
                "duration": 350,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getDailyTasksByType(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "19c7494b-e9e1-4e6f-a028-9a3e5043e120",
                "parentUUID": "84e66fec-db44-48f8-9cef-7b3b13483a75",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "84e66fec-db44-48f8-9cef-7b3b13483a75",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get daily tasks by type",
                "fullTitle": "TaskService getDailyTasksByType should get daily tasks by type",
                "timedOut": false,
                "duration": 350,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getDailyTasksByType(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "19c7494b-e9e1-4e6f-a028-9a3e5043e120",
                "parentUUID": "84e66fec-db44-48f8-9cef-7b3b13483a75",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 350
          },
          {
            "title": "getReward",
            "suites": [],
            "tests": [
              {
                "title": "should get reward",
                "fullTitle": "TaskService getReward should get reward",
                "timedOut": false,
                "duration": 400,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getReward(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "b3473449-06a6-47ce-a8a0-25bccfdcb72e",
                "parentUUID": "dfb2e7b7-6ff3-4d38-adad-ae7107fb417c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "dfb2e7b7-6ff3-4d38-adad-ae7107fb417c",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get reward",
                "fullTitle": "TaskService getReward should get reward",
                "timedOut": false,
                "duration": 400,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getReward(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "b3473449-06a6-47ce-a8a0-25bccfdcb72e",
                "parentUUID": "dfb2e7b7-6ff3-4d38-adad-ae7107fb417c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 400
          },
          {
            "title": "getDailyTasks",
            "suites": [],
            "tests": [
              {
                "title": "should get daily tasks",
                "fullTitle": "TaskService getDailyTasks should get daily tasks",
                "timedOut": false,
                "duration": 351,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getDailyTasks(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "df108be0-cea5-40be-82eb-068259e117b7",
                "parentUUID": "ab5b6550-b245-4036-b8e9-9ee5c883d0ec",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "ab5b6550-b245-4036-b8e9-9ee5c883d0ec",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get daily tasks",
                "fullTitle": "TaskService getDailyTasks should get daily tasks",
                "timedOut": false,
                "duration": 351,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TaskService.getDailyTasks(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "df108be0-cea5-40be-82eb-068259e117b7",
                "parentUUID": "ab5b6550-b245-4036-b8e9-9ee5c883d0ec",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 351
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "9a4804eb-47bd-4417-93bb-a0dc90d55293",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "FriendshipService",
        "suites": [
          {
            "title": "acceptInvite",
            "suites": [],
            "tests": [
              {
                "title": "should accept invite",
                "fullTitle": "FriendshipService acceptInvite should accept invite",
                "timedOut": false,
                "duration": 386,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.acceptInvite(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "c83b569e-0e6e-49a7-b725-ad07e48b88c8",
                "parentUUID": "1202a719-8178-41e2-94fe-3c372dbafe61",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "1202a719-8178-41e2-94fe-3c372dbafe61",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should accept invite",
                "fullTitle": "FriendshipService acceptInvite should accept invite",
                "timedOut": false,
                "duration": 386,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.acceptInvite(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "c83b569e-0e6e-49a7-b725-ad07e48b88c8",
                "parentUUID": "1202a719-8178-41e2-94fe-3c372dbafe61",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 386
          },
          {
            "title": "acceptInviteByMail",
            "suites": [],
            "tests": [
              {
                "title": "should accept invite by mail",
                "fullTitle": "FriendshipService acceptInviteByMail should accept invite by mail",
                "timedOut": false,
                "duration": 366,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.acceptInviteByMail(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, mail, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "69629492-59b9-478d-844d-55e2323f75a5",
                "parentUUID": "a6b58c5c-ff2f-4343-8f86-20b93a87455e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "a6b58c5c-ff2f-4343-8f86-20b93a87455e",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should accept invite by mail",
                "fullTitle": "FriendshipService acceptInviteByMail should accept invite by mail",
                "timedOut": false,
                "duration": 366,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.acceptInviteByMail(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, mail, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "69629492-59b9-478d-844d-55e2323f75a5",
                "parentUUID": "a6b58c5c-ff2f-4343-8f86-20b93a87455e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 366
          },
          {
            "title": "getDenied",
            "suites": [],
            "tests": [
              {
                "title": "should get denied",
                "fullTitle": "FriendshipService getDenied should get denied",
                "timedOut": false,
                "duration": 381,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.getDenied(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "c66cc11c-e086-4e35-bc8f-ad75b1cbf7ec",
                "parentUUID": "f4368a54-baed-413c-8940-105f0bf49b49",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "f4368a54-baed-413c-8940-105f0bf49b49",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get denied",
                "fullTitle": "FriendshipService getDenied should get denied",
                "timedOut": false,
                "duration": 381,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.getDenied(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "c66cc11c-e086-4e35-bc8f-ad75b1cbf7ec",
                "parentUUID": "f4368a54-baed-413c-8940-105f0bf49b49",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 381
          },
          {
            "title": "getFrindsCount",
            "suites": [],
            "tests": [
              {
                "title": "should get friends count",
                "fullTitle": "FriendshipService getFrindsCount should get friends count",
                "timedOut": false,
                "duration": 358,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.getFrindsCount(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6c475a40-9520-4d57-a755-caa2a009d046",
                "parentUUID": "656c817c-54b8-4f06-9917-9374bc25fc4a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "656c817c-54b8-4f06-9917-9374bc25fc4a",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get friends count",
                "fullTitle": "FriendshipService getFrindsCount should get friends count",
                "timedOut": false,
                "duration": 358,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.getFrindsCount(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6c475a40-9520-4d57-a755-caa2a009d046",
                "parentUUID": "656c817c-54b8-4f06-9917-9374bc25fc4a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 358
          },
          {
            "title": "getInvite",
            "suites": [],
            "tests": [
              {
                "title": "should get invite",
                "fullTitle": "FriendshipService getInvite should get invite",
                "timedOut": false,
                "duration": 392,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.getInvite(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "2aa02138-d1b0-4f41-9270-c3bb207bd711",
                "parentUUID": "cd22297a-839b-49c7-9c8c-598475a9046b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "cd22297a-839b-49c7-9c8c-598475a9046b",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get invite",
                "fullTitle": "FriendshipService getInvite should get invite",
                "timedOut": false,
                "duration": 392,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.getInvite(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "2aa02138-d1b0-4f41-9270-c3bb207bd711",
                "parentUUID": "cd22297a-839b-49c7-9c8c-598475a9046b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 392
          },
          {
            "title": "getMyFriends",
            "suites": [],
            "tests": [
              {
                "title": "should get my friends",
                "fullTitle": "FriendshipService getMyFriends should get my friends",
                "timedOut": false,
                "duration": 364,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.getMyFriends(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "744b957c-e499-467d-9489-9a8303d0bdca",
                "parentUUID": "58bf0aa8-8c40-44f5-9ca5-92c225b731ca",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "58bf0aa8-8c40-44f5-9ca5-92c225b731ca",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get my friends",
                "fullTitle": "FriendshipService getMyFriends should get my friends",
                "timedOut": false,
                "duration": 364,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.getMyFriends(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "744b957c-e499-467d-9489-9a8303d0bdca",
                "parentUUID": "58bf0aa8-8c40-44f5-9ca5-92c225b731ca",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 364
          },
          {
            "title": "getNotConfirm",
            "suites": [],
            "tests": [
              {
                "title": "should get not confirm",
                "fullTitle": "FriendshipService getNotConfirm should get not confirm",
                "timedOut": false,
                "duration": 347,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.getNotConfirm(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6e8e5df6-4999-4e4b-893f-6bc3695bd04e",
                "parentUUID": "8e4e6aef-958d-4213-ad0e-1afb938a7c06",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "8e4e6aef-958d-4213-ad0e-1afb938a7c06",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get not confirm",
                "fullTitle": "FriendshipService getNotConfirm should get not confirm",
                "timedOut": false,
                "duration": 347,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.getNotConfirm(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6e8e5df6-4999-4e4b-893f-6bc3695bd04e",
                "parentUUID": "8e4e6aef-958d-4213-ad0e-1afb938a7c06",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 347
          },
          {
            "title": "invite",
            "suites": [],
            "tests": [
              {
                "title": "should invite",
                "fullTitle": "FriendshipService invite should invite",
                "timedOut": false,
                "duration": 363,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.invite(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'456'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "55135efb-fc43-4ece-84ad-2bda3d774db9",
                "parentUUID": "c4b123f3-f45c-4820-9bc4-f4a1c2edd857",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "c4b123f3-f45c-4820-9bc4-f4a1c2edd857",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should invite",
                "fullTitle": "FriendshipService invite should invite",
                "timedOut": false,
                "duration": 363,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.invite(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'456'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "55135efb-fc43-4ece-84ad-2bda3d774db9",
                "parentUUID": "c4b123f3-f45c-4820-9bc4-f4a1c2edd857",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 363
          },
          {
            "title": "inviteByMails",
            "suites": [],
            "tests": [
              {
                "title": "should invite by mails",
                "fullTitle": "FriendshipService inviteByMails should invite by mails",
                "timedOut": false,
                "duration": 400,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.inviteByMails(<span class=\"hljs-string\">'123'</span>, [<span class=\"hljs-string\">'123'</span>], [mail], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "bba93f02-0f2f-4262-a61c-5a47e254ca5f",
                "parentUUID": "c2991be9-d573-44be-99a9-b99b98acecb3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "c2991be9-d573-44be-99a9-b99b98acecb3",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should invite by mails",
                "fullTitle": "FriendshipService inviteByMails should invite by mails",
                "timedOut": false,
                "duration": 400,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.inviteByMails(<span class=\"hljs-string\">'123'</span>, [<span class=\"hljs-string\">'123'</span>], [mail], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "bba93f02-0f2f-4262-a61c-5a47e254ca5f",
                "parentUUID": "c2991be9-d573-44be-99a9-b99b98acecb3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 400
          },
          {
            "title": "isMyfriend",
            "suites": [],
            "tests": [
              {
                "title": "should is my friend",
                "fullTitle": "FriendshipService isMyfriend should is my friend",
                "timedOut": false,
                "duration": 369,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.isMyfriend(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "d4bb5f6a-ad6f-44ba-a987-db89900d4b51",
                "parentUUID": "ff006d78-7908-40a7-b18a-c117e042ed28",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "ff006d78-7908-40a7-b18a-c117e042ed28",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should is my friend",
                "fullTitle": "FriendshipService isMyfriend should is my friend",
                "timedOut": false,
                "duration": 369,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.isMyfriend(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "d4bb5f6a-ad6f-44ba-a987-db89900d4b51",
                "parentUUID": "ff006d78-7908-40a7-b18a-c117e042ed28",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 369
          },
          {
            "title": "refuse",
            "suites": [],
            "tests": [
              {
                "title": "should refuse",
                "fullTitle": "FriendshipService refuse should refuse",
                "timedOut": false,
                "duration": 381,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.refuse(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "eefd5115-a50a-4b65-abbc-d7db64b2485c",
                "parentUUID": "bbdc2796-59c0-4f45-8471-a15625073252",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "bbdc2796-59c0-4f45-8471-a15625073252",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should refuse",
                "fullTitle": "FriendshipService refuse should refuse",
                "timedOut": false,
                "duration": 381,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.refuse(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "eefd5115-a50a-4b65-abbc-d7db64b2485c",
                "parentUUID": "bbdc2796-59c0-4f45-8471-a15625073252",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 381
          },
          {
            "title": "unfriend",
            "suites": [],
            "tests": [
              {
                "title": "should unfriend",
                "fullTitle": "FriendshipService unfriend should unfriend",
                "timedOut": false,
                "duration": 394,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.unfriend(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "23183c11-9ed7-4500-ab5d-643784fa2e25",
                "parentUUID": "95d56b93-bece-4db3-a924-84a8b17310b2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "95d56b93-bece-4db3-a924-84a8b17310b2",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should unfriend",
                "fullTitle": "FriendshipService unfriend should unfriend",
                "timedOut": false,
                "duration": 394,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipService.unfriend(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "23183c11-9ed7-4500-ab5d-643784fa2e25",
                "parentUUID": "95d56b93-bece-4db3-a924-84a8b17310b2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 394
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "9701eef5-680f-4be8-8ed2-e2ccee442715",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "FriendshipExtraService",
        "suites": [
          {
            "title": "getAllMyFriendsAndExt",
            "suites": [],
            "tests": [
              {
                "title": "should get all my friends and ext",
                "fullTitle": "FriendshipExtraService getAllMyFriendsAndExt should get all my friends and ext",
                "timedOut": false,
                "duration": 369,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipExtraService.getAllMyFriendsAndExt(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "5b505ef3-9d56-4e48-b903-b811bdc70f01",
                "parentUUID": "d634019d-1799-48c6-bdd8-617760575508",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "d634019d-1799-48c6-bdd8-617760575508",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get all my friends and ext",
                "fullTitle": "FriendshipExtraService getAllMyFriendsAndExt should get all my friends and ext",
                "timedOut": false,
                "duration": 369,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipExtraService.getAllMyFriendsAndExt(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "5b505ef3-9d56-4e48-b903-b811bdc70f01",
                "parentUUID": "d634019d-1799-48c6-bdd8-617760575508",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 369
          },
          {
            "title": "getMyFriendAndExt",
            "suites": [],
            "tests": [
              {
                "title": "should get my friends and ext",
                "fullTitle": "FriendshipExtraService getMyFriendAndExt should get my friends and ext",
                "timedOut": false,
                "duration": 415,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipExtraService.getMyFriendAndExt(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "2e01d012-45db-430d-b7bf-f740ff27eb77",
                "parentUUID": "9e3e5293-7aff-46b9-9c8c-1b84d9e1a458",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "9e3e5293-7aff-46b9-9c8c-1b84d9e1a458",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get my friends and ext",
                "fullTitle": "FriendshipExtraService getMyFriendAndExt should get my friends and ext",
                "timedOut": false,
                "duration": 415,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipExtraService.getMyFriendAndExt(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "2e01d012-45db-430d-b7bf-f740ff27eb77",
                "parentUUID": "9e3e5293-7aff-46b9-9c8c-1b84d9e1a458",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 415
          },
          {
            "title": "updateAllMyFriendExt",
            "suites": [],
            "tests": [
              {
                "title": "should update all my friend ext",
                "fullTitle": "FriendshipExtraService updateAllMyFriendExt should update all my friend ext",
                "timedOut": false,
                "duration": 384,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipExtraService.updateAllMyFriendExt(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "81f7620e-9d61-4a25-83e5-e1de4bd5eb54",
                "parentUUID": "e143d9da-d97d-4b80-8bd4-8f77c089b99c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "e143d9da-d97d-4b80-8bd4-8f77c089b99c",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should update all my friend ext",
                "fullTitle": "FriendshipExtraService updateAllMyFriendExt should update all my friend ext",
                "timedOut": false,
                "duration": 384,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipExtraService.updateAllMyFriendExt(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "81f7620e-9d61-4a25-83e5-e1de4bd5eb54",
                "parentUUID": "e143d9da-d97d-4b80-8bd4-8f77c089b99c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 384
          },
          {
            "title": "updateMyFriendAllExt",
            "suites": [],
            "tests": [
              {
                "title": "should update my friend all ext",
                "fullTitle": "FriendshipExtraService updateMyFriendAllExt should update my friend all ext",
                "timedOut": false,
                "duration": 349,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipExtraService.updateMyFriendAllExt(player.id, <span class=\"hljs-string\">''</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "bd8d96bf-e3b5-4098-8f9a-1587c106edf2",
                "parentUUID": "f22c4bfc-9407-4601-8f75-ddf76d7765ef",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "f22c4bfc-9407-4601-8f75-ddf76d7765ef",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should update my friend all ext",
                "fullTitle": "FriendshipExtraService updateMyFriendAllExt should update my friend all ext",
                "timedOut": false,
                "duration": 349,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipExtraService.updateMyFriendAllExt(player.id, <span class=\"hljs-string\">''</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "bd8d96bf-e3b5-4098-8f9a-1587c106edf2",
                "parentUUID": "f22c4bfc-9407-4601-8f75-ddf76d7765ef",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 349
          },
          {
            "title": "updateMyFriendExt",
            "suites": [],
            "tests": [
              {
                "title": "should update my friend ext",
                "fullTitle": "FriendshipExtraService updateMyFriendExt should update my friend ext",
                "timedOut": false,
                "duration": 366,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipExtraService.updateMyFriendExt(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e8cc120a-9694-496b-9cc5-03b04decf590",
                "parentUUID": "11acff54-c826-4782-98c9-a449b81058a0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "11acff54-c826-4782-98c9-a449b81058a0",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should update my friend ext",
                "fullTitle": "FriendshipExtraService updateMyFriendExt should update my friend ext",
                "timedOut": false,
                "duration": 366,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FriendshipExtraService.updateMyFriendExt(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e8cc120a-9694-496b-9cc5-03b04decf590",
                "parentUUID": "11acff54-c826-4782-98c9-a449b81058a0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 366
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "649c20f9-e68b-41d1-8e19-d7f629aa0914",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "BlacklistService",
        "suites": [
          {
            "title": "addPlayerIntoBlacklist",
            "suites": [],
            "tests": [
              {
                "title": "should add player into black list",
                "fullTitle": "BlacklistService addPlayerIntoBlacklist should add player into black list",
                "timedOut": false,
                "duration": 428,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.BlacklistService.addPlayerIntoBlacklist(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "01fd1e6a-3b78-4ef2-ab0e-95f53692b386",
                "parentUUID": "c5aab277-1960-4d42-96da-e412bb3d3a88",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "c5aab277-1960-4d42-96da-e412bb3d3a88",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should add player into black list",
                "fullTitle": "BlacklistService addPlayerIntoBlacklist should add player into black list",
                "timedOut": false,
                "duration": 428,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.BlacklistService.addPlayerIntoBlacklist(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "01fd1e6a-3b78-4ef2-ab0e-95f53692b386",
                "parentUUID": "c5aab277-1960-4d42-96da-e412bb3d3a88",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 428
          },
          {
            "title": "isInBlacklist",
            "suites": [],
            "tests": [
              {
                "title": "should is in black list",
                "fullTitle": "BlacklistService isInBlacklist should is in black list",
                "timedOut": false,
                "duration": 345,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.BlacklistService.isInBlacklist(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "2f575b7c-4984-406b-9f83-961e5682fa45",
                "parentUUID": "90607a16-8aed-4b29-9244-097b6191475f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "90607a16-8aed-4b29-9244-097b6191475f",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should is in black list",
                "fullTitle": "BlacklistService isInBlacklist should is in black list",
                "timedOut": false,
                "duration": 345,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.BlacklistService.isInBlacklist(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "2f575b7c-4984-406b-9f83-961e5682fa45",
                "parentUUID": "90607a16-8aed-4b29-9244-097b6191475f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 345
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "3be9c755-2f39-454b-9867-bfb1da37b5ae",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "GachaBoxService",
        "suites": [
          {
            "title": "autoBalanceDraw",
            "suites": [],
            "tests": [
              {
                "title": "should auto balance draw",
                "fullTitle": "GachaBoxService autoBalanceDraw should auto balance draw",
                "timedOut": false,
                "duration": 366,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GachaBoxService.autoBalanceDraw(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "b785b794-de22-41f8-bc78-d7d1873ed138",
                "parentUUID": "3d1fd675-8b69-4439-a28b-c3ecfba0861d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "3d1fd675-8b69-4439-a28b-c3ecfba0861d",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should auto balance draw",
                "fullTitle": "GachaBoxService autoBalanceDraw should auto balance draw",
                "timedOut": false,
                "duration": 366,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GachaBoxService.autoBalanceDraw(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "b785b794-de22-41f8-bc78-d7d1873ed138",
                "parentUUID": "3d1fd675-8b69-4439-a28b-c3ecfba0861d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 366
          },
          {
            "title": "autoBalanceDrawQuality",
            "suites": [],
            "tests": [
              {
                "title": "should auto balance draw quality",
                "fullTitle": "GachaBoxService autoBalanceDrawQuality should auto balance draw quality",
                "timedOut": false,
                "duration": 392,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GachaBoxService.autoBalanceDrawQuality(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "b7eb5683-91ef-4707-b057-84151464bd58",
                "parentUUID": "56d989c9-8ba7-4f1e-9c62-040c7f901c4a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "56d989c9-8ba7-4f1e-9c62-040c7f901c4a",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should auto balance draw quality",
                "fullTitle": "GachaBoxService autoBalanceDrawQuality should auto balance draw quality",
                "timedOut": false,
                "duration": 392,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GachaBoxService.autoBalanceDrawQuality(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "b7eb5683-91ef-4707-b057-84151464bd58",
                "parentUUID": "56d989c9-8ba7-4f1e-9c62-040c7f901c4a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 392
          },
          {
            "title": "autoBalanceDrawMaxQuality",
            "suites": [],
            "tests": [
              {
                "title": "should auto balance max draw",
                "fullTitle": "GachaBoxService autoBalanceDrawMaxQuality should auto balance max draw",
                "timedOut": false,
                "duration": 393,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GachaBoxService.autoBalanceDrawMaxQuality(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8219b2bd-b2ed-414d-a5ac-1e2c820b253e",
                "parentUUID": "877d21d5-d3a4-47b2-9a91-8441e49ada6f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "877d21d5-d3a4-47b2-9a91-8441e49ada6f",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should auto balance max draw",
                "fullTitle": "GachaBoxService autoBalanceDrawMaxQuality should auto balance max draw",
                "timedOut": false,
                "duration": 393,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GachaBoxService.autoBalanceDrawMaxQuality(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8219b2bd-b2ed-414d-a5ac-1e2c820b253e",
                "parentUUID": "877d21d5-d3a4-47b2-9a91-8441e49ada6f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 393
          },
          {
            "title": "draw",
            "suites": [],
            "tests": [
              {
                "title": "should draw",
                "fullTitle": "GachaBoxService draw should draw",
                "timedOut": false,
                "duration": 409,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GachaBoxService.draw(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "44bde7fc-7264-48eb-86bd-63ac9f546c65",
                "parentUUID": "923909de-60c3-46ee-9942-c92e37e91c52",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "923909de-60c3-46ee-9942-c92e37e91c52",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should draw",
                "fullTitle": "GachaBoxService draw should draw",
                "timedOut": false,
                "duration": 409,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GachaBoxService.draw(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "44bde7fc-7264-48eb-86bd-63ac9f546c65",
                "parentUUID": "923909de-60c3-46ee-9942-c92e37e91c52",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 409
          },
          {
            "title": "getAvailableGachaBox",
            "suites": [],
            "tests": [
              {
                "title": "should get available gacha box",
                "fullTitle": "GachaBoxService getAvailableGachaBox should get available gacha box",
                "timedOut": false,
                "duration": 450,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GachaBoxService.getAvailableGachaBox(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e78083b0-5606-4cab-bd41-d7c758648fd7",
                "parentUUID": "2090d54b-dc4c-4def-8997-b2c38c625a04",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "2090d54b-dc4c-4def-8997-b2c38c625a04",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get available gacha box",
                "fullTitle": "GachaBoxService getAvailableGachaBox should get available gacha box",
                "timedOut": false,
                "duration": 450,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GachaBoxService.getAvailableGachaBox(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e78083b0-5606-4cab-bd41-d7c758648fd7",
                "parentUUID": "2090d54b-dc4c-4def-8997-b2c38c625a04",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 450
          },
          {
            "title": "getGachaBoxByName",
            "suites": [],
            "tests": [
              {
                "title": "should get gacha box by name",
                "fullTitle": "GachaBoxService getGachaBoxByName should get gacha box by name",
                "timedOut": false,
                "duration": 383,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GachaBoxService.getGachaBoxByName(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6ce68772-0777-4056-9a43-a2e38fb76333",
                "parentUUID": "51cd6cf0-d3fe-4511-9ca8-eb5b7b5dd9c5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "51cd6cf0-d3fe-4511-9ca8-eb5b7b5dd9c5",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get gacha box by name",
                "fullTitle": "GachaBoxService getGachaBoxByName should get gacha box by name",
                "timedOut": false,
                "duration": 383,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GachaBoxService.getGachaBoxByName(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6ce68772-0777-4056-9a43-a2e38fb76333",
                "parentUUID": "51cd6cf0-d3fe-4511-9ca8-eb5b7b5dd9c5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 383
          },
          {
            "title": "getLotteriesByGachaBoxId",
            "suites": [],
            "tests": [
              {
                "title": "should get lotteries by gacha box id",
                "fullTitle": "GachaBoxService getLotteriesByGachaBoxId should get lotteries by gacha box id",
                "timedOut": false,
                "duration": 360,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GachaBoxService.getLotteriesByGachaBoxId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "0924e2d1-ad1d-4f30-8990-90fcae4e2ef3",
                "parentUUID": "eddf2a65-c08f-4f02-9174-07e6107c9bc1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "eddf2a65-c08f-4f02-9174-07e6107c9bc1",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get lotteries by gacha box id",
                "fullTitle": "GachaBoxService getLotteriesByGachaBoxId should get lotteries by gacha box id",
                "timedOut": false,
                "duration": 360,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GachaBoxService.getLotteriesByGachaBoxId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "0924e2d1-ad1d-4f30-8990-90fcae4e2ef3",
                "parentUUID": "eddf2a65-c08f-4f02-9174-07e6107c9bc1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 360
          },
          {
            "title": "limitDraw",
            "suites": [],
            "tests": [
              {
                "title": "should limit draw",
                "fullTitle": "GachaBoxService limitDraw should limit draw",
                "timedOut": false,
                "duration": 352,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GachaBoxService.limitDraw(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "06d8a801-a186-48d0-a541-e4cadf2256bf",
                "parentUUID": "c2763f57-f401-49f9-9250-fe967cf8e999",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "c2763f57-f401-49f9-9250-fe967cf8e999",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should limit draw",
                "fullTitle": "GachaBoxService limitDraw should limit draw",
                "timedOut": false,
                "duration": 352,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GachaBoxService.limitDraw(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "06d8a801-a186-48d0-a541-e4cadf2256bf",
                "parentUUID": "c2763f57-f401-49f9-9250-fe967cf8e999",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 352
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "fec2acc0-aff9-4801-8546-92dda6634621",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "LeaderBoardService",
        "suites": [
          {
            "title": "addUpLeaderBoardScore",
            "suites": [],
            "tests": [
              {
                "title": "should add up leader board score",
                "fullTitle": "LeaderBoardService addUpLeaderBoardScore should add up leader board score",
                "timedOut": false,
                "duration": 383,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.LeaderBoardService.addUpLeaderBoardScore(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "abc73885-7090-4b9d-92ae-403f5c0bdcd8",
                "parentUUID": "a3e2c5f2-86b8-4963-8e8e-28e295da8038",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "a3e2c5f2-86b8-4963-8e8e-28e295da8038",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should add up leader board score",
                "fullTitle": "LeaderBoardService addUpLeaderBoardScore should add up leader board score",
                "timedOut": false,
                "duration": 383,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.LeaderBoardService.addUpLeaderBoardScore(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "abc73885-7090-4b9d-92ae-403f5c0bdcd8",
                "parentUUID": "a3e2c5f2-86b8-4963-8e8e-28e295da8038",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 383
          },
          {
            "title": "getLeaderBoardByLeaderId",
            "suites": [],
            "tests": [
              {
                "title": "should get leader board by leader id",
                "fullTitle": "LeaderBoardService getLeaderBoardByLeaderId should get leader board by leader id",
                "timedOut": false,
                "duration": 358,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.LeaderBoardService.getLeaderBoardByLeaderId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "1829355c-6589-412d-9b41-ac5314667108",
                "parentUUID": "36cbee67-8ebf-4df7-9fe3-6d7285520b3d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "36cbee67-8ebf-4df7-9fe3-6d7285520b3d",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get leader board by leader id",
                "fullTitle": "LeaderBoardService getLeaderBoardByLeaderId should get leader board by leader id",
                "timedOut": false,
                "duration": 358,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.LeaderBoardService.getLeaderBoardByLeaderId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "1829355c-6589-412d-9b41-ac5314667108",
                "parentUUID": "36cbee67-8ebf-4df7-9fe3-6d7285520b3d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 358
          },
          {
            "title": "getLeaderBoardScoreByExample",
            "suites": [],
            "tests": [
              {
                "title": "should get leader board score by example",
                "fullTitle": "LeaderBoardService getLeaderBoardScoreByExample should get leader board score by example",
                "timedOut": false,
                "duration": 351,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.LeaderBoardService.getLeaderBoardScoreByExample(<span class=\"hljs-string\">''</span>, player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "89a4c817-160d-4002-971a-2b1791f914b7",
                "parentUUID": "3643939d-bb2a-4ce9-9ddc-a1667fe46a5f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "3643939d-bb2a-4ce9-9ddc-a1667fe46a5f",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get leader board score by example",
                "fullTitle": "LeaderBoardService getLeaderBoardScoreByExample should get leader board score by example",
                "timedOut": false,
                "duration": 351,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.LeaderBoardService.getLeaderBoardScoreByExample(<span class=\"hljs-string\">''</span>, player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "89a4c817-160d-4002-971a-2b1791f914b7",
                "parentUUID": "3643939d-bb2a-4ce9-9ddc-a1667fe46a5f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 351
          },
          {
            "title": "getLeaderBoardScoreByLeaderIdAndPlayerId",
            "suites": [],
            "tests": [
              {
                "title": "should get leader board score by leader id and player id",
                "fullTitle": "LeaderBoardService getLeaderBoardScoreByLeaderIdAndPlayerId should get leader board score by leader id and player id",
                "timedOut": false,
                "duration": 372,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.LeaderBoardService.getLeaderBoardScoreByLeaderIdAndPlayerId(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f38deaed-ab37-434a-b655-5e158d72cef6",
                "parentUUID": "9cfbf728-c37f-4056-aaa4-45360c8c7247",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "9cfbf728-c37f-4056-aaa4-45360c8c7247",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get leader board score by leader id and player id",
                "fullTitle": "LeaderBoardService getLeaderBoardScoreByLeaderIdAndPlayerId should get leader board score by leader id and player id",
                "timedOut": false,
                "duration": 372,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.LeaderBoardService.getLeaderBoardScoreByLeaderIdAndPlayerId(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f38deaed-ab37-434a-b655-5e158d72cef6",
                "parentUUID": "9cfbf728-c37f-4056-aaa4-45360c8c7247",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 372
          },
          {
            "title": "getLeaderBoardScoresByLeaderIdAndPlayerId",
            "suites": [],
            "tests": [
              {
                "title": "should get leader board scores by leader id and player id",
                "fullTitle": "LeaderBoardService getLeaderBoardScoresByLeaderIdAndPlayerId should get leader board scores by leader id and player id",
                "timedOut": false,
                "duration": 416,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.LeaderBoardService.getLeaderBoardScoresByLeaderIdAndPlayerId(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "c71dc6b4-3646-42fc-b23c-9706dd463764",
                "parentUUID": "e67b6466-f471-4e9a-b842-8f5b00380d9c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "e67b6466-f471-4e9a-b842-8f5b00380d9c",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get leader board scores by leader id and player id",
                "fullTitle": "LeaderBoardService getLeaderBoardScoresByLeaderIdAndPlayerId should get leader board scores by leader id and player id",
                "timedOut": false,
                "duration": 416,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.LeaderBoardService.getLeaderBoardScoresByLeaderIdAndPlayerId(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "c71dc6b4-3646-42fc-b23c-9706dd463764",
                "parentUUID": "e67b6466-f471-4e9a-b842-8f5b00380d9c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 416
          },
          {
            "title": "getTopLeaderBoardScoreByLeaderId",
            "suites": [],
            "tests": [
              {
                "title": "should get top leader board score by leader id",
                "fullTitle": "LeaderBoardService getTopLeaderBoardScoreByLeaderId should get top leader board score by leader id",
                "timedOut": false,
                "duration": 384,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.LeaderBoardService.getTopLeaderBoardScoreByLeaderId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "a7a92b45-e3e4-4d7a-8ef0-fd4b9b2583f6",
                "parentUUID": "0683721b-6f45-4e12-b034-91d41ba96801",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "0683721b-6f45-4e12-b034-91d41ba96801",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get top leader board score by leader id",
                "fullTitle": "LeaderBoardService getTopLeaderBoardScoreByLeaderId should get top leader board score by leader id",
                "timedOut": false,
                "duration": 384,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.LeaderBoardService.getTopLeaderBoardScoreByLeaderId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "a7a92b45-e3e4-4d7a-8ef0-fd4b9b2583f6",
                "parentUUID": "0683721b-6f45-4e12-b034-91d41ba96801",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 384
          },
          {
            "title": "submitLeaderBoardScore",
            "suites": [],
            "tests": [
              {
                "title": "should submit leader board score",
                "fullTitle": "LeaderBoardService submitLeaderBoardScore should submit leader board score",
                "timedOut": false,
                "duration": 361,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.LeaderBoardService.submitLeaderBoardScore(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "caaa0b53-54ca-4feb-8b9c-2a9865f1bb1e",
                "parentUUID": "6a2431d3-b1a4-4f68-a331-ec43423442d4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "6a2431d3-b1a4-4f68-a331-ec43423442d4",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should submit leader board score",
                "fullTitle": "LeaderBoardService submitLeaderBoardScore should submit leader board score",
                "timedOut": false,
                "duration": 361,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.LeaderBoardService.submitLeaderBoardScore(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "caaa0b53-54ca-4feb-8b9c-2a9865f1bb1e",
                "parentUUID": "6a2431d3-b1a4-4f68-a331-ec43423442d4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 361
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "026709ad-0898-45d9-a315-c0cd5ecb3424",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "MailService",
        "suites": [
          {
            "title": "sendMail",
            "suites": [],
            "tests": [
              {
                "title": "should send mail",
                "fullTitle": "MailService sendMail should send mail",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "f8e1b4d9-4ea6-4209-b695-81ab360b14fa",
                "parentUUID": "df2a3780-a38d-462a-8ae0-ba3cffd380ff",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "should send mail",
                "fullTitle": "MailService sendMail should send mail",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "f8e1b4d9-4ea6-4209-b695-81ab360b14fa",
                "parentUUID": "df2a3780-a38d-462a-8ae0-ba3cffd380ff",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "df2a3780-a38d-462a-8ae0-ba3cffd380ff",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "receive",
            "suites": [],
            "tests": [
              {
                "title": "should receive",
                "fullTitle": "MailService receive should receive",
                "timedOut": false,
                "duration": 372,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.MailService.receive(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "81ba37fb-6c32-4bfd-81d7-96065a103e1e",
                "parentUUID": "764dc61b-b92b-4157-932a-5250f53e6907",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "764dc61b-b92b-4157-932a-5250f53e6907",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should receive",
                "fullTitle": "MailService receive should receive",
                "timedOut": false,
                "duration": 372,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.MailService.receive(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "81ba37fb-6c32-4bfd-81d7-96065a103e1e",
                "parentUUID": "764dc61b-b92b-4157-932a-5250f53e6907",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 372
          },
          {
            "title": "receiveUnread",
            "suites": [],
            "tests": [
              {
                "title": "should receive unread",
                "fullTitle": "MailService receiveUnread should receive unread",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "d6eac2b6-edd6-41a4-adfb-555c3203d517",
                "parentUUID": "7bce74f4-ace9-49ca-850c-de56de41023f",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "should receive unread",
                "fullTitle": "MailService receiveUnread should receive unread",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "d6eac2b6-edd6-41a4-adfb-555c3203d517",
                "parentUUID": "7bce74f4-ace9-49ca-850c-de56de41023f",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "7bce74f4-ace9-49ca-850c-de56de41023f",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "readMail",
            "suites": [],
            "tests": [
              {
                "title": "should read mail",
                "fullTitle": "MailService readMail should read mail",
                "timedOut": false,
                "duration": 365,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.MailService.readMail(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "4e9d3dd0-00b3-404c-bcc3-ca7c156dc6ef",
                "parentUUID": "7bfded94-4029-44d2-bd7a-f0e74a8a0183",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "7bfded94-4029-44d2-bd7a-f0e74a8a0183",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should read mail",
                "fullTitle": "MailService readMail should read mail",
                "timedOut": false,
                "duration": 365,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.MailService.readMail(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "4e9d3dd0-00b3-404c-bcc3-ca7c156dc6ef",
                "parentUUID": "7bfded94-4029-44d2-bd7a-f0e74a8a0183",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 365
          },
          {
            "title": "readAndPickAttachment",
            "suites": [],
            "tests": [
              {
                "title": "should read and pick attachment",
                "fullTitle": "MailService readAndPickAttachment should read and pick attachment",
                "timedOut": false,
                "duration": 388,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.MailService.readAndPickAttachment(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e2305527-1459-4d52-87e4-88e1def7442f",
                "parentUUID": "07fc684d-678c-47f4-aa14-0ddfae4ee4a8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "07fc684d-678c-47f4-aa14-0ddfae4ee4a8",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should read and pick attachment",
                "fullTitle": "MailService readAndPickAttachment should read and pick attachment",
                "timedOut": false,
                "duration": 388,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.MailService.readAndPickAttachment(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e2305527-1459-4d52-87e4-88e1def7442f",
                "parentUUID": "07fc684d-678c-47f4-aa14-0ddfae4ee4a8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 388
          },
          {
            "title": "deleteMail",
            "suites": [],
            "tests": [
              {
                "title": "should delete mail",
                "fullTitle": "MailService deleteMail should delete mail",
                "timedOut": false,
                "duration": 407,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.MailService.deleteMail([<span class=\"hljs-string\">'123'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "721c02f1-29f2-4d24-9c72-84b9d664d3d8",
                "parentUUID": "1b0b4425-e649-49a8-9ab5-bee8d945eb23",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "1b0b4425-e649-49a8-9ab5-bee8d945eb23",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should delete mail",
                "fullTitle": "MailService deleteMail should delete mail",
                "timedOut": false,
                "duration": 407,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.MailService.deleteMail([<span class=\"hljs-string\">'123'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "721c02f1-29f2-4d24-9c72-84b9d664d3d8",
                "parentUUID": "1b0b4425-e649-49a8-9ab5-bee8d945eb23",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 407
          },
          {
            "title": "getReadedAndUnreadedMails",
            "suites": [],
            "tests": [
              {
                "title": "should get readed and unreaded mails",
                "fullTitle": "MailService getReadedAndUnreadedMails should get readed and unreaded mails",
                "timedOut": false,
                "duration": 410,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.MailService.getReadedAndUnreadedMails(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "ae3a703e-2a36-4f8e-94f8-ff370139bdf0",
                "parentUUID": "91fcb30f-5a60-41ec-a3b3-9f50f579675f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "91fcb30f-5a60-41ec-a3b3-9f50f579675f",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get readed and unreaded mails",
                "fullTitle": "MailService getReadedAndUnreadedMails should get readed and unreaded mails",
                "timedOut": false,
                "duration": 410,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.MailService.getReadedAndUnreadedMails(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "ae3a703e-2a36-4f8e-94f8-ff370139bdf0",
                "parentUUID": "91fcb30f-5a60-41ec-a3b3-9f50f579675f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 410
          },
          {
            "title": "pickAttachment",
            "suites": [],
            "tests": [
              {
                "title": "should pich attachment",
                "fullTitle": "MailService pickAttachment should pich attachment",
                "timedOut": false,
                "duration": 429,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.MailService.pickAttachment(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "9183a74e-ade3-4d84-acfc-19ff7aae3997",
                "parentUUID": "7e7d9d2e-d678-4137-9036-e1603aa50036",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "7e7d9d2e-d678-4137-9036-e1603aa50036",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should pich attachment",
                "fullTitle": "MailService pickAttachment should pich attachment",
                "timedOut": false,
                "duration": 429,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.MailService.pickAttachment(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "9183a74e-ade3-4d84-acfc-19ff7aae3997",
                "parentUUID": "7e7d9d2e-d678-4137-9036-e1603aa50036",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 429
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "9e55f3fe-8670-4f08-82b7-f6d88b890180",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "NotificationService",
        "suites": [
          {
            "title": "getLatestNotification",
            "suites": [],
            "tests": [
              {
                "title": "should get latest notification",
                "fullTitle": "NotificationService getLatestNotification should get latest notification",
                "timedOut": false,
                "duration": 462,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.NotificationService.getLatestNotification(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "94d36e88-0057-4bcf-9a26-e252fe8b1fa2",
                "parentUUID": "4abeacd6-c60e-426f-8eda-ebb0938ca765",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "4abeacd6-c60e-426f-8eda-ebb0938ca765",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get latest notification",
                "fullTitle": "NotificationService getLatestNotification should get latest notification",
                "timedOut": false,
                "duration": 462,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.NotificationService.getLatestNotification(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "94d36e88-0057-4bcf-9a26-e252fe8b1fa2",
                "parentUUID": "4abeacd6-c60e-426f-8eda-ebb0938ca765",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 462
          },
          {
            "title": "getLatestNotificationByTime",
            "suites": [],
            "tests": [
              {
                "title": "should get latest notification by time",
                "fullTitle": "NotificationService getLatestNotificationByTime should get latest notification by time",
                "timedOut": false,
                "duration": 411,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.NotificationService.getLatestNotificationByTime(player.id, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "b5b23d21-ac2a-4f35-9ba5-f728651af432",
                "parentUUID": "d0601f3a-4804-4c9f-a578-654f971965e7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "d0601f3a-4804-4c9f-a578-654f971965e7",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get latest notification by time",
                "fullTitle": "NotificationService getLatestNotificationByTime should get latest notification by time",
                "timedOut": false,
                "duration": 411,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.NotificationService.getLatestNotificationByTime(player.id, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "b5b23d21-ac2a-4f35-9ba5-f728651af432",
                "parentUUID": "d0601f3a-4804-4c9f-a578-654f971965e7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 411
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "63011e82-328f-4b40-8adc-6611204b776f",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "PurchaseService",
        "suites": [
          {
            "title": "getSupportedStores",
            "suites": [],
            "tests": [
              {
                "title": "should get supported stores",
                "fullTitle": "PurchaseService getSupportedStores should get supported stores",
                "timedOut": false,
                "duration": 382,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PurchaseService.getSupportedStores(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "7eea69b5-7541-4de8-842d-1eaad1f5c88c",
                "parentUUID": "b4001da8-b898-4a38-9d23-accecb5b71e5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "b4001da8-b898-4a38-9d23-accecb5b71e5",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get supported stores",
                "fullTitle": "PurchaseService getSupportedStores should get supported stores",
                "timedOut": false,
                "duration": 382,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PurchaseService.getSupportedStores(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "7eea69b5-7541-4de8-842d-1eaad1f5c88c",
                "parentUUID": "b4001da8-b898-4a38-9d23-accecb5b71e5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 382
          },
          {
            "title": "getAvailableChargePoints",
            "suites": [],
            "tests": [
              {
                "title": "should get available charge points",
                "fullTitle": "PurchaseService getAvailableChargePoints should get available charge points",
                "timedOut": false,
                "duration": 402,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PurchaseService.getAvailableChargePoints(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "33d0345f-dc81-4d25-ae78-a7319fa81b0a",
                "parentUUID": "417cbd5c-5311-41ad-a311-11bd21c12813",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "417cbd5c-5311-41ad-a311-11bd21c12813",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get available charge points",
                "fullTitle": "PurchaseService getAvailableChargePoints should get available charge points",
                "timedOut": false,
                "duration": 402,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PurchaseService.getAvailableChargePoints(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "33d0345f-dc81-4d25-ae78-a7319fa81b0a",
                "parentUUID": "417cbd5c-5311-41ad-a311-11bd21c12813",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 402
          },
          {
            "title": "getPaymentResult",
            "suites": [],
            "tests": [
              {
                "title": "should get payment result",
                "fullTitle": "PurchaseService getPaymentResult should get payment result",
                "timedOut": false,
                "duration": 385,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PurchaseService.getPaymentResult(player.id, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8c5fb760-4979-40da-9704-1b999a30c867",
                "parentUUID": "4add43c7-78c2-41f3-8cc0-1f859ff254f0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "4add43c7-78c2-41f3-8cc0-1f859ff254f0",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get payment result",
                "fullTitle": "PurchaseService getPaymentResult should get payment result",
                "timedOut": false,
                "duration": 385,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PurchaseService.getPaymentResult(player.id, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8c5fb760-4979-40da-9704-1b999a30c867",
                "parentUUID": "4add43c7-78c2-41f3-8cc0-1f859ff254f0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 385
          },
          {
            "title": "getTotalChargeCost",
            "suites": [],
            "tests": [
              {
                "title": "should get total charge cost",
                "fullTitle": "PurchaseService getTotalChargeCost should get total charge cost",
                "timedOut": false,
                "duration": 386,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PurchaseService.getTotalChargeCost(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "2e833b16-03dd-44ec-baa0-f55776d4530a",
                "parentUUID": "e5910f72-57c2-4f38-bbf7-f356935318de",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "e5910f72-57c2-4f38-bbf7-f356935318de",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get total charge cost",
                "fullTitle": "PurchaseService getTotalChargeCost should get total charge cost",
                "timedOut": false,
                "duration": 386,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PurchaseService.getTotalChargeCost(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "2e833b16-03dd-44ec-baa0-f55776d4530a",
                "parentUUID": "e5910f72-57c2-4f38-bbf7-f356935318de",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 386
          },
          {
            "title": "isFirstCharge",
            "suites": [],
            "tests": [
              {
                "title": "should is first charge",
                "fullTitle": "PurchaseService isFirstCharge should is first charge",
                "timedOut": false,
                "duration": 366,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PurchaseService.isFirstCharge(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "a4820a0a-46f8-4130-a77e-11874c54aabc",
                "parentUUID": "c8dedd39-e157-4d4d-b518-018c103ed583",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "c8dedd39-e157-4d4d-b518-018c103ed583",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should is first charge",
                "fullTitle": "PurchaseService isFirstCharge should is first charge",
                "timedOut": false,
                "duration": 366,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PurchaseService.isFirstCharge(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "a4820a0a-46f8-4130-a77e-11874c54aabc",
                "parentUUID": "c8dedd39-e157-4d4d-b518-018c103ed583",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 366
          },
          {
            "title": "getChargeTimes",
            "suites": [],
            "tests": [
              {
                "title": "should get charge times",
                "fullTitle": "PurchaseService getChargeTimes should get charge times",
                "timedOut": false,
                "duration": 392,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PurchaseService.getChargeTimes(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "cd5627bf-e309-410d-92ef-85e3f533ee24",
                "parentUUID": "7a9a34b2-972b-4ffe-9328-18aa623842ec",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "7a9a34b2-972b-4ffe-9328-18aa623842ec",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get charge times",
                "fullTitle": "PurchaseService getChargeTimes should get charge times",
                "timedOut": false,
                "duration": 392,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PurchaseService.getChargeTimes(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "cd5627bf-e309-410d-92ef-85e3f533ee24",
                "parentUUID": "7a9a34b2-972b-4ffe-9328-18aa623842ec",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 392
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "644ceb73-65bf-442f-847b-5c701b55a37c",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "StoreService",
        "suites": [
          {
            "title": "getDefaultStore",
            "suites": [],
            "tests": [
              {
                "title": "should get default store",
                "fullTitle": "StoreService getDefaultStore should get default store",
                "timedOut": false,
                "duration": 376,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StoreService.getDefaultStore(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "c5336700-0391-498f-af47-1abc540ea416",
                "parentUUID": "59a6dc30-d067-4130-a6f2-7f5f25ecf7cf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "59a6dc30-d067-4130-a6f2-7f5f25ecf7cf",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get default store",
                "fullTitle": "StoreService getDefaultStore should get default store",
                "timedOut": false,
                "duration": 376,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StoreService.getDefaultStore(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "c5336700-0391-498f-af47-1abc540ea416",
                "parentUUID": "59a6dc30-d067-4130-a6f2-7f5f25ecf7cf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 376
          },
          {
            "title": "getStore",
            "suites": [],
            "tests": [
              {
                "title": "should ge store",
                "fullTitle": "StoreService getStore should ge store",
                "timedOut": false,
                "duration": 374,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StoreService.getStore(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "719a7a6f-b33c-4866-8aec-bb91d7c69cdc",
                "parentUUID": "c04838c6-d5de-4a82-a65e-546e8995f083",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "c04838c6-d5de-4a82-a65e-546e8995f083",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should ge store",
                "fullTitle": "StoreService getStore should ge store",
                "timedOut": false,
                "duration": 374,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StoreService.getStore(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "719a7a6f-b33c-4866-8aec-bb91d7c69cdc",
                "parentUUID": "c04838c6-d5de-4a82-a65e-546e8995f083",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 374
          },
          {
            "title": "purchase",
            "suites": [],
            "tests": [
              {
                "title": "should purchase",
                "fullTitle": "StoreService purchase should purchase",
                "timedOut": false,
                "duration": 400,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StoreService.purchase(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "b726859c-423b-4ed2-a983-737afe4b6d49",
                "parentUUID": "9d031f9b-903b-435e-9a70-f76143bcffbb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "9d031f9b-903b-435e-9a70-f76143bcffbb",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should purchase",
                "fullTitle": "StoreService purchase should purchase",
                "timedOut": false,
                "duration": 400,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StoreService.purchase(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "b726859c-423b-4ed2-a983-737afe4b6d49",
                "parentUUID": "9d031f9b-903b-435e-9a70-f76143bcffbb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 400
          },
          {
            "title": "countStoreOrdersByPlayerId",
            "suites": [],
            "tests": [
              {
                "title": "should count store orders by player id",
                "fullTitle": "StoreService countStoreOrdersByPlayerId should count store orders by player id",
                "timedOut": false,
                "duration": 353,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StoreService.countStoreOrdersByPlayerId(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "aebace98-fa78-4835-98a7-1a58d69bd005",
                "parentUUID": "9755867c-cd35-4739-9d91-c45f7e0d1dce",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "9755867c-cd35-4739-9d91-c45f7e0d1dce",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should count store orders by player id",
                "fullTitle": "StoreService countStoreOrdersByPlayerId should count store orders by player id",
                "timedOut": false,
                "duration": 353,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StoreService.countStoreOrdersByPlayerId(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "aebace98-fa78-4835-98a7-1a58d69bd005",
                "parentUUID": "9755867c-cd35-4739-9d91-c45f7e0d1dce",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 353
          },
          {
            "title": "countItemOrdersByPlayerId",
            "suites": [],
            "tests": [
              {
                "title": "should count item orders by player id",
                "fullTitle": "StoreService countItemOrdersByPlayerId should count item orders by player id",
                "timedOut": false,
                "duration": 367,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StoreService.countItemOrdersByPlayerId(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e54494b2-ea27-4c4c-9725-89c6b38b07da",
                "parentUUID": "74a99d77-7c18-4f55-b32a-5ac7fb26125c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "74a99d77-7c18-4f55-b32a-5ac7fb26125c",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should count item orders by player id",
                "fullTitle": "StoreService countItemOrdersByPlayerId should count item orders by player id",
                "timedOut": false,
                "duration": 367,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StoreService.countItemOrdersByPlayerId(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e54494b2-ea27-4c4c-9725-89c6b38b07da",
                "parentUUID": "74a99d77-7c18-4f55-b32a-5ac7fb26125c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 367
          },
          {
            "title": "getOrderById",
            "suites": [],
            "tests": [
              {
                "title": "should get oder by id",
                "fullTitle": "StoreService getOrderById should get oder by id",
                "timedOut": false,
                "duration": 350,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StoreService.getOrderById(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "2f9f46a3-4424-4753-b079-8df8a5fd7a71",
                "parentUUID": "c311a0cf-c947-4b32-b68b-7927e4bbf319",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "c311a0cf-c947-4b32-b68b-7927e4bbf319",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get oder by id",
                "fullTitle": "StoreService getOrderById should get oder by id",
                "timedOut": false,
                "duration": 350,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StoreService.getOrderById(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "2f9f46a3-4424-4753-b079-8df8a5fd7a71",
                "parentUUID": "c311a0cf-c947-4b32-b68b-7927e4bbf319",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 350
          },
          {
            "title": "getLastPurchaseTimeMillis",
            "suites": [],
            "tests": [
              {
                "title": "should get last purchase time mills",
                "fullTitle": "StoreService getLastPurchaseTimeMillis should get last purchase time mills",
                "timedOut": false,
                "duration": 392,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StoreService.getLastPurchaseTimeMillis(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "40e2feaa-9c42-4624-9d91-dfb6f82ed597",
                "parentUUID": "511dcd62-4e25-4ea1-883d-b2bed3d1dcc8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "511dcd62-4e25-4ea1-883d-b2bed3d1dcc8",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get last purchase time mills",
                "fullTitle": "StoreService getLastPurchaseTimeMillis should get last purchase time mills",
                "timedOut": false,
                "duration": 392,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StoreService.getLastPurchaseTimeMillis(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "40e2feaa-9c42-4624-9d91-dfb6f82ed597",
                "parentUUID": "511dcd62-4e25-4ea1-883d-b2bed3d1dcc8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 392
          },
          {
            "title": "updateOrderStatus",
            "suites": [],
            "tests": [
              {
                "title": "should update order status",
                "fullTitle": "StoreService updateOrderStatus should update order status",
                "timedOut": false,
                "duration": 358,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StoreService.updateOrderStatus(<span class=\"hljs-string\">''</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "1d8b5bd1-61a4-40f8-824a-f802ccf1045b",
                "parentUUID": "dc15d5ad-bbd1-4b19-8742-0d902e7b8b7a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "dc15d5ad-bbd1-4b19-8742-0d902e7b8b7a",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should update order status",
                "fullTitle": "StoreService updateOrderStatus should update order status",
                "timedOut": false,
                "duration": 358,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StoreService.updateOrderStatus(<span class=\"hljs-string\">''</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "1d8b5bd1-61a4-40f8-824a-f802ccf1045b",
                "parentUUID": "dc15d5ad-bbd1-4b19-8742-0d902e7b8b7a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 358
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "c05df33e-c2a3-44a0-b47f-a956f4e2d49e",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ChargePointService",
        "suites": [
          {
            "title": "getAllChargePoints",
            "suites": [],
            "tests": [
              {
                "title": "should get all charge points",
                "fullTitle": "ChargePointService getAllChargePoints should get all charge points",
                "timedOut": false,
                "duration": 361,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.ChargePointService.getAllChargePoints(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e5d91884-e880-418b-92da-45f719da1844",
                "parentUUID": "8f168934-0d39-4821-8fc3-24105591ccd0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "8f168934-0d39-4821-8fc3-24105591ccd0",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get all charge points",
                "fullTitle": "ChargePointService getAllChargePoints should get all charge points",
                "timedOut": false,
                "duration": 361,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.ChargePointService.getAllChargePoints(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e5d91884-e880-418b-92da-45f719da1844",
                "parentUUID": "8f168934-0d39-4821-8fc3-24105591ccd0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 361
          },
          {
            "title": "getAvailableChargePoints",
            "suites": [],
            "tests": [
              {
                "title": "should get available charge points",
                "fullTitle": "ChargePointService getAvailableChargePoints should get available charge points",
                "timedOut": false,
                "duration": 320,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.ChargePointService.getAvailableChargePoints(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "4958986c-1bc6-4359-a0a2-8a31a03ddf1d",
                "parentUUID": "44ff5716-eb6d-4e76-a2d5-09fb33e35c74",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "44ff5716-eb6d-4e76-a2d5-09fb33e35c74",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get available charge points",
                "fullTitle": "ChargePointService getAvailableChargePoints should get available charge points",
                "timedOut": false,
                "duration": 320,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.ChargePointService.getAvailableChargePoints(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "4958986c-1bc6-4359-a0a2-8a31a03ddf1d",
                "parentUUID": "44ff5716-eb6d-4e76-a2d5-09fb33e35c74",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 320
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "f99def4e-275b-4470-9cac-afb8e78a1d54",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "BossService",
        "suites": [
          {
            "title": "getByBossIdstr",
            "suites": [],
            "tests": [
              {
                "title": "should get by boss id str",
                "fullTitle": "BossService getByBossIdstr should get by boss id str",
                "timedOut": false,
                "duration": 382,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.BossService.getByBossIdstr([<span class=\"hljs-string\">''</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f042230c-e7a3-4bee-814f-70505e88b371",
                "parentUUID": "81a273dd-ac59-41a1-b7e3-1ab62454a387",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "81a273dd-ac59-41a1-b7e3-1ab62454a387",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get by boss id str",
                "fullTitle": "BossService getByBossIdstr should get by boss id str",
                "timedOut": false,
                "duration": 382,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.BossService.getByBossIdstr([<span class=\"hljs-string\">''</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f042230c-e7a3-4bee-814f-70505e88b371",
                "parentUUID": "81a273dd-ac59-41a1-b7e3-1ab62454a387",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 382
          },
          {
            "title": "getByBossIdint",
            "suites": [],
            "tests": [
              {
                "title": "should get by boss id int",
                "fullTitle": "BossService getByBossIdint should get by boss id int",
                "timedOut": false,
                "duration": 433,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.BossService.getByBossIdint([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f6e11ea9-0b58-45f9-bacb-cc93347b6c8e",
                "parentUUID": "67fb0be3-2b5a-41b0-b4b9-e42471836462",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "67fb0be3-2b5a-41b0-b4b9-e42471836462",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get by boss id int",
                "fullTitle": "BossService getByBossIdint should get by boss id int",
                "timedOut": false,
                "duration": 433,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.BossService.getByBossIdint([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f6e11ea9-0b58-45f9-bacb-cc93347b6c8e",
                "parentUUID": "67fb0be3-2b5a-41b0-b4b9-e42471836462",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 433
          },
          {
            "title": "getByBossId",
            "suites": [],
            "tests": [
              {
                "title": "should get by boss id",
                "fullTitle": "BossService getByBossId should get by boss id",
                "timedOut": false,
                "duration": 388,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.BossService.getByBossId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "c202e402-54c1-4cdb-828d-136fe062af28",
                "parentUUID": "643b11e3-84e1-4c5e-a4e0-c0bf7ae27efe",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "643b11e3-84e1-4c5e-a4e0-c0bf7ae27efe",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get by boss id",
                "fullTitle": "BossService getByBossId should get by boss id",
                "timedOut": false,
                "duration": 388,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.BossService.getByBossId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "c202e402-54c1-4cdb-828d-136fe062af28",
                "parentUUID": "643b11e3-84e1-4c5e-a4e0-c0bf7ae27efe",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 388
          },
          {
            "title": "attack",
            "suites": [],
            "tests": [
              {
                "title": "should attack",
                "fullTitle": "BossService attack should attack",
                "timedOut": false,
                "duration": 371,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.BossService.attack(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "b0c3fd8e-f194-4eab-bc15-1a80a1c96756",
                "parentUUID": "6bddc173-a938-4f8e-b8ca-2aabee90252f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "6bddc173-a938-4f8e-b8ca-2aabee90252f",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should attack",
                "fullTitle": "BossService attack should attack",
                "timedOut": false,
                "duration": 371,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.BossService.attack(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "b0c3fd8e-f194-4eab-bc15-1a80a1c96756",
                "parentUUID": "6bddc173-a938-4f8e-b8ca-2aabee90252f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 371
          },
          {
            "title": "getCurrentHP",
            "suites": [],
            "tests": [
              {
                "title": "should get current hp",
                "fullTitle": "BossService getCurrentHP should get current hp",
                "timedOut": false,
                "duration": 442,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.BossService.getCurrentHP(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "d3774a1c-cc21-4d83-84e0-7eb5f44e5094",
                "parentUUID": "034f806d-f889-4524-8a43-c6c82e873173",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "034f806d-f889-4524-8a43-c6c82e873173",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get current hp",
                "fullTitle": "BossService getCurrentHP should get current hp",
                "timedOut": false,
                "duration": 442,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.BossService.getCurrentHP(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "d3774a1c-cc21-4d83-84e0-7eb5f44e5094",
                "parentUUID": "034f806d-f889-4524-8a43-c6c82e873173",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 442
          },
          {
            "title": "getLastAttackPlayer",
            "suites": [],
            "tests": [
              {
                "title": "should get last attack player",
                "fullTitle": "BossService getLastAttackPlayer should get last attack player",
                "timedOut": false,
                "duration": 401,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.BossService.getLastAttackPlayer(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "611f9a22-21e9-463b-bc40-99a51e9c0c0e",
                "parentUUID": "96204ecc-10ea-4146-b112-0395e2d8a2ec",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "96204ecc-10ea-4146-b112-0395e2d8a2ec",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get last attack player",
                "fullTitle": "BossService getLastAttackPlayer should get last attack player",
                "timedOut": false,
                "duration": 401,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.BossService.getLastAttackPlayer(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "611f9a22-21e9-463b-bc40-99a51e9c0c0e",
                "parentUUID": "96204ecc-10ea-4146-b112-0395e2d8a2ec",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 401
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "d5494545-b866-4ab8-9ecb-dab53f6982f2",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "FileStorageService",
        "suites": [
          {
            "title": "getUrl",
            "suites": [],
            "tests": [
              {
                "title": "should get url",
                "fullTitle": "FileStorageService getUrl should get url",
                "timedOut": false,
                "duration": 393,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FileStorageService.getUrl(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "cdbc3c5d-771e-419f-90d9-f44fff32be3e",
                "parentUUID": "8a0cb77e-ab1c-4f80-b6f9-6e1351a79e90",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "8a0cb77e-ab1c-4f80-b6f9-6e1351a79e90",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get url",
                "fullTitle": "FileStorageService getUrl should get url",
                "timedOut": false,
                "duration": 393,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FileStorageService.getUrl(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "cdbc3c5d-771e-419f-90d9-f44fff32be3e",
                "parentUUID": "8a0cb77e-ab1c-4f80-b6f9-6e1351a79e90",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 393
          },
          {
            "title": "delete",
            "suites": [],
            "tests": [
              {
                "title": "should delete",
                "fullTitle": "FileStorageService delete should delete",
                "timedOut": false,
                "duration": 372,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FileStorageService.delete(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "60d0d024-238a-45f0-a6cd-e6f542210ccf",
                "parentUUID": "2dd5a3ff-39dc-4c7b-a1db-fc08432134e6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "2dd5a3ff-39dc-4c7b-a1db-fc08432134e6",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should delete",
                "fullTitle": "FileStorageService delete should delete",
                "timedOut": false,
                "duration": 372,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.FileStorageService.delete(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "60d0d024-238a-45f0-a6cd-e6f542210ccf",
                "parentUUID": "2dd5a3ff-39dc-4c7b-a1db-fc08432134e6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 372
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "6b0de3f1-42ec-4144-a30e-7a5c2136332b",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "GiftCodeService",
        "suites": [
          {
            "title": "getGifts",
            "suites": [],
            "tests": [
              {
                "title": "should get gifts",
                "fullTitle": "GiftCodeService getGifts should get gifts",
                "timedOut": false,
                "duration": 417,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GiftCodeService.getGifts(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "7bb73a63-6997-499d-9191-ead8e299c85b",
                "parentUUID": "3838ce82-bba1-4ac1-a9a5-68a24c43ea6d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "3838ce82-bba1-4ac1-a9a5-68a24c43ea6d",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get gifts",
                "fullTitle": "GiftCodeService getGifts should get gifts",
                "timedOut": false,
                "duration": 417,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GiftCodeService.getGifts(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "7bb73a63-6997-499d-9191-ead8e299c85b",
                "parentUUID": "3838ce82-bba1-4ac1-a9a5-68a24c43ea6d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 417
          },
          {
            "title": "redeem",
            "suites": [],
            "tests": [
              {
                "title": "should redeem",
                "fullTitle": "GiftCodeService redeem should redeem",
                "timedOut": false,
                "duration": 373,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GiftCodeService.redeem(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6532232f-4989-4508-9e7b-1e14ffc63cdb",
                "parentUUID": "cf8f9d5b-b5c2-4664-9cfd-6823911865c2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "cf8f9d5b-b5c2-4664-9cfd-6823911865c2",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should redeem",
                "fullTitle": "GiftCodeService redeem should redeem",
                "timedOut": false,
                "duration": 373,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GiftCodeService.redeem(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6532232f-4989-4508-9e7b-1e14ffc63cdb",
                "parentUUID": "cf8f9d5b-b5c2-4664-9cfd-6823911865c2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 373
          },
          {
            "title": "getGiftByCode",
            "suites": [],
            "tests": [
              {
                "title": "should get gifts by code",
                "fullTitle": "GiftCodeService getGiftByCode should get gifts by code",
                "timedOut": false,
                "duration": 411,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GiftCodeService.getGiftByCode(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8bd0865a-c0c2-4ea5-a356-aba6778ceb8c",
                "parentUUID": "2e5450a1-1fd7-406c-b3db-010044115564",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "2e5450a1-1fd7-406c-b3db-010044115564",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get gifts by code",
                "fullTitle": "GiftCodeService getGiftByCode should get gifts by code",
                "timedOut": false,
                "duration": 411,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GiftCodeService.getGiftByCode(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8bd0865a-c0c2-4ea5-a356-aba6778ceb8c",
                "parentUUID": "2e5450a1-1fd7-406c-b3db-010044115564",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 411
          },
          {
            "title": "getRecord",
            "suites": [],
            "tests": [
              {
                "title": "should get record",
                "fullTitle": "GiftCodeService getRecord should get record",
                "timedOut": false,
                "duration": 387,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GiftCodeService.getRecord(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "63449043-6712-4f74-93a2-a876ec824e0c",
                "parentUUID": "8abdd4fc-d6ac-4cc1-b1ae-16ba1898c92e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "8abdd4fc-d6ac-4cc1-b1ae-16ba1898c92e",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get record",
                "fullTitle": "GiftCodeService getRecord should get record",
                "timedOut": false,
                "duration": 387,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GiftCodeService.getRecord(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "63449043-6712-4f74-93a2-a876ec824e0c",
                "parentUUID": "8abdd4fc-d6ac-4cc1-b1ae-16ba1898c92e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 387
          },
          {
            "title": "redeemOverMail",
            "suites": [],
            "tests": [
              {
                "title": "should redeem over mail",
                "fullTitle": "GiftCodeService redeemOverMail should redeem over mail",
                "timedOut": false,
                "duration": 385,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GiftCodeService.redeemOverMail(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "4a171d5d-a9bb-49f7-b415-5b1c70761555",
                "parentUUID": "a5ce29be-87db-40ef-b06e-50e646fc2018",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "a5ce29be-87db-40ef-b06e-50e646fc2018",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should redeem over mail",
                "fullTitle": "GiftCodeService redeemOverMail should redeem over mail",
                "timedOut": false,
                "duration": 385,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GiftCodeService.redeemOverMail(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "4a171d5d-a9bb-49f7-b415-5b1c70761555",
                "parentUUID": "a5ce29be-87db-40ef-b06e-50e646fc2018",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 385
          },
          {
            "title": "redeemGiftByCodeOverMail",
            "suites": [],
            "tests": [
              {
                "title": "should redeem gift by code over mail",
                "fullTitle": "GiftCodeService redeemGiftByCodeOverMail should redeem gift by code over mail",
                "timedOut": false,
                "duration": 355,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GiftCodeService.redeemGiftByCodeOverMail(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "3a486d26-9185-4780-b781-14cae73a0570",
                "parentUUID": "0aa0d354-e986-423c-98bf-12d3b27b42ae",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "0aa0d354-e986-423c-98bf-12d3b27b42ae",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should redeem gift by code over mail",
                "fullTitle": "GiftCodeService redeemGiftByCodeOverMail should redeem gift by code over mail",
                "timedOut": false,
                "duration": 355,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.GiftCodeService.redeemGiftByCodeOverMail(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "3a486d26-9185-4780-b781-14cae73a0570",
                "parentUUID": "0aa0d354-e986-423c-98bf-12d3b27b42ae",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 355
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "cbcb5b9b-cbe4-4cae-b87a-054308224a5a",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "PrivateChannelService",
        "suites": [
          {
            "title": "pushMessage",
            "suites": [],
            "tests": [
              {
                "title": "should push message",
                "fullTitle": "PrivateChannelService pushMessage should push message",
                "timedOut": false,
                "duration": 351,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PrivateChannelService.pushMessage(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "437c0770-bbfd-4042-8b87-d2b1647187e6",
                "parentUUID": "a361beb7-15dd-4506-b0b4-d3f6e69870c2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "a361beb7-15dd-4506-b0b4-d3f6e69870c2",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should push message",
                "fullTitle": "PrivateChannelService pushMessage should push message",
                "timedOut": false,
                "duration": 351,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PrivateChannelService.pushMessage(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "437c0770-bbfd-4042-8b87-d2b1647187e6",
                "parentUUID": "a361beb7-15dd-4506-b0b4-d3f6e69870c2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 351
          },
          {
            "title": "pushMessages",
            "suites": [],
            "tests": [
              {
                "title": "should push messages",
                "fullTitle": "PrivateChannelService pushMessages should push messages",
                "timedOut": false,
                "duration": 401,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PrivateChannelService.pushMessages(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "46fd7769-f19e-4417-b84f-1c1b218c7354",
                "parentUUID": "9e0eed28-c51e-42a3-8c77-9e3d47a5ceda",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "9e0eed28-c51e-42a3-8c77-9e3d47a5ceda",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should push messages",
                "fullTitle": "PrivateChannelService pushMessages should push messages",
                "timedOut": false,
                "duration": 401,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PrivateChannelService.pushMessages(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "46fd7769-f19e-4417-b84f-1c1b218c7354",
                "parentUUID": "9e0eed28-c51e-42a3-8c77-9e3d47a5ceda",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 401
          },
          {
            "title": "popMessage",
            "suites": [],
            "tests": [
              {
                "title": "should pop message",
                "fullTitle": "PrivateChannelService popMessage should pop message",
                "timedOut": false,
                "duration": 361,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PrivateChannelService.popMessage(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "40eacd77-0f88-4ec0-8bc2-b948832d5d0a",
                "parentUUID": "8136dfc2-f539-4dcd-bcb4-32df4dcde5cb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "8136dfc2-f539-4dcd-bcb4-32df4dcde5cb",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should pop message",
                "fullTitle": "PrivateChannelService popMessage should pop message",
                "timedOut": false,
                "duration": 361,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PrivateChannelService.popMessage(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "40eacd77-0f88-4ec0-8bc2-b948832d5d0a",
                "parentUUID": "8136dfc2-f539-4dcd-bcb4-32df4dcde5cb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 361
          },
          {
            "title": "popMessageBy",
            "suites": [],
            "tests": [
              {
                "title": "should pop message by",
                "fullTitle": "PrivateChannelService popMessageBy should pop message by",
                "timedOut": false,
                "duration": 367,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PrivateChannelService.popMessageBy(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "4ec72d96-18a2-48fd-856c-a079bd936148",
                "parentUUID": "55c8f8f5-8914-4983-b3ed-c97080058590",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "55c8f8f5-8914-4983-b3ed-c97080058590",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should pop message by",
                "fullTitle": "PrivateChannelService popMessageBy should pop message by",
                "timedOut": false,
                "duration": 367,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PrivateChannelService.popMessageBy(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "4ec72d96-18a2-48fd-856c-a079bd936148",
                "parentUUID": "55c8f8f5-8914-4983-b3ed-c97080058590",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 367
          },
          {
            "title": "clearChannel",
            "suites": [],
            "tests": [
              {
                "title": "should clear channel",
                "fullTitle": "PrivateChannelService clearChannel should clear channel",
                "timedOut": false,
                "duration": 358,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PrivateChannelService.clearChannel(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "be20cc84-9e59-43ef-86b4-72de4383ca02",
                "parentUUID": "982524c1-af3e-41e9-bc3a-d002b8149555",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "982524c1-af3e-41e9-bc3a-d002b8149555",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should clear channel",
                "fullTitle": "PrivateChannelService clearChannel should clear channel",
                "timedOut": false,
                "duration": 358,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PrivateChannelService.clearChannel(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "be20cc84-9e59-43ef-86b4-72de4383ca02",
                "parentUUID": "982524c1-af3e-41e9-bc3a-d002b8149555",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 358
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "3aba3c1a-fc14-4fc6-a9c4-89d9e7aa8225",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "PublicChannelService",
        "suites": [
          {
            "title": "createChannel",
            "suites": [],
            "tests": [
              {
                "title": "should create channel",
                "fullTitle": "PublicChannelService createChannel should create channel",
                "timedOut": false,
                "duration": 411,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PublicChannelService.createChannel(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f719efdb-3dcb-47da-aaba-03a85fa27a3f",
                "parentUUID": "2cecffab-17e8-46a2-a8a6-4574d45d4f00",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "2cecffab-17e8-46a2-a8a6-4574d45d4f00",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should create channel",
                "fullTitle": "PublicChannelService createChannel should create channel",
                "timedOut": false,
                "duration": 411,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PublicChannelService.createChannel(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f719efdb-3dcb-47da-aaba-03a85fa27a3f",
                "parentUUID": "2cecffab-17e8-46a2-a8a6-4574d45d4f00",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 411
          },
          {
            "title": "pushMessage",
            "suites": [],
            "tests": [
              {
                "title": "should push message",
                "fullTitle": "PublicChannelService pushMessage should push message",
                "timedOut": false,
                "duration": 421,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PublicChannelService.pushMessage(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "a56c94a0-d482-43bd-bd26-f7d0d2483388",
                "parentUUID": "4372a5d0-13e9-4cd6-bf89-ee7c513e3dfd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "4372a5d0-13e9-4cd6-bf89-ee7c513e3dfd",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should push message",
                "fullTitle": "PublicChannelService pushMessage should push message",
                "timedOut": false,
                "duration": 421,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PublicChannelService.pushMessage(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "a56c94a0-d482-43bd-bd26-f7d0d2483388",
                "parentUUID": "4372a5d0-13e9-4cd6-bf89-ee7c513e3dfd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 421
          },
          {
            "title": "popAllMessage",
            "suites": [],
            "tests": [
              {
                "title": "should pop all message",
                "fullTitle": "PublicChannelService popAllMessage should pop all message",
                "timedOut": false,
                "duration": 339,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PublicChannelService.popAllMessage(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "b5f6887f-3d45-410d-b041-a4cfbfe32a14",
                "parentUUID": "b41367b1-e87d-4a89-852f-ba3a537ad03d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "b41367b1-e87d-4a89-852f-ba3a537ad03d",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should pop all message",
                "fullTitle": "PublicChannelService popAllMessage should pop all message",
                "timedOut": false,
                "duration": 339,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PublicChannelService.popAllMessage(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "b5f6887f-3d45-410d-b041-a4cfbfe32a14",
                "parentUUID": "b41367b1-e87d-4a89-852f-ba3a537ad03d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 339
          },
          {
            "title": "popMessage",
            "suites": [],
            "tests": [
              {
                "title": "should pop message",
                "fullTitle": "PublicChannelService popMessage should pop message",
                "timedOut": false,
                "duration": 393,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PublicChannelService.popMessage(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "439ef1ec-67ae-4bf5-85d1-89f9ee2178f2",
                "parentUUID": "1cfe2c5f-f479-44f2-acd4-0600172548e9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "1cfe2c5f-f479-44f2-acd4-0600172548e9",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should pop message",
                "fullTitle": "PublicChannelService popMessage should pop message",
                "timedOut": false,
                "duration": 393,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PublicChannelService.popMessage(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "439ef1ec-67ae-4bf5-85d1-89f9ee2178f2",
                "parentUUID": "1cfe2c5f-f479-44f2-acd4-0600172548e9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 393
          },
          {
            "title": "popMessageOrnum",
            "suites": [],
            "tests": [
              {
                "title": "should pop message or num",
                "fullTitle": "PublicChannelService popMessageOrnum should pop message or num",
                "timedOut": false,
                "duration": 398,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PublicChannelService.popMessageOrnum(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f033daf6-6879-42e2-b468-65589090c4d7",
                "parentUUID": "cf403644-0b18-4955-9231-e2b2f24dbec0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "cf403644-0b18-4955-9231-e2b2f24dbec0",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should pop message or num",
                "fullTitle": "PublicChannelService popMessageOrnum should pop message or num",
                "timedOut": false,
                "duration": 398,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PublicChannelService.popMessageOrnum(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "f033daf6-6879-42e2-b468-65589090c4d7",
                "parentUUID": "cf403644-0b18-4955-9231-e2b2f24dbec0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 398
          },
          {
            "title": "popMessageOrnumtim",
            "suites": [],
            "tests": [
              {
                "title": "should pop message or num tim",
                "fullTitle": "PublicChannelService popMessageOrnumtim should pop message or num tim",
                "timedOut": false,
                "duration": 378,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PublicChannelService.popMessageOrnumtim(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "c36ecd70-2b58-45af-9e98-eeb50a769670",
                "parentUUID": "44868966-70a3-4ac0-ad54-219127671097",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "44868966-70a3-4ac0-ad54-219127671097",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should pop message or num tim",
                "fullTitle": "PublicChannelService popMessageOrnumtim should pop message or num tim",
                "timedOut": false,
                "duration": 378,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PublicChannelService.popMessageOrnumtim(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "c36ecd70-2b58-45af-9e98-eeb50a769670",
                "parentUUID": "44868966-70a3-4ac0-ad54-219127671097",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 378
          },
          {
            "title": "clearChannel",
            "suites": [],
            "tests": [
              {
                "title": "should clear channel",
                "fullTitle": "PublicChannelService clearChannel should clear channel",
                "timedOut": false,
                "duration": 344,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PublicChannelService.clearChannel(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "c1eac30b-6253-468a-9fd7-b093400fc0bb",
                "parentUUID": "e95f8196-27a9-4710-9987-aa5facd88f9b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "e95f8196-27a9-4710-9987-aa5facd88f9b",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should clear channel",
                "fullTitle": "PublicChannelService clearChannel should clear channel",
                "timedOut": false,
                "duration": 344,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PublicChannelService.clearChannel(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "c1eac30b-6253-468a-9fd7-b093400fc0bb",
                "parentUUID": "e95f8196-27a9-4710-9987-aa5facd88f9b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 344
          },
          {
            "title": "deleteMessage",
            "suites": [],
            "tests": [
              {
                "title": "should delete message",
                "fullTitle": "PublicChannelService deleteMessage should delete message",
                "timedOut": false,
                "duration": 393,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PublicChannelService.deleteMessage(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">123</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "4f777f0a-54e3-4d66-81c0-9971651f13c2",
                "parentUUID": "e2ba2155-4ccf-45cd-972f-f1c6dfe92e9a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "e2ba2155-4ccf-45cd-972f-f1c6dfe92e9a",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should delete message",
                "fullTitle": "PublicChannelService deleteMessage should delete message",
                "timedOut": false,
                "duration": 393,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PublicChannelService.deleteMessage(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">123</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "4f777f0a-54e3-4d66-81c0-9971651f13c2",
                "parentUUID": "e2ba2155-4ccf-45cd-972f-f1c6dfe92e9a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 393
          },
          {
            "title": "getMessageContent",
            "suites": [],
            "tests": [
              {
                "title": "should get message content",
                "fullTitle": "PublicChannelService getMessageContent should get message content",
                "timedOut": false,
                "duration": 393,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PublicChannelService.getMessageContent(<span class=\"hljs-number\">123</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "5939b6d9-0aec-4078-b390-253551740415",
                "parentUUID": "291d6ab5-8717-4024-92a6-09b167990792",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "291d6ab5-8717-4024-92a6-09b167990792",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get message content",
                "fullTitle": "PublicChannelService getMessageContent should get message content",
                "timedOut": false,
                "duration": 393,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.PublicChannelService.getMessageContent(<span class=\"hljs-number\">123</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "5939b6d9-0aec-4078-b390-253551740415",
                "parentUUID": "291d6ab5-8717-4024-92a6-09b167990792",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 393
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "8a77b5e5-0208-473c-81ac-145b2d3b20ab",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "DelegateDidService",
        "suites": [
          {
            "title": "createDid",
            "suites": [],
            "tests": [
              {
                "title": "should create did",
                "fullTitle": "DelegateDidService createDid should create did",
                "timedOut": false,
                "duration": 384,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DelegateDidService.createDid(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e7834c63-5f8e-438c-9f1f-9b16479e1f3f",
                "parentUUID": "b596572e-dae1-4ab9-ad97-cb181ceb2b5c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "b596572e-dae1-4ab9-ad97-cb181ceb2b5c",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should create did",
                "fullTitle": "DelegateDidService createDid should create did",
                "timedOut": false,
                "duration": 384,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DelegateDidService.createDid(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e7834c63-5f8e-438c-9f1f-9b16479e1f3f",
                "parentUUID": "b596572e-dae1-4ab9-ad97-cb181ceb2b5c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 384
          },
          {
            "title": "queryByDid",
            "suites": [],
            "tests": [
              {
                "title": "should query by did",
                "fullTitle": "DelegateDidService queryByDid should query by did",
                "timedOut": false,
                "duration": 331,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DelegateDidService.queryByDid(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "0bdbe2dd-e277-4d5c-82c7-a18fb21da4d6",
                "parentUUID": "d1ec8a9f-010b-495a-8099-825635c7cdd0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "d1ec8a9f-010b-495a-8099-825635c7cdd0",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should query by did",
                "fullTitle": "DelegateDidService queryByDid should query by did",
                "timedOut": false,
                "duration": 331,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DelegateDidService.queryByDid(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "0bdbe2dd-e277-4d5c-82c7-a18fb21da4d6",
                "parentUUID": "d1ec8a9f-010b-495a-8099-825635c7cdd0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 331
          },
          {
            "title": "queryByCondition",
            "suites": [],
            "tests": [
              {
                "title": "should query by conditon",
                "fullTitle": "DelegateDidService queryByCondition should query by conditon",
                "timedOut": false,
                "duration": 651,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DelegateDidService.queryByCondition(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "23dfe418-cc62-4e45-8bc3-5d59be9b2ae7",
                "parentUUID": "69befb39-d139-47c6-a2b2-35b18f507ed9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "69befb39-d139-47c6-a2b2-35b18f507ed9",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should query by conditon",
                "fullTitle": "DelegateDidService queryByCondition should query by conditon",
                "timedOut": false,
                "duration": 651,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.DelegateDidService.queryByCondition(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "23dfe418-cc62-4e45-8bc3-5d59be9b2ae7",
                "parentUUID": "69befb39-d139-47c6-a2b2-35b18f507ed9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 651
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "a0f6ce60-0149-481b-880c-f285f7cc93c1",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "StructuredDataService",
        "suites": [
          {
            "title": "getValue",
            "suites": [],
            "tests": [
              {
                "title": "should get value",
                "fullTitle": "StructuredDataService getValue should get value",
                "timedOut": false,
                "duration": 371,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.getValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "9d973487-04f3-4471-aa42-eacc504ca327",
                "parentUUID": "3c2fa1e8-7777-463a-b40a-14a5f8ccc376",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "3c2fa1e8-7777-463a-b40a-14a5f8ccc376",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get value",
                "fullTitle": "StructuredDataService getValue should get value",
                "timedOut": false,
                "duration": 371,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.getValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "9d973487-04f3-4471-aa42-eacc504ca327",
                "parentUUID": "3c2fa1e8-7777-463a-b40a-14a5f8ccc376",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 371
          },
          {
            "title": "saveOrUpdateValue",
            "suites": [],
            "tests": [
              {
                "title": "should save or update value",
                "fullTitle": "StructuredDataService saveOrUpdateValue should save or update value",
                "timedOut": false,
                "duration": 359,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.saveOrUpdateValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "bf71d65d-e05a-4fd7-8a86-429c5dcd866b",
                "parentUUID": "23726ad2-67ab-4370-a17d-4dfdb9770504",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "23726ad2-67ab-4370-a17d-4dfdb9770504",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should save or update value",
                "fullTitle": "StructuredDataService saveOrUpdateValue should save or update value",
                "timedOut": false,
                "duration": 359,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.saveOrUpdateValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "bf71d65d-e05a-4fd7-8a86-429c5dcd866b",
                "parentUUID": "23726ad2-67ab-4370-a17d-4dfdb9770504",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 359
          },
          {
            "title": "getListValue",
            "suites": [],
            "tests": [
              {
                "title": "should get list value",
                "fullTitle": "StructuredDataService getListValue should get list value",
                "timedOut": false,
                "duration": 413,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.getListValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8fb06ca4-2e24-4e69-b71a-e09038df579d",
                "parentUUID": "c1d69102-0119-43dd-8e4a-3e6a5982afd7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "c1d69102-0119-43dd-8e4a-3e6a5982afd7",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get list value",
                "fullTitle": "StructuredDataService getListValue should get list value",
                "timedOut": false,
                "duration": 413,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.getListValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8fb06ca4-2e24-4e69-b71a-e09038df579d",
                "parentUUID": "c1d69102-0119-43dd-8e4a-3e6a5982afd7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 413
          },
          {
            "title": "addListValue",
            "suites": [],
            "tests": [
              {
                "title": "should add list value",
                "fullTitle": "StructuredDataService addListValue should add list value",
                "timedOut": false,
                "duration": 348,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.addListValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "a6472372-01c5-45b9-9385-ec36ac028854",
                "parentUUID": "e51c3d8d-d827-4f89-a5e7-6df56603a968",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "e51c3d8d-d827-4f89-a5e7-6df56603a968",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should add list value",
                "fullTitle": "StructuredDataService addListValue should add list value",
                "timedOut": false,
                "duration": 348,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.addListValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "a6472372-01c5-45b9-9385-ec36ac028854",
                "parentUUID": "e51c3d8d-d827-4f89-a5e7-6df56603a968",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 348
          },
          {
            "title": "updateListValue",
            "suites": [],
            "tests": [
              {
                "title": "should update list value",
                "fullTitle": "StructuredDataService updateListValue should update list value",
                "timedOut": false,
                "duration": 458,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.updateListValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "a71e9433-ffcf-4edf-a1d0-34ba9db1b577",
                "parentUUID": "0a248c91-9c69-49e9-9025-2829638967df",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "0a248c91-9c69-49e9-9025-2829638967df",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should update list value",
                "fullTitle": "StructuredDataService updateListValue should update list value",
                "timedOut": false,
                "duration": 458,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.updateListValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "a71e9433-ffcf-4edf-a1d0-34ba9db1b577",
                "parentUUID": "0a248c91-9c69-49e9-9025-2829638967df",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 458
          },
          {
            "title": "getMapValue",
            "suites": [],
            "tests": [
              {
                "title": "should get map value",
                "fullTitle": "StructuredDataService getMapValue should get map value",
                "timedOut": false,
                "duration": 341,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.getMapValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e7809f66-6f1a-48bf-be90-6b665718b478",
                "parentUUID": "399f0021-92c2-4f4e-b347-c64d2d86cba4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "399f0021-92c2-4f4e-b347-c64d2d86cba4",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get map value",
                "fullTitle": "StructuredDataService getMapValue should get map value",
                "timedOut": false,
                "duration": 341,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.getMapValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e7809f66-6f1a-48bf-be90-6b665718b478",
                "parentUUID": "399f0021-92c2-4f4e-b347-c64d2d86cba4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 341
          },
          {
            "title": "getMapValueByHashKey",
            "suites": [],
            "tests": [
              {
                "title": "should get map value by hash key",
                "fullTitle": "StructuredDataService getMapValueByHashKey should get map value by hash key",
                "timedOut": false,
                "duration": 379,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.getMapValueByHashKey(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "501aa1a2-4954-43f2-89b0-a730fcc164d4",
                "parentUUID": "0d3d8531-1068-4bc6-80d1-b92ab3f31028",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "0d3d8531-1068-4bc6-80d1-b92ab3f31028",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get map value by hash key",
                "fullTitle": "StructuredDataService getMapValueByHashKey should get map value by hash key",
                "timedOut": false,
                "duration": 379,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.getMapValueByHashKey(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "501aa1a2-4954-43f2-89b0-a730fcc164d4",
                "parentUUID": "0d3d8531-1068-4bc6-80d1-b92ab3f31028",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 379
          },
          {
            "title": "saveOrUpdateMap",
            "suites": [],
            "tests": [
              {
                "title": "should save or update map",
                "fullTitle": "StructuredDataService saveOrUpdateMap should save or update map",
                "timedOut": false,
                "duration": 339,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.saveOrUpdateMap(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "3cea11fc-f93f-4635-83d1-8d1d91a85d4f",
                "parentUUID": "15b45aa8-0a1a-4a2d-b0b3-7dabe0c11eea",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "15b45aa8-0a1a-4a2d-b0b3-7dabe0c11eea",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should save or update map",
                "fullTitle": "StructuredDataService saveOrUpdateMap should save or update map",
                "timedOut": false,
                "duration": 339,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.saveOrUpdateMap(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "3cea11fc-f93f-4635-83d1-8d1d91a85d4f",
                "parentUUID": "15b45aa8-0a1a-4a2d-b0b3-7dabe0c11eea",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 339
          },
          {
            "title": "setOrUpdateHashValue",
            "suites": [],
            "tests": [
              {
                "title": "should set or update hash value",
                "fullTitle": "StructuredDataService setOrUpdateHashValue should set or update hash value",
                "timedOut": false,
                "duration": 397,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.setOrUpdateHashValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "a4a14032-f9d1-454a-8f8a-790cd9a09086",
                "parentUUID": "84291790-3ba6-4749-9e75-46de937b5bba",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "84291790-3ba6-4749-9e75-46de937b5bba",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should set or update hash value",
                "fullTitle": "StructuredDataService setOrUpdateHashValue should set or update hash value",
                "timedOut": false,
                "duration": 397,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.setOrUpdateHashValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "a4a14032-f9d1-454a-8f8a-790cd9a09086",
                "parentUUID": "84291790-3ba6-4749-9e75-46de937b5bba",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 397
          },
          {
            "title": "getSetValue",
            "suites": [],
            "tests": [
              {
                "title": "should get set value",
                "fullTitle": "StructuredDataService getSetValue should get set value",
                "timedOut": false,
                "duration": 382,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.getSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "a08a719b-60f0-41b6-92e5-71457ad0deee",
                "parentUUID": "06574e35-326c-4960-99b1-88ffc924fe16",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "06574e35-326c-4960-99b1-88ffc924fe16",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get set value",
                "fullTitle": "StructuredDataService getSetValue should get set value",
                "timedOut": false,
                "duration": 382,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.getSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "a08a719b-60f0-41b6-92e5-71457ad0deee",
                "parentUUID": "06574e35-326c-4960-99b1-88ffc924fe16",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 382
          },
          {
            "title": "addSetValue",
            "suites": [],
            "tests": [
              {
                "title": "should add set value",
                "fullTitle": "StructuredDataService addSetValue should add set value",
                "timedOut": false,
                "duration": 385,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.addSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "fc0422e5-200e-43f6-b0cd-f3fa677f258a",
                "parentUUID": "8aa37e6a-3429-4b77-9582-667f5b76cdc2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "8aa37e6a-3429-4b77-9582-667f5b76cdc2",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should add set value",
                "fullTitle": "StructuredDataService addSetValue should add set value",
                "timedOut": false,
                "duration": 385,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.addSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "fc0422e5-200e-43f6-b0cd-f3fa677f258a",
                "parentUUID": "8aa37e6a-3429-4b77-9582-667f5b76cdc2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 385
          },
          {
            "title": "updateSetValue",
            "suites": [],
            "tests": [
              {
                "title": "should update set value",
                "fullTitle": "StructuredDataService updateSetValue should update set value",
                "timedOut": false,
                "duration": 369,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.updateSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "70f231c0-13d3-4d1c-8dcb-b639e6430698",
                "parentUUID": "6aa5f0be-58c0-41d1-a7c1-b516bfaf4f79",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "6aa5f0be-58c0-41d1-a7c1-b516bfaf4f79",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should update set value",
                "fullTitle": "StructuredDataService updateSetValue should update set value",
                "timedOut": false,
                "duration": 369,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.updateSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "70f231c0-13d3-4d1c-8dcb-b639e6430698",
                "parentUUID": "6aa5f0be-58c0-41d1-a7c1-b516bfaf4f79",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 369
          },
          {
            "title": "getZSetValue",
            "suites": [],
            "tests": [
              {
                "title": "should get z set value",
                "fullTitle": "StructuredDataService getZSetValue should get z set value",
                "timedOut": false,
                "duration": 390,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.getZSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "9ffac497-8f77-4601-8707-b577511547ee",
                "parentUUID": "29ac7406-1ed3-4ba7-abd8-40cffa6aa0bb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "29ac7406-1ed3-4ba7-abd8-40cffa6aa0bb",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get z set value",
                "fullTitle": "StructuredDataService getZSetValue should get z set value",
                "timedOut": false,
                "duration": 390,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.getZSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "9ffac497-8f77-4601-8707-b577511547ee",
                "parentUUID": "29ac7406-1ed3-4ba7-abd8-40cffa6aa0bb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 390
          },
          {
            "title": "addZSetValue",
            "suites": [],
            "tests": [
              {
                "title": "should add z set value",
                "fullTitle": "StructuredDataService addZSetValue should add z set value",
                "timedOut": false,
                "duration": 396,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.addZSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "faea7289-be36-4a3f-bbd8-5c9854191db1",
                "parentUUID": "305270ed-b6c1-4de7-8202-a81b1860ed11",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "305270ed-b6c1-4de7-8202-a81b1860ed11",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should add z set value",
                "fullTitle": "StructuredDataService addZSetValue should add z set value",
                "timedOut": false,
                "duration": 396,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.addZSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "faea7289-be36-4a3f-bbd8-5c9854191db1",
                "parentUUID": "305270ed-b6c1-4de7-8202-a81b1860ed11",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 396
          },
          {
            "title": "updateZSetValue",
            "suites": [],
            "tests": [
              {
                "title": "should update z set value",
                "fullTitle": "StructuredDataService updateZSetValue should update z set value",
                "timedOut": false,
                "duration": 355,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.updateZSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "42ee2d8e-aede-45a7-84bb-23b001c1016f",
                "parentUUID": "921d6032-2c4f-4a15-ba49-48dbf309fbee",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "921d6032-2c4f-4a15-ba49-48dbf309fbee",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should update z set value",
                "fullTitle": "StructuredDataService updateZSetValue should update z set value",
                "timedOut": false,
                "duration": 355,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.updateZSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "42ee2d8e-aede-45a7-84bb-23b001c1016f",
                "parentUUID": "921d6032-2c4f-4a15-ba49-48dbf309fbee",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 355
          },
          {
            "title": "getZSetRangByScore",
            "suites": [],
            "tests": [
              {
                "title": "should get z set rang by score",
                "fullTitle": "StructuredDataService getZSetRangByScore should get z set rang by score",
                "timedOut": false,
                "duration": 364,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.getZSetRangByScore(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e19adc2e-8e67-4075-9cb0-045a666a2ae6",
                "parentUUID": "5423e328-542a-44c2-a2b0-d7e71290c69d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "5423e328-542a-44c2-a2b0-d7e71290c69d",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get z set rang by score",
                "fullTitle": "StructuredDataService getZSetRangByScore should get z set rang by score",
                "timedOut": false,
                "duration": 364,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.getZSetRangByScore(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "e19adc2e-8e67-4075-9cb0-045a666a2ae6",
                "parentUUID": "5423e328-542a-44c2-a2b0-d7e71290c69d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 364
          },
          {
            "title": "getListByIndex",
            "suites": [],
            "tests": [
              {
                "title": "should get list by index",
                "fullTitle": "StructuredDataService getListByIndex should get list by index",
                "timedOut": false,
                "duration": 356,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.getListByIndex(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "d7af02a8-4a46-49f4-8bd7-3687a9bf9920",
                "parentUUID": "7667cf7a-6b0b-449e-8019-01bbb161f8cb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "7667cf7a-6b0b-449e-8019-01bbb161f8cb",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get list by index",
                "fullTitle": "StructuredDataService getListByIndex should get list by index",
                "timedOut": false,
                "duration": 356,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.getListByIndex(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "d7af02a8-4a46-49f4-8bd7-3687a9bf9920",
                "parentUUID": "7667cf7a-6b0b-449e-8019-01bbb161f8cb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 356
          },
          {
            "title": "remove",
            "suites": [],
            "tests": [
              {
                "title": "should remove",
                "fullTitle": "StructuredDataService remove should remove",
                "timedOut": false,
                "duration": 408,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.remove(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "504efeaf-1cad-422e-a9ec-c753f7825f76",
                "parentUUID": "e725f1fc-dde7-459e-867f-bcc041fc6464",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "e725f1fc-dde7-459e-867f-bcc041fc6464",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should remove",
                "fullTitle": "StructuredDataService remove should remove",
                "timedOut": false,
                "duration": 408,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.remove(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "504efeaf-1cad-422e-a9ec-c753f7825f76",
                "parentUUID": "e725f1fc-dde7-459e-867f-bcc041fc6464",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 408
          },
          {
            "title": "removeFromSet",
            "suites": [],
            "tests": [
              {
                "title": "should remove from set ",
                "fullTitle": "StructuredDataService removeFromSet should remove from set ",
                "timedOut": false,
                "duration": 366,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.removeFromSet(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8bc549cf-59a0-4631-b043-3b22e437e4e4",
                "parentUUID": "cf2cdeed-c81a-4409-8f95-494082bc1b98",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "cf2cdeed-c81a-4409-8f95-494082bc1b98",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should remove from set ",
                "fullTitle": "StructuredDataService removeFromSet should remove from set ",
                "timedOut": false,
                "duration": 366,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.removeFromSet(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8bc549cf-59a0-4631-b043-3b22e437e4e4",
                "parentUUID": "cf2cdeed-c81a-4409-8f95-494082bc1b98",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 366
          },
          {
            "title": "removeFromHash",
            "suites": [],
            "tests": [
              {
                "title": "should remove from hash",
                "fullTitle": "StructuredDataService removeFromHash should remove from hash",
                "timedOut": false,
                "duration": 345,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.removeFromHash(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8ac84817-d311-41df-ab70-d5553170035d",
                "parentUUID": "d75262bb-b609-448f-a18a-2526435743a9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "d75262bb-b609-448f-a18a-2526435743a9",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should remove from hash",
                "fullTitle": "StructuredDataService removeFromHash should remove from hash",
                "timedOut": false,
                "duration": 345,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.removeFromHash(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "8ac84817-d311-41df-ab70-d5553170035d",
                "parentUUID": "d75262bb-b609-448f-a18a-2526435743a9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 345
          },
          {
            "title": "containtSet",
            "suites": [],
            "tests": [
              {
                "title": "should containt set",
                "fullTitle": "StructuredDataService containtSet should containt set",
                "timedOut": false,
                "duration": 340,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.containtSet(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6bd83218-341e-4837-a91d-f8421b31b8a5",
                "parentUUID": "a7d3e7e0-c8fe-48e6-ac77-af7e054bb488",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "a7d3e7e0-c8fe-48e6-ac77-af7e054bb488",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should containt set",
                "fullTitle": "StructuredDataService containtSet should containt set",
                "timedOut": false,
                "duration": 340,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.containtSet(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6bd83218-341e-4837-a91d-f8421b31b8a5",
                "parentUUID": "a7d3e7e0-c8fe-48e6-ac77-af7e054bb488",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 340
          },
          {
            "title": "containsHash",
            "suites": [],
            "tests": [
              {
                "title": "should contains hash",
                "fullTitle": "StructuredDataService containsHash should contains hash",
                "timedOut": false,
                "duration": 397,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.containsHash(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "3bf31e32-6252-4200-a773-06d4b873cdbe",
                "parentUUID": "aa647c97-6d05-4f2c-bec2-7f6bbda8eaf6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "aa647c97-6d05-4f2c-bec2-7f6bbda8eaf6",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should contains hash",
                "fullTitle": "StructuredDataService containsHash should contains hash",
                "timedOut": false,
                "duration": 397,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.containsHash(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "3bf31e32-6252-4200-a773-06d4b873cdbe",
                "parentUUID": "aa647c97-6d05-4f2c-bec2-7f6bbda8eaf6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 397
          },
          {
            "title": "containsKey",
            "suites": [],
            "tests": [
              {
                "title": "should contains key",
                "fullTitle": "StructuredDataService containsKey should contains key",
                "timedOut": false,
                "duration": 365,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.containsKey(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "72e40a50-e5fc-4561-8a0a-abbf839b3c38",
                "parentUUID": "91376a44-c09b-4a96-9801-1e47b44a2bec",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "91376a44-c09b-4a96-9801-1e47b44a2bec",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should contains key",
                "fullTitle": "StructuredDataService containsKey should contains key",
                "timedOut": false,
                "duration": 365,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.StructuredDataService.containsKey(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "72e40a50-e5fc-4561-8a0a-abbf839b3c38",
                "parentUUID": "91376a44-c09b-4a96-9801-1e47b44a2bec",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 365
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "60080384-ffe2-4bc0-908f-0be2dc47b257",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "TicketService",
        "suites": [
          {
            "title": "getTicketsById",
            "suites": [],
            "tests": [
              {
                "title": "should get tickets by id",
                "fullTitle": "TicketService getTicketsById should get tickets by id",
                "timedOut": false,
                "duration": 381,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TicketService.getTicketsById(player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "eb8c83fa-5a86-469b-a80a-5f237210a057",
                "parentUUID": "d17e83c6-72eb-422d-8bf9-f9eb93f49487",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "d17e83c6-72eb-422d-8bf9-f9eb93f49487",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should get tickets by id",
                "fullTitle": "TicketService getTicketsById should get tickets by id",
                "timedOut": false,
                "duration": 381,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TicketService.getTicketsById(player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "eb8c83fa-5a86-469b-a80a-5f237210a057",
                "parentUUID": "d17e83c6-72eb-422d-8bf9-f9eb93f49487",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 381
          },
          {
            "title": "sendTicket",
            "suites": [],
            "tests": [
              {
                "title": "should send ticket",
                "fullTitle": "TicketService sendTicket should send ticket",
                "timedOut": false,
                "duration": 427,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TicketService.sendTicket({}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6cb55c97-fd34-4364-9c72-8e2960ab95ca",
                "parentUUID": "a1e47b70-4f5f-450e-9f08-388abb142db8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "a1e47b70-4f5f-450e-9f08-388abb142db8",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should send ticket",
                "fullTitle": "TicketService sendTicket should send ticket",
                "timedOut": false,
                "duration": 427,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.TicketService.sendTicket({}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "6cb55c97-fd34-4364-9c72-8e2960ab95ca",
                "parentUUID": "a1e47b70-4f5f-450e-9f08-388abb142db8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 427
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "148aac98-bd0a-48ba-a905-7049204e4e61",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ErrorReportService",
        "suites": [
          {
            "title": "sendErrorReport",
            "suites": [],
            "tests": [
              {
                "title": "should send error report",
                "fullTitle": "ErrorReportService sendErrorReport should send error report",
                "timedOut": false,
                "duration": 336,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.ErrorReportService.sendErrorReport(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "58cfb35e-c5af-44c3-835c-2537221fc605",
                "parentUUID": "be8a74d5-9a28-43a7-ae95-e36d0541a477",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 4000,
            "file": "\\src\\test\\test.js",
            "uuid": "be8a74d5-9a28-43a7-ae95-e36d0541a477",
            "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
            "passes": [
              {
                "title": "should send error report",
                "fullTitle": "ErrorReportService sendErrorReport should send error report",
                "timedOut": false,
                "duration": 336,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "SgtApi.ErrorReportService.sendErrorReport(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
                "isRoot": false,
                "uuid": "58cfb35e-c5af-44c3-835c-2537221fc605",
                "parentUUID": "be8a74d5-9a28-43a7-ae95-e36d0541a477",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 336
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "2d0eb837-874c-455b-9e5b-dac2b984ef6e",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 4000,
    "uuid": "dd3bf35e-874a-4669-a4a3-9345ce531334",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should login",
      "fullTitle": "login should login",
      "timedOut": false,
      "duration": 844,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.UserService.login(<span class=\"hljs-string\">'Ak61E175'</span>, <span class=\"hljs-string\">'yoedge2014'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        user = data;<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "461940ae-46cf-4661-b771-64eb3b23ad97",
      "parentUUID": "6bb34d3a-c111-4b39-9f3d-a432fba551aa",
      "skipped": false
    },
    {
      "title": "should create player",
      "fullTitle": "create should create player",
      "timedOut": false,
      "duration": 458,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.create(player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (data) {<br>        player = data;<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        assert.strictEqual(player.name, data.name);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "7de318bb-24b2-4a1e-97d1-c5d7ec16e99c",
      "parentUUID": "4266a66c-6716-4338-ae59-2e0141cf2d25",
      "skipped": false
    },
    {
      "title": "should download Save",
      "fullTitle": "downloadSave should download Save",
      "timedOut": false,
      "duration": 385,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.downloadSave(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "bf9c7a5d-45c7-47b1-b8e3-99b2e05699c4",
      "parentUUID": "0f8afa56-1082-4ef4-b1a6-51ccb71d0834",
      "skipped": false
    },
    {
      "title": "should get by last login time",
      "fullTitle": "getByLastLoginTime should get by last login time",
      "timedOut": false,
      "duration": 379,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.getByLastLoginTime(<span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "5522e080-df15-46d6-957b-68c0b3a6a757",
      "parentUUID": "7cb31a4e-7590-40da-bc75-5c28192786bb",
      "skipped": false
    },
    {
      "title": "should get by name",
      "fullTitle": "getByName should get by name",
      "timedOut": false,
      "duration": 366,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.getByName(player.name, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "4555b188-5627-4b3a-a0b2-15e6903f06ab",
      "parentUUID": "f9461266-7070-43dd-b945-5ee58e02317f",
      "skipped": false
    },
    {
      "title": "should get by user id",
      "fullTitle": "getByUserId should get by user id",
      "timedOut": false,
      "duration": 418,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.getByUserId(user.userid, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "af76e05f-a241-4da1-a54e-7677731c14c5",
      "parentUUID": "089b3938-3918-41e4-9556-a51b077ba93d",
      "skipped": false
    },
    {
      "title": "should get friends max number",
      "fullTitle": "getFriendsMaxNumber should get friends max number",
      "timedOut": false,
      "duration": 405,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.getFriendsMaxNumber(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "64877547-10d8-4ee8-afea-cc6de8459e35",
      "parentUUID": "7e5e6b6a-581b-481e-a6ec-979b4265292d",
      "skipped": false
    },
    {
      "title": "should get one by user id",
      "fullTitle": "getOneByUserId should get one by user id",
      "timedOut": false,
      "duration": 438,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.getOneByUserId(user.userid, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "afb0195c-360f-4e77-9100-7ae54eee4b17",
      "parentUUID": "aff14dcc-1111-4cd7-8f18-fc1b08727f29",
      "skipped": false
    },
    {
      "title": "should get player by custom id",
      "fullTitle": "getPlayerByCustomId should get player by custom id",
      "timedOut": false,
      "duration": 375,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.getPlayerByCustomId(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "739e5cc3-9833-401f-ba02-df8e65db9b66",
      "parentUUID": "af16ee72-2f02-49af-9362-dccd06ebc5cc",
      "skipped": false
    },
    {
      "title": "should get player by id",
      "fullTitle": "getPlayerById should get player by id",
      "timedOut": false,
      "duration": 409,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.getPlayerById(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "f6cde89f-a855-4a41-9716-8a7ac12f6e75",
      "parentUUID": "1c7f89ba-5840-4dc2-8c2b-878ef8da955d",
      "skipped": false
    },
    {
      "title": "should search players by last login",
      "fullTitle": "searchPlayersByLastLogin should search players by last login",
      "timedOut": false,
      "duration": 377,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.searchPlayersByLastLogin(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "9f32faaa-274e-4af3-8d1a-f5c4eb5f53e2",
      "parentUUID": "e47deed1-846f-4382-a844-0b2050b3a2ea",
      "skipped": false
    },
    {
      "title": "should search players by last login condition",
      "fullTitle": "searchPlayersByLastLoginCondition should search players by last login condition",
      "timedOut": false,
      "duration": 388,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.searchPlayersByLastLoginCondition(<span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">1</span>, [player.id], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "5d96d927-4032-42b3-92f1-d2b8ba1c9e07",
      "parentUUID": "006eb53c-787c-4dc6-85cb-e9ec8375a7b8",
      "skipped": false
    },
    {
      "title": "should set friends max number",
      "fullTitle": "setFriendsMaxNumber should set friends max number",
      "timedOut": false,
      "duration": 376,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.setFriendsMaxNumber(player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "47f0bdac-538d-4ee9-952e-09c3d63a0d84",
      "parentUUID": "b02dba13-2a33-4f68-80b6-bf3cdcc2b770",
      "skipped": false
    },
    {
      "title": "should update",
      "fullTitle": "update should update",
      "timedOut": false,
      "duration": 381,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.update(player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "0d9c3e81-8572-48a0-9420-1e1e4edd2d51",
      "parentUUID": "912ccc14-2924-42bf-b5fd-b4abe20d2634",
      "skipped": false
    },
    {
      "title": "should upload Save",
      "fullTitle": "uploadSave should upload Save",
      "timedOut": false,
      "duration": 373,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.uploadSave(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "5eb79f37-6492-4776-b4b2-0fb528c41607",
      "parentUUID": "206c717c-b963-486e-9f33-2c35b8ee3fff",
      "skipped": false
    },
    {
      "title": "should delete player",
      "fullTitle": "deletePlayerByPlayerId should delete player",
      "timedOut": false,
      "duration": 793,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.deletePlayerByPlayerId(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        SgtApi.PlayerService.getPlayerById(<span class=\"hljs-string\">'8a20a23072544'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>            player = data;<br>        });<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "12594441-0917-4ba5-b0b4-6ecc6e43b418",
      "parentUUID": "0228152f-3eda-4705-bf79-f61fb3f41601",
      "skipped": false
    },
    {
      "title": "should add player",
      "fullTitle": "addPlayer should add player",
      "timedOut": false,
      "duration": 371,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerExtraService.addPlayer(player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "2fee960d-5047-40e1-acc6-3c4d4630c0d5",
      "parentUUID": "b6b66862-cdd7-4cfa-a63a-7a7452b374ad",
      "skipped": false
    },
    {
      "title": "should find add",
      "fullTitle": "findAll should find add",
      "timedOut": false,
      "duration": 381,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerExtraService.findAll(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "809cbf6d-bb4b-409c-bb97-71c6abb0b655",
      "parentUUID": "d5f92e9b-d5be-4c69-8ba2-79ca692cf132",
      "skipped": false
    },
    {
      "title": "should find all by condition",
      "fullTitle": "findAllByCondition should find all by condition",
      "timedOut": false,
      "duration": 404,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerExtraService.findAllByCondition({}, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "defbccce-b691-4cbb-bab1-ac147cd76b1d",
      "parentUUID": "83138090-d61e-4746-8810-e3f86d73ec16",
      "skipped": false
    },
    {
      "title": "should get player by id",
      "fullTitle": "getPlayerById should get player by id",
      "timedOut": false,
      "duration": 371,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerExtraService.getPlayerById(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "1d86aaeb-73cb-43c7-926d-df63e69d9b1a",
      "parentUUID": "3506211f-ef67-419f-8714-de3e00964ae3",
      "skipped": false
    },
    {
      "title": "should get player list",
      "fullTitle": "getPlayerList should get player list",
      "timedOut": false,
      "duration": 354,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerExtraService.getPlayerList({}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "496114ec-0350-49ef-9cb8-100d9e70e13e",
      "parentUUID": "4b21f3ac-d960-42dc-89db-f0df126cb815",
      "skipped": false
    },
    {
      "title": "should update player map",
      "fullTitle": "updatePlayerMap should update player map",
      "timedOut": false,
      "duration": 384,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerExtraService.updatePlayerMap(player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "a978468e-d8cc-4057-a8c8-64f275400197",
      "parentUUID": "d8f6b0c4-57fd-4bba-ad63-765d1edbf09f",
      "skipped": false
    },
    {
      "title": "should update player",
      "fullTitle": "updatePlayer should update player",
      "timedOut": false,
      "duration": 373,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerExtraService.updatePlayer(player.id, player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "2eb11d6b-3ab0-411e-bc4b-e647853315d1",
      "parentUUID": "b436a7d8-0bc7-4fce-9ef2-2cb0d5b8b7f3",
      "skipped": false
    },
    {
      "title": "should delete player by id",
      "fullTitle": "deletePlayerById should delete player by id",
      "timedOut": false,
      "duration": 351,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerExtraService.deletePlayerById(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "461ccda8-c615-4bcf-a95e-0ac519bb699f",
      "parentUUID": "31f76fd1-5b3f-4f8a-84b7-d0aa21c3876b",
      "skipped": false
    },
    {
      "title": "should achieve",
      "fullTitle": "achieve should achieve",
      "timedOut": false,
      "duration": 336,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.achieve(player.id, achievementId, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "5e02536b-1942-45fb-972d-ac8e38c81a9b",
      "parentUUID": "336b5dc3-d7fe-4f78-a7b2-714f40c6b029",
      "skipped": false
    },
    {
      "title": "should complete",
      "fullTitle": "complete should complete",
      "timedOut": false,
      "duration": 357,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.complete(player.id, achievementId, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "afb86ce8-b8a0-4391-a6d3-1bc8bf898385",
      "parentUUID": "7975cb54-b27f-4426-86c2-8c20be56af4e",
      "skipped": false
    },
    {
      "title": "should excute achievements by type",
      "fullTitle": "excuteAchievementsByType should excute achievements by type",
      "timedOut": false,
      "duration": 374,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.excuteAchievementsByType(<span class=\"hljs-string\">'123456789'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "bb665767-67a0-4d56-b2f4-e40afda2a91d",
      "parentUUID": "6bdb297f-55ba-4de0-a3b8-312bf7d3bf32",
      "skipped": false
    },
    {
      "title": "should custom achievement by type",
      "fullTitle": "customAchievementsByType should custom achievement by type",
      "timedOut": false,
      "duration": 365,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.customAchievementsByType(<span class=\"hljs-string\">'123456789'</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "85b39df7-7ecd-4e5b-b28d-03d62dcc7ee0",
      "parentUUID": "aeac4c96-8dde-496c-bdf9-97448f07d4e0",
      "skipped": false
    },
    {
      "title": "should get achievement by id",
      "fullTitle": "getAchievementById should get achievement by id",
      "timedOut": false,
      "duration": 350,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.getAchievementById(achievementId, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "875e0425-8c28-4b3d-bf96-0917365bc86c",
      "parentUUID": "6237ee44-4133-4ae3-a7b4-0262a83f7ee7",
      "skipped": false
    },
    {
      "title": "should get achievements by type",
      "fullTitle": "getAchievementsByType should get achievements by type",
      "timedOut": false,
      "duration": 377,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.getAchievementsByType(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "2f1e4674-bb04-4138-ba31-6b76f5076233",
      "parentUUID": "69fcb8ef-c9e7-4465-93af-cb914b502343",
      "skipped": false
    },
    {
      "title": "should all achievements",
      "fullTitle": "getAllAchievements should all achievements",
      "timedOut": false,
      "duration": 412,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.getAllAchievements(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "8a2fb000-1724-4379-80d8-faa39bc6ebf2",
      "parentUUID": "a0863346-8857-473f-b9b2-32b0418ffa72",
      "skipped": false
    },
    {
      "title": "should get available achievements",
      "fullTitle": "getAvailableAchievements should get available achievements",
      "timedOut": false,
      "duration": 435,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.getAvailableAchievements(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "8f1f16d0-b0d1-48b0-bd12-2fa80e90b14e",
      "parentUUID": "ec584ead-573a-4c07-980f-161f8120a261",
      "skipped": false
    },
    {
      "title": "should get complete achievements",
      "fullTitle": "getCompleteAchievements should get complete achievements",
      "timedOut": false,
      "duration": 448,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.getCompleteAchievements(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "74005364-d7c0-40e3-b008-f9a7b8e28781",
      "parentUUID": "89e8eb79-fcb9-41cf-888b-f859b22383b1",
      "skipped": false
    },
    {
      "title": "should get done achievements",
      "fullTitle": "getDoneAchievements should get done achievements",
      "timedOut": false,
      "duration": 437,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.getDoneAchievements(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "3a8238c0-ae89-420b-94a1-5ee79eed9b21",
      "parentUUID": "e5ac127b-0d1c-48f6-9d32-0bd7783c72ac",
      "skipped": false
    },
    {
      "title": "should set achievement progress",
      "fullTitle": "setAchievementProgress should set achievement progress",
      "timedOut": false,
      "duration": 396,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.setAchievementProgress(player.id, achievementId, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "17b14112-7918-4da7-877d-5b282d7a1867",
      "parentUUID": "080b704f-8a26-42dd-9374-b69848b0019f",
      "skipped": false
    },
    {
      "title": "should set achievements progress by type",
      "fullTitle": "setAchievementsProgressByType should set achievements progress by type",
      "timedOut": false,
      "duration": 364,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.setAchievementsProgressByType(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "44b36ae7-cf0b-4887-87ad-5a1588ee10ee",
      "parentUUID": "4fbd45c1-a825-4a0b-b25c-181b403a8a37",
      "skipped": false
    },
    {
      "title": "should get announce by type",
      "fullTitle": "getAnnounceByType should get announce by type",
      "timedOut": false,
      "duration": 457,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AnnouncementService.getAnnounceByType(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "62b7bfb0-c0dd-406d-b25b-80a4990424cd",
      "parentUUID": "abd19c15-567f-440a-8c10-8a0941d135d8",
      "skipped": false
    },
    {
      "title": "should get available campaigns",
      "fullTitle": "getAvailableCampaigns should get available campaigns",
      "timedOut": false,
      "duration": 350,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CampaignService.getAvailableCampaigns(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "3326b92a-835d-4e29-8720-0524df61afe3",
      "parentUUID": "3265dc6b-6bac-4fb6-b820-bea6fb66c7cb",
      "skipped": false
    },
    {
      "title": "should get by time zone",
      "fullTitle": "getByTimeZone should get by time zone",
      "timedOut": false,
      "duration": 366,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CampaignService.getByTimeZone(<span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "aca61ab9-c153-4fe3-ae48-deaf1daa1084",
      "parentUUID": "5f063b75-7970-43b5-b935-0a55d3232a78",
      "skipped": false
    },
    {
      "title": "should get campaign by id",
      "fullTitle": "getCampaignById should get campaign by id",
      "timedOut": false,
      "duration": 402,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CampaignService.getCampaignById(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "9c3e424f-f2cd-413e-93bb-dc6b7713c791",
      "parentUUID": "a42e436e-1882-47c4-a7f6-d715612f8562",
      "skipped": false
    },
    {
      "title": "should get campaign detail by campaign id",
      "fullTitle": "getCampaignDetailByCampaignId should get campaign detail by campaign id",
      "timedOut": false,
      "duration": 444,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CampaignService.getCampaignDetailByCampaignId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "9f552e2b-3299-4f49-8e25-b3c3e9b73c1d",
      "parentUUID": "84064b1a-c052-4d07-adf4-72d162bff92c",
      "skipped": false
    },
    {
      "title": "should get campaign detail by campaign detail id",
      "fullTitle": "getCampaignDetailByCampaignDetailId should get campaign detail by campaign detail id",
      "timedOut": false,
      "duration": 418,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CampaignService.getCampaignDetailByCampaignDetailId(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "e4939f2d-4250-4d1c-bf5e-83aa5d5f171e",
      "parentUUID": "6182f864-760d-483a-b22e-973dda68efd0",
      "skipped": false
    },
    {
      "title": "should get campaign progress",
      "fullTitle": "getCampaignProgress should get campaign progress",
      "timedOut": false,
      "duration": 419,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CampaignService.getCampaignProgress(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "73a2cb66-f686-41b5-8916-b55f539ab5cf",
      "parentUUID": "b1e91850-b0b8-4017-8344-89936afd43e1",
      "skipped": false
    },
    {
      "title": "should update progress",
      "fullTitle": "updateProgress should update progress",
      "timedOut": false,
      "duration": 395,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CampaignService.updateProgress(<span class=\"hljs-string\">'2'</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "c1081ad8-377e-4030-bfb9-d4dd49cc6256",
      "parentUUID": "02bc43df-444b-4c4d-b288-54a5b7757617",
      "skipped": false
    },
    {
      "title": "should checkin",
      "fullTitle": "checkin should checkin",
      "timedOut": false,
      "duration": 411,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.checkin(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "94422327-f101-4e7a-a881-4823c094b9fa",
      "parentUUID": "385ac6e0-c4c2-41f6-8855-84a166e880c2",
      "skipped": false
    },
    {
      "title": "should accumulate count",
      "fullTitle": "accumulateCount should accumulate count",
      "timedOut": false,
      "duration": 372,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.accumulateCount(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "bf4b325b-40d5-4620-baa1-cb4fd58728d4",
      "parentUUID": "16b8d5d7-7802-4a24-90eb-0d76f46a9651",
      "skipped": false
    },
    {
      "title": "should continuous count",
      "fullTitle": "continuousCount should continuous count",
      "timedOut": false,
      "duration": 399,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.continuousCount(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "bce1232f-bba2-480d-896e-a83f7d8de04d",
      "parentUUID": "2f450c2e-c1fe-4816-af34-3bbbfc66ab9b",
      "skipped": false
    },
    {
      "title": "should get checkin board by checkin board id",
      "fullTitle": "getCheckinBoardByCheckinBoardId should get checkin board by checkin board id",
      "timedOut": false,
      "duration": 377,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.getCheckinBoardByCheckinBoardId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        asser.ok(<span class=\"hljs-literal\">false</span>);<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "5796c3c7-7fe9-463d-a589-2948a4e27548",
      "parentUUID": "162bb3ea-a992-48f4-9f4f-6185f26a0a19",
      "skipped": false
    },
    {
      "title": "should get last checkin time",
      "fullTitle": "getLastCheckinTime should get last checkin time",
      "timedOut": false,
      "duration": 332,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.getLastCheckinTime(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "0d832034-2e90-4f39-8b4c-89b19800bcce",
      "parentUUID": "ae669bbd-a741-4608-ab17-7e18ecef62fc",
      "skipped": false
    },
    {
      "title": "should get reward by checkin board id",
      "fullTitle": "getRewardByCheckinBoardId should get reward by checkin board id",
      "timedOut": false,
      "duration": 332,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.getRewardByCheckinBoardId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "aae99f6d-0f77-42cd-b6c8-a4f50f10eb9c",
      "parentUUID": "c62c3758-3703-4c1f-915a-4d1e89d1a51b",
      "skipped": false
    },
    {
      "title": "should set checkin times",
      "fullTitle": "setCheckinTimes should set checkin times",
      "timedOut": false,
      "duration": 374,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.setCheckinTimes(player.id, <span class=\"hljs-string\">'begintoday'</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "84778ef2-334e-4f38-9606-ed4063254bc3",
      "parentUUID": "150e0bb3-a5c3-4c2c-9e16-ea382b95df7c",
      "skipped": false
    },
    {
      "title": "should validate checkin",
      "fullTitle": "validateCheckin should validate checkin",
      "timedOut": false,
      "duration": 383,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.validateCheckin(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "2e09167e-f5b8-4e67-aab1-740c0fe73b2e",
      "parentUUID": "9d72c1ed-13c1-4b09-b221-638fac4421b1",
      "skipped": false
    },
    {
      "title": "should get available chekcin boards",
      "fullTitle": "getAvailableCheckinBoards should get available chekcin boards",
      "timedOut": false,
      "duration": 408,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.getAvailableCheckinBoards(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "5f99c702-4eda-4aa8-82c0-af2577907a39",
      "parentUUID": "e9b7246f-02e5-4fc4-9075-45e03fb9b071",
      "skipped": false
    },
    {
      "title": "should get available chekcin boards by tag",
      "fullTitle": "getAvailableCheckinBoardsByTag should get available chekcin boards by tag",
      "timedOut": false,
      "duration": 368,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.getAvailableCheckinBoardsByTag(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "679dca18-bdd0-4cf2-8f46-d9ed27bcfccb",
      "parentUUID": "821c9c73-3107-4f55-ae93-e031ec41d7c5",
      "skipped": false
    },
    {
      "title": "should get available chekcin boards by type",
      "fullTitle": "getAvailableCheckinBoardsByType should get available chekcin boards by type",
      "timedOut": false,
      "duration": 354,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.getAvailableCheckinBoardsByType(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "a843b7cf-0baa-4082-ad14-a5e7e12adeca",
      "parentUUID": "f25ce327-6e7b-4760-8cb4-bb3c0c13f154",
      "skipped": false
    },
    {
      "title": "should execute task",
      "fullTitle": "executeTask should execute task",
      "timedOut": false,
      "duration": 386,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DailyTaskService.executeTask(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "f3311e1f-db44-44ca-808a-e759d7c00603",
      "parentUUID": "b862ea67-4776-4cc8-8faa-fef99fc16a16",
      "skipped": false
    },
    {
      "title": "should execute task by type",
      "fullTitle": "executeTasksByType should execute task by type",
      "timedOut": false,
      "duration": 361,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DailyTaskService.executeTasksByType(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "07565009-a7a5-45e1-8612-5545e8217b46",
      "parentUUID": "454448a2-e219-457a-b5e4-8bc656785473",
      "skipped": false
    },
    {
      "title": "should add execute tasks by type",
      "fullTitle": "addExecuteTasksByType should add execute tasks by type",
      "timedOut": false,
      "duration": 365,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DailyTaskService.addExecuteTasksByType(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "5372edfd-2ba7-49fd-a001-59aa6dd4e8cd",
      "parentUUID": "f3cf441a-8b54-4827-9152-ea65ea8263d1",
      "skipped": false
    },
    {
      "title": "should get daily tasks",
      "fullTitle": "getDailyTasks should get daily tasks",
      "timedOut": false,
      "duration": 394,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DailyTaskService.getDailyTasks(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "57718d18-83e4-4c53-aaa9-8932a1b7c443",
      "parentUUID": "33392cc6-ee7c-4b36-a23d-dfdc2bc8e0f0",
      "skipped": false
    },
    {
      "title": "should get daily tasks by type",
      "fullTitle": "getDailyTasksByType should get daily tasks by type",
      "timedOut": false,
      "duration": 404,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DailyTaskService.getDailyTasksByType(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "be401fc4-84d5-46d1-a9f7-a8b1c21cf37f",
      "parentUUID": "574805ab-62cc-4c15-801d-15e94b58d4ea",
      "skipped": false
    },
    {
      "title": "should get reward",
      "fullTitle": "getReward should get reward",
      "timedOut": false,
      "duration": 407,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DailyTaskService.getReward(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data === <span class=\"hljs-string\">'您已经领取了任务奖励，不要这么贪得无厌哦！'</span>) {<br>            assert(<span class=\"hljs-literal\">true</span>);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>                assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>            } <span class=\"hljs-keyword\">else</span> {<br>                assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>            }<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "47774a9d-58ec-4ff4-a0b3-d72ab217c975",
      "parentUUID": "b3aadd87-4bd9-44f2-8db0-1872e8ff08d9",
      "skipped": false
    },
    {
      "title": "should set task progress",
      "fullTitle": "setTaskProgress should set task progress",
      "timedOut": false,
      "duration": 354,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DailyTaskService.setTaskProgress(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "323d279e-e046-49bf-a534-208568755728",
      "parentUUID": "135181a4-7246-4a05-be32-ae1a6bbd690c",
      "skipped": false
    },
    {
      "title": "should set task progress by type",
      "fullTitle": "setTasksProgressByType should set task progress by type",
      "timedOut": false,
      "duration": 366,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DailyTaskService.setTasksProgressByType(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "36c50244-6085-45cf-9f23-fb6b74571041",
      "parentUUID": "f9b0a651-d31f-4481-a021-ae3954c25480",
      "skipped": false
    },
    {
      "title": "should add action count",
      "fullTitle": "addActionCount should add action count",
      "timedOut": false,
      "duration": 362,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.addActionCount(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "ac329572-e1b9-4c0b-9ee9-eec6e8348b91",
      "parentUUID": "ce1e7558-84e6-4e1f-84dd-7a142c9d1631",
      "skipped": false
    },
    {
      "title": "should add action count time",
      "fullTitle": "addActionCountTime should add action count time",
      "timedOut": false,
      "duration": 392,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.addActionCountTime(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "15b774c2-7505-426d-8474-9b38f8f2d5d2",
      "parentUUID": "b09dbfdf-e7f7-4792-b2f6-50b4d9da9582",
      "skipped": false
    },
    {
      "title": "should complete",
      "fullTitle": "complete should complete",
      "timedOut": false,
      "duration": 395,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.complete(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "4d6918e5-a409-403a-ab6f-672d93024dbc",
      "parentUUID": "24d17813-2a48-4c4d-b4af-e3a10945f5b6",
      "skipped": false
    },
    {
      "title": "should get achievement by id",
      "fullTitle": "getAchievementById should get achievement by id",
      "timedOut": false,
      "duration": 363,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getAchievementById(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "49fd9303-64f4-48ee-a40b-8b7f61aa7811",
      "parentUUID": "93392d22-e8be-4009-a2ed-4785220323b1",
      "skipped": false
    },
    {
      "title": "should get achievements",
      "fullTitle": "getAchievements should get achievements",
      "timedOut": false,
      "duration": 389,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getAchievements(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "7e78a774-caab-40ce-9259-f7410a58f61a",
      "parentUUID": "ad9686e4-058d-4cd9-8cfc-a63578703bad",
      "skipped": false
    },
    {
      "title": "should get achievements by type",
      "fullTitle": "getAchievementsByType should get achievements by type",
      "timedOut": false,
      "duration": 372,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getAchievementsByType(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "c5eedaeb-76f0-46fb-9687-5628ab4f081e",
      "parentUUID": "a0609a1b-69e8-4027-9299-189cfc9f3fad",
      "skipped": false
    },
    {
      "title": "should get action count",
      "fullTitle": "getActionCount should get action count",
      "timedOut": false,
      "duration": 376,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getActionCount(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "57298922-a011-4155-b251-aea333c62f00",
      "parentUUID": "5eb428a6-dc09-4e9a-bb30-da3a834c5010",
      "skipped": false
    },
    {
      "title": "should get all achievements",
      "fullTitle": "getAllAchievements should get all achievements",
      "timedOut": false,
      "duration": 358,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getAllAchievements(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "24293a1b-928f-498e-971a-7b8c6cf42f26",
      "parentUUID": "f3dff5a2-af9f-4c24-9b6d-fd28274ac4d4",
      "skipped": false
    },
    {
      "title": "should get all daily tasks",
      "fullTitle": "getAllDailyTasks should get all daily tasks",
      "timedOut": false,
      "duration": 367,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getAllDailyTasks(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "030fd868-1c62-4127-b405-a6276ce82578",
      "parentUUID": "c0403cde-11f5-41ea-bf38-71765526f30a",
      "skipped": false
    },
    {
      "title": "should get all tasks",
      "fullTitle": "getAllTasks should get all tasks",
      "timedOut": false,
      "duration": 406,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getAllTasks(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "a717cec8-9b26-41bd-ab12-8c512a084f86",
      "parentUUID": "0ae09f12-5e14-407f-b0b8-1fceede5652e",
      "skipped": false
    },
    {
      "title": "should get complete achievements",
      "fullTitle": "getCompleteAchievements should get complete achievements",
      "timedOut": false,
      "duration": 373,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getCompleteAchievements(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "e6036166-f1fd-41a8-8bba-5897c20d3446",
      "parentUUID": "0cb9bd02-5103-4e21-9c54-c508db75beab",
      "skipped": false
    },
    {
      "title": "should get complete daily tasks",
      "fullTitle": "getCompleteDailyTasks should get complete daily tasks",
      "timedOut": false,
      "duration": 366,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getCompleteDailyTasks(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "852dfb8b-5083-4adb-bdf5-8ece574a4fd1",
      "parentUUID": "e670f62c-d5c2-46c1-8cf9-52a3d3536cce",
      "skipped": false
    },
    {
      "title": "should get complete tasks",
      "fullTitle": "getCompleteTasks should get complete tasks",
      "timedOut": false,
      "duration": 343,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getCompleteTasks(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "2af8c5c2-2993-4bc8-8ef7-ef6081d6c837",
      "parentUUID": "50b40968-9656-4f45-bd49-91b5dd8a82bd",
      "skipped": false
    },
    {
      "title": "should get daily task by id",
      "fullTitle": "getDailyTaskById should get daily task by id",
      "timedOut": false,
      "duration": 360,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getDailyTaskById(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "b2169bc2-03e8-420f-88e6-863b285cf73b",
      "parentUUID": "e0d825ef-885d-4a1a-9f57-77307a606264",
      "skipped": false
    },
    {
      "title": "should get daily tasks",
      "fullTitle": "getDailyTasks should get daily tasks",
      "timedOut": false,
      "duration": 350,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getDailyTasks(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "2bce825e-9ff3-4b38-83d0-1a3328bfad20",
      "parentUUID": "256ba909-6a42-499b-ab19-667ddaf67ff0",
      "skipped": false
    },
    {
      "title": "should get daily tasks by type",
      "fullTitle": "getDailyTasksByType should get daily tasks by type",
      "timedOut": false,
      "duration": 350,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getDailyTasksByType(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "075d6566-b483-43a6-8e79-b5ac49eb8ce1",
      "parentUUID": "84e66fec-db44-48f8-9cef-7b3b13483a75",
      "skipped": false
    },
    {
      "title": "should get reward",
      "fullTitle": "getReward should get reward",
      "timedOut": false,
      "duration": 400,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getReward(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "5ed5ab61-47e8-47f7-bbad-e0607ada5924",
      "parentUUID": "dfb2e7b7-6ff3-4d38-adad-ae7107fb417c",
      "skipped": false
    },
    {
      "title": "should get daily tasks",
      "fullTitle": "getDailyTasks should get daily tasks",
      "timedOut": false,
      "duration": 351,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getDailyTasks(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "e69de50e-949e-460e-86a3-ed17aae5cc19",
      "parentUUID": "ab5b6550-b245-4036-b8e9-9ee5c883d0ec",
      "skipped": false
    },
    {
      "title": "should accept invite",
      "fullTitle": "acceptInvite should accept invite",
      "timedOut": false,
      "duration": 386,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.acceptInvite(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "1c2f3de4-0a94-4ec7-ad72-4e3677ac59e0",
      "parentUUID": "1202a719-8178-41e2-94fe-3c372dbafe61",
      "skipped": false
    },
    {
      "title": "should accept invite by mail",
      "fullTitle": "acceptInviteByMail should accept invite by mail",
      "timedOut": false,
      "duration": 366,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.acceptInviteByMail(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, mail, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "7fed2ecb-603a-4c1f-9977-2ea76f246d72",
      "parentUUID": "a6b58c5c-ff2f-4343-8f86-20b93a87455e",
      "skipped": false
    },
    {
      "title": "should get denied",
      "fullTitle": "getDenied should get denied",
      "timedOut": false,
      "duration": 381,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.getDenied(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "daa4d426-f751-43c6-8deb-d88fd1007115",
      "parentUUID": "f4368a54-baed-413c-8940-105f0bf49b49",
      "skipped": false
    },
    {
      "title": "should get friends count",
      "fullTitle": "getFrindsCount should get friends count",
      "timedOut": false,
      "duration": 358,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.getFrindsCount(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "756a2144-737a-4452-b825-56cf0b0988b1",
      "parentUUID": "656c817c-54b8-4f06-9917-9374bc25fc4a",
      "skipped": false
    },
    {
      "title": "should get invite",
      "fullTitle": "getInvite should get invite",
      "timedOut": false,
      "duration": 392,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.getInvite(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "82fa7ab1-6be4-43cf-b26d-9d915c6a7bb8",
      "parentUUID": "cd22297a-839b-49c7-9c8c-598475a9046b",
      "skipped": false
    },
    {
      "title": "should get my friends",
      "fullTitle": "getMyFriends should get my friends",
      "timedOut": false,
      "duration": 364,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.getMyFriends(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "559de90e-dc93-4f50-bcbd-ecbdc4ffa739",
      "parentUUID": "58bf0aa8-8c40-44f5-9ca5-92c225b731ca",
      "skipped": false
    },
    {
      "title": "should get not confirm",
      "fullTitle": "getNotConfirm should get not confirm",
      "timedOut": false,
      "duration": 347,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.getNotConfirm(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "8f9202a4-ee1c-4814-8b10-2f6415efe5eb",
      "parentUUID": "8e4e6aef-958d-4213-ad0e-1afb938a7c06",
      "skipped": false
    },
    {
      "title": "should invite",
      "fullTitle": "invite should invite",
      "timedOut": false,
      "duration": 363,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.invite(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'456'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "cde8f515-f252-4cae-95a8-f2e4e723e6bb",
      "parentUUID": "c4b123f3-f45c-4820-9bc4-f4a1c2edd857",
      "skipped": false
    },
    {
      "title": "should invite by mails",
      "fullTitle": "inviteByMails should invite by mails",
      "timedOut": false,
      "duration": 400,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.inviteByMails(<span class=\"hljs-string\">'123'</span>, [<span class=\"hljs-string\">'123'</span>], [mail], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "d808d0df-d934-413f-bec1-e1fcfd8e0740",
      "parentUUID": "c2991be9-d573-44be-99a9-b99b98acecb3",
      "skipped": false
    },
    {
      "title": "should is my friend",
      "fullTitle": "isMyfriend should is my friend",
      "timedOut": false,
      "duration": 369,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.isMyfriend(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "336394b2-94b0-4545-a9e4-e76bec3c4c9a",
      "parentUUID": "ff006d78-7908-40a7-b18a-c117e042ed28",
      "skipped": false
    },
    {
      "title": "should refuse",
      "fullTitle": "refuse should refuse",
      "timedOut": false,
      "duration": 381,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.refuse(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "c93d5732-cf89-4595-8118-5fade6040aa2",
      "parentUUID": "bbdc2796-59c0-4f45-8471-a15625073252",
      "skipped": false
    },
    {
      "title": "should unfriend",
      "fullTitle": "unfriend should unfriend",
      "timedOut": false,
      "duration": 394,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.unfriend(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "4d70fe8b-5862-48c7-b115-9347d3921c2a",
      "parentUUID": "95d56b93-bece-4db3-a924-84a8b17310b2",
      "skipped": false
    },
    {
      "title": "should get all my friends and ext",
      "fullTitle": "getAllMyFriendsAndExt should get all my friends and ext",
      "timedOut": false,
      "duration": 369,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipExtraService.getAllMyFriendsAndExt(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "a3f4b9d3-ad59-439b-b5a1-690e1370c811",
      "parentUUID": "d634019d-1799-48c6-bdd8-617760575508",
      "skipped": false
    },
    {
      "title": "should get my friends and ext",
      "fullTitle": "getMyFriendAndExt should get my friends and ext",
      "timedOut": false,
      "duration": 415,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipExtraService.getMyFriendAndExt(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "2703e757-387a-46f4-bfa2-8264487507ff",
      "parentUUID": "9e3e5293-7aff-46b9-9c8c-1b84d9e1a458",
      "skipped": false
    },
    {
      "title": "should update all my friend ext",
      "fullTitle": "updateAllMyFriendExt should update all my friend ext",
      "timedOut": false,
      "duration": 384,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipExtraService.updateAllMyFriendExt(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "56f6a89a-6eab-49aa-93bb-cab27fcba93d",
      "parentUUID": "e143d9da-d97d-4b80-8bd4-8f77c089b99c",
      "skipped": false
    },
    {
      "title": "should update my friend all ext",
      "fullTitle": "updateMyFriendAllExt should update my friend all ext",
      "timedOut": false,
      "duration": 349,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipExtraService.updateMyFriendAllExt(player.id, <span class=\"hljs-string\">''</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "9e50cee5-9963-4a23-bb17-a5d962efa8ac",
      "parentUUID": "f22c4bfc-9407-4601-8f75-ddf76d7765ef",
      "skipped": false
    },
    {
      "title": "should update my friend ext",
      "fullTitle": "updateMyFriendExt should update my friend ext",
      "timedOut": false,
      "duration": 366,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipExtraService.updateMyFriendExt(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "4c5c105c-3522-401e-8e0b-9466cacaf393",
      "parentUUID": "11acff54-c826-4782-98c9-a449b81058a0",
      "skipped": false
    },
    {
      "title": "should add player into black list",
      "fullTitle": "addPlayerIntoBlacklist should add player into black list",
      "timedOut": false,
      "duration": 428,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.BlacklistService.addPlayerIntoBlacklist(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "82d3a220-b652-407a-b6c3-5a778eee5206",
      "parentUUID": "c5aab277-1960-4d42-96da-e412bb3d3a88",
      "skipped": false
    },
    {
      "title": "should is in black list",
      "fullTitle": "isInBlacklist should is in black list",
      "timedOut": false,
      "duration": 345,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.BlacklistService.isInBlacklist(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "c8261244-9aee-492d-8a93-b8b2b2759227",
      "parentUUID": "90607a16-8aed-4b29-9244-097b6191475f",
      "skipped": false
    },
    {
      "title": "should auto balance draw",
      "fullTitle": "autoBalanceDraw should auto balance draw",
      "timedOut": false,
      "duration": 366,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GachaBoxService.autoBalanceDraw(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "f4b8e71d-785e-450e-8da7-203a1f3ea4bd",
      "parentUUID": "3d1fd675-8b69-4439-a28b-c3ecfba0861d",
      "skipped": false
    },
    {
      "title": "should auto balance draw quality",
      "fullTitle": "autoBalanceDrawQuality should auto balance draw quality",
      "timedOut": false,
      "duration": 392,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GachaBoxService.autoBalanceDrawQuality(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "3b497564-3e5c-425c-bdde-9f008ddfc1d7",
      "parentUUID": "56d989c9-8ba7-4f1e-9c62-040c7f901c4a",
      "skipped": false
    },
    {
      "title": "should auto balance max draw",
      "fullTitle": "autoBalanceDrawMaxQuality should auto balance max draw",
      "timedOut": false,
      "duration": 393,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GachaBoxService.autoBalanceDrawMaxQuality(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "7a7e197b-25fe-49f6-8554-9bb6ea094e1c",
      "parentUUID": "877d21d5-d3a4-47b2-9a91-8441e49ada6f",
      "skipped": false
    },
    {
      "title": "should draw",
      "fullTitle": "draw should draw",
      "timedOut": false,
      "duration": 409,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GachaBoxService.draw(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "a8e0c1af-7faa-4752-91dc-fcc4e68109a3",
      "parentUUID": "923909de-60c3-46ee-9942-c92e37e91c52",
      "skipped": false
    },
    {
      "title": "should get available gacha box",
      "fullTitle": "getAvailableGachaBox should get available gacha box",
      "timedOut": false,
      "duration": 450,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GachaBoxService.getAvailableGachaBox(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "e6230fba-9d62-4c39-a5d6-d8994d11933a",
      "parentUUID": "2090d54b-dc4c-4def-8997-b2c38c625a04",
      "skipped": false
    },
    {
      "title": "should get gacha box by name",
      "fullTitle": "getGachaBoxByName should get gacha box by name",
      "timedOut": false,
      "duration": 383,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GachaBoxService.getGachaBoxByName(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "aae17d87-7c38-4375-a86a-f077452a8a49",
      "parentUUID": "51cd6cf0-d3fe-4511-9ca8-eb5b7b5dd9c5",
      "skipped": false
    },
    {
      "title": "should get lotteries by gacha box id",
      "fullTitle": "getLotteriesByGachaBoxId should get lotteries by gacha box id",
      "timedOut": false,
      "duration": 360,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GachaBoxService.getLotteriesByGachaBoxId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "2f624b76-1fcd-456a-99c9-d1dcf6fe1725",
      "parentUUID": "eddf2a65-c08f-4f02-9174-07e6107c9bc1",
      "skipped": false
    },
    {
      "title": "should limit draw",
      "fullTitle": "limitDraw should limit draw",
      "timedOut": false,
      "duration": 352,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GachaBoxService.limitDraw(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "5664a276-1917-404f-9bc1-034cdabf3f91",
      "parentUUID": "c2763f57-f401-49f9-9250-fe967cf8e999",
      "skipped": false
    },
    {
      "title": "should add up leader board score",
      "fullTitle": "addUpLeaderBoardScore should add up leader board score",
      "timedOut": false,
      "duration": 383,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.LeaderBoardService.addUpLeaderBoardScore(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "c4bdfbb7-9d81-4fd7-b1e4-8f87768bd194",
      "parentUUID": "a3e2c5f2-86b8-4963-8e8e-28e295da8038",
      "skipped": false
    },
    {
      "title": "should get leader board by leader id",
      "fullTitle": "getLeaderBoardByLeaderId should get leader board by leader id",
      "timedOut": false,
      "duration": 358,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.LeaderBoardService.getLeaderBoardByLeaderId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "4314193d-274e-4f3f-ad09-0148cb59f347",
      "parentUUID": "36cbee67-8ebf-4df7-9fe3-6d7285520b3d",
      "skipped": false
    },
    {
      "title": "should get leader board score by example",
      "fullTitle": "getLeaderBoardScoreByExample should get leader board score by example",
      "timedOut": false,
      "duration": 351,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.LeaderBoardService.getLeaderBoardScoreByExample(<span class=\"hljs-string\">''</span>, player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "94093970-5b60-49e2-baba-3d50a46c7766",
      "parentUUID": "3643939d-bb2a-4ce9-9ddc-a1667fe46a5f",
      "skipped": false
    },
    {
      "title": "should get leader board score by leader id and player id",
      "fullTitle": "getLeaderBoardScoreByLeaderIdAndPlayerId should get leader board score by leader id and player id",
      "timedOut": false,
      "duration": 372,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.LeaderBoardService.getLeaderBoardScoreByLeaderIdAndPlayerId(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "993835a7-0a84-4672-87e8-b4d75a65f806",
      "parentUUID": "9cfbf728-c37f-4056-aaa4-45360c8c7247",
      "skipped": false
    },
    {
      "title": "should get leader board scores by leader id and player id",
      "fullTitle": "getLeaderBoardScoresByLeaderIdAndPlayerId should get leader board scores by leader id and player id",
      "timedOut": false,
      "duration": 416,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.LeaderBoardService.getLeaderBoardScoresByLeaderIdAndPlayerId(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "cdb4e809-41b1-4bb3-a6a9-539113591355",
      "parentUUID": "e67b6466-f471-4e9a-b842-8f5b00380d9c",
      "skipped": false
    },
    {
      "title": "should get top leader board score by leader id",
      "fullTitle": "getTopLeaderBoardScoreByLeaderId should get top leader board score by leader id",
      "timedOut": false,
      "duration": 384,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.LeaderBoardService.getTopLeaderBoardScoreByLeaderId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "7e9825e8-ed9d-4df5-ba6c-f3b4e05ce675",
      "parentUUID": "0683721b-6f45-4e12-b034-91d41ba96801",
      "skipped": false
    },
    {
      "title": "should submit leader board score",
      "fullTitle": "submitLeaderBoardScore should submit leader board score",
      "timedOut": false,
      "duration": 361,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.LeaderBoardService.submitLeaderBoardScore(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "ed549cbe-9959-47af-a9ff-9223db1e0265",
      "parentUUID": "6a2431d3-b1a4-4f68-a331-ec43423442d4",
      "skipped": false
    },
    {
      "title": "should send mail",
      "fullTitle": "sendMail should send mail",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "0b68a5fc-ebed-4fc8-9300-b35a013e2022",
      "parentUUID": "df2a3780-a38d-462a-8ae0-ba3cffd380ff",
      "skipped": false
    },
    {
      "title": "should receive",
      "fullTitle": "receive should receive",
      "timedOut": false,
      "duration": 372,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.MailService.receive(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "74feb482-8dc0-4b6a-9ed9-4f222c744f75",
      "parentUUID": "764dc61b-b92b-4157-932a-5250f53e6907",
      "skipped": false
    },
    {
      "title": "should receive unread",
      "fullTitle": "receiveUnread should receive unread",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "aae0620b-4207-42d0-8e98-3d5996908a3f",
      "parentUUID": "7bce74f4-ace9-49ca-850c-de56de41023f",
      "skipped": false
    },
    {
      "title": "should read mail",
      "fullTitle": "readMail should read mail",
      "timedOut": false,
      "duration": 365,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.MailService.readMail(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "b803d921-0858-49f2-a19d-cdea714edc34",
      "parentUUID": "7bfded94-4029-44d2-bd7a-f0e74a8a0183",
      "skipped": false
    },
    {
      "title": "should read and pick attachment",
      "fullTitle": "readAndPickAttachment should read and pick attachment",
      "timedOut": false,
      "duration": 388,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.MailService.readAndPickAttachment(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "2015211f-60d6-4974-8af9-0ec64758200e",
      "parentUUID": "07fc684d-678c-47f4-aa14-0ddfae4ee4a8",
      "skipped": false
    },
    {
      "title": "should delete mail",
      "fullTitle": "deleteMail should delete mail",
      "timedOut": false,
      "duration": 407,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.MailService.deleteMail([<span class=\"hljs-string\">'123'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "bfb13d08-2389-493c-9f53-02ab93096417",
      "parentUUID": "1b0b4425-e649-49a8-9ab5-bee8d945eb23",
      "skipped": false
    },
    {
      "title": "should get readed and unreaded mails",
      "fullTitle": "getReadedAndUnreadedMails should get readed and unreaded mails",
      "timedOut": false,
      "duration": 410,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.MailService.getReadedAndUnreadedMails(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "77cc0494-35d2-47b8-937b-7af35fa1152d",
      "parentUUID": "91fcb30f-5a60-41ec-a3b3-9f50f579675f",
      "skipped": false
    },
    {
      "title": "should pich attachment",
      "fullTitle": "pickAttachment should pich attachment",
      "timedOut": false,
      "duration": 429,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.MailService.pickAttachment(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "64e50260-0bb1-43d9-a94e-33c770d1afc5",
      "parentUUID": "7e7d9d2e-d678-4137-9036-e1603aa50036",
      "skipped": false
    },
    {
      "title": "should get latest notification",
      "fullTitle": "getLatestNotification should get latest notification",
      "timedOut": false,
      "duration": 462,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.NotificationService.getLatestNotification(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "7313ff01-5020-45cb-894b-d2a1ab37582c",
      "parentUUID": "4abeacd6-c60e-426f-8eda-ebb0938ca765",
      "skipped": false
    },
    {
      "title": "should get latest notification by time",
      "fullTitle": "getLatestNotificationByTime should get latest notification by time",
      "timedOut": false,
      "duration": 411,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.NotificationService.getLatestNotificationByTime(player.id, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "e32f554a-8273-493a-959b-f1e505c7b5c3",
      "parentUUID": "d0601f3a-4804-4c9f-a578-654f971965e7",
      "skipped": false
    },
    {
      "title": "should get supported stores",
      "fullTitle": "getSupportedStores should get supported stores",
      "timedOut": false,
      "duration": 382,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PurchaseService.getSupportedStores(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "acc808d5-d07e-47ef-8374-1d7544c14a82",
      "parentUUID": "b4001da8-b898-4a38-9d23-accecb5b71e5",
      "skipped": false
    },
    {
      "title": "should get available charge points",
      "fullTitle": "getAvailableChargePoints should get available charge points",
      "timedOut": false,
      "duration": 402,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PurchaseService.getAvailableChargePoints(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "9dc60458-6a33-400d-8426-174c25299dff",
      "parentUUID": "417cbd5c-5311-41ad-a311-11bd21c12813",
      "skipped": false
    },
    {
      "title": "should get payment result",
      "fullTitle": "getPaymentResult should get payment result",
      "timedOut": false,
      "duration": 385,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PurchaseService.getPaymentResult(player.id, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "e7c564d8-f432-4a99-b795-5455cd7444cc",
      "parentUUID": "4add43c7-78c2-41f3-8cc0-1f859ff254f0",
      "skipped": false
    },
    {
      "title": "should get total charge cost",
      "fullTitle": "getTotalChargeCost should get total charge cost",
      "timedOut": false,
      "duration": 386,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PurchaseService.getTotalChargeCost(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "898cb174-14f6-40c2-ba7d-9a17daa19d75",
      "parentUUID": "e5910f72-57c2-4f38-bbf7-f356935318de",
      "skipped": false
    },
    {
      "title": "should is first charge",
      "fullTitle": "isFirstCharge should is first charge",
      "timedOut": false,
      "duration": 366,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PurchaseService.isFirstCharge(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "3249f47d-cf80-43f7-b16e-904cc20ae289",
      "parentUUID": "c8dedd39-e157-4d4d-b518-018c103ed583",
      "skipped": false
    },
    {
      "title": "should get charge times",
      "fullTitle": "getChargeTimes should get charge times",
      "timedOut": false,
      "duration": 392,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PurchaseService.getChargeTimes(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "bbc72c20-c421-4700-8f8a-3c2f332303b4",
      "parentUUID": "7a9a34b2-972b-4ffe-9328-18aa623842ec",
      "skipped": false
    },
    {
      "title": "should get default store",
      "fullTitle": "getDefaultStore should get default store",
      "timedOut": false,
      "duration": 376,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StoreService.getDefaultStore(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "cc6d4838-87dc-4610-8ea1-30666485270d",
      "parentUUID": "59a6dc30-d067-4130-a6f2-7f5f25ecf7cf",
      "skipped": false
    },
    {
      "title": "should ge store",
      "fullTitle": "getStore should ge store",
      "timedOut": false,
      "duration": 374,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StoreService.getStore(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "0251df6c-11a5-40c5-ab71-1394402c7b08",
      "parentUUID": "c04838c6-d5de-4a82-a65e-546e8995f083",
      "skipped": false
    },
    {
      "title": "should purchase",
      "fullTitle": "purchase should purchase",
      "timedOut": false,
      "duration": 400,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StoreService.purchase(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "5f66976f-ed85-473f-b477-5552a0beeaaf",
      "parentUUID": "9d031f9b-903b-435e-9a70-f76143bcffbb",
      "skipped": false
    },
    {
      "title": "should count store orders by player id",
      "fullTitle": "countStoreOrdersByPlayerId should count store orders by player id",
      "timedOut": false,
      "duration": 353,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StoreService.countStoreOrdersByPlayerId(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "4a7332a9-e254-418f-bb31-3a8795c5811e",
      "parentUUID": "9755867c-cd35-4739-9d91-c45f7e0d1dce",
      "skipped": false
    },
    {
      "title": "should count item orders by player id",
      "fullTitle": "countItemOrdersByPlayerId should count item orders by player id",
      "timedOut": false,
      "duration": 367,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StoreService.countItemOrdersByPlayerId(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "2af6a286-ae06-402e-bb28-0ae9f8b3f3ea",
      "parentUUID": "74a99d77-7c18-4f55-b32a-5ac7fb26125c",
      "skipped": false
    },
    {
      "title": "should get oder by id",
      "fullTitle": "getOrderById should get oder by id",
      "timedOut": false,
      "duration": 350,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StoreService.getOrderById(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "696786a6-96df-4772-9b4e-724bf30568b6",
      "parentUUID": "c311a0cf-c947-4b32-b68b-7927e4bbf319",
      "skipped": false
    },
    {
      "title": "should get last purchase time mills",
      "fullTitle": "getLastPurchaseTimeMillis should get last purchase time mills",
      "timedOut": false,
      "duration": 392,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StoreService.getLastPurchaseTimeMillis(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "274d71e5-5a98-4cae-af48-e7bb787b5417",
      "parentUUID": "511dcd62-4e25-4ea1-883d-b2bed3d1dcc8",
      "skipped": false
    },
    {
      "title": "should update order status",
      "fullTitle": "updateOrderStatus should update order status",
      "timedOut": false,
      "duration": 358,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StoreService.updateOrderStatus(<span class=\"hljs-string\">''</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "144dca31-da22-47a7-a516-54f1964718d8",
      "parentUUID": "dc15d5ad-bbd1-4b19-8742-0d902e7b8b7a",
      "skipped": false
    },
    {
      "title": "should get all charge points",
      "fullTitle": "getAllChargePoints should get all charge points",
      "timedOut": false,
      "duration": 361,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.ChargePointService.getAllChargePoints(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "70c9b4ac-51c7-4ba8-9ac1-bd38d992a63d",
      "parentUUID": "8f168934-0d39-4821-8fc3-24105591ccd0",
      "skipped": false
    },
    {
      "title": "should get available charge points",
      "fullTitle": "getAvailableChargePoints should get available charge points",
      "timedOut": false,
      "duration": 320,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.ChargePointService.getAvailableChargePoints(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "5bb8f0f0-2920-4538-90a8-4f19744f6089",
      "parentUUID": "44ff5716-eb6d-4e76-a2d5-09fb33e35c74",
      "skipped": false
    },
    {
      "title": "should get by boss id str",
      "fullTitle": "getByBossIdstr should get by boss id str",
      "timedOut": false,
      "duration": 382,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.BossService.getByBossIdstr([<span class=\"hljs-string\">''</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "ce35364e-501e-4f84-aa8d-16f553970a78",
      "parentUUID": "81a273dd-ac59-41a1-b7e3-1ab62454a387",
      "skipped": false
    },
    {
      "title": "should get by boss id int",
      "fullTitle": "getByBossIdint should get by boss id int",
      "timedOut": false,
      "duration": 433,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.BossService.getByBossIdint([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "ac10b993-e9eb-4430-b8db-5c19cb3de11a",
      "parentUUID": "67fb0be3-2b5a-41b0-b4b9-e42471836462",
      "skipped": false
    },
    {
      "title": "should get by boss id",
      "fullTitle": "getByBossId should get by boss id",
      "timedOut": false,
      "duration": 388,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.BossService.getByBossId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "5904a819-5dfb-45fd-986b-14bb232f5b20",
      "parentUUID": "643b11e3-84e1-4c5e-a4e0-c0bf7ae27efe",
      "skipped": false
    },
    {
      "title": "should attack",
      "fullTitle": "attack should attack",
      "timedOut": false,
      "duration": 371,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.BossService.attack(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "0d4292fc-ec81-427b-8e2f-18b1087653ca",
      "parentUUID": "6bddc173-a938-4f8e-b8ca-2aabee90252f",
      "skipped": false
    },
    {
      "title": "should get current hp",
      "fullTitle": "getCurrentHP should get current hp",
      "timedOut": false,
      "duration": 442,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.BossService.getCurrentHP(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "d30362d2-2084-4569-8833-878a10d31b8d",
      "parentUUID": "034f806d-f889-4524-8a43-c6c82e873173",
      "skipped": false
    },
    {
      "title": "should get last attack player",
      "fullTitle": "getLastAttackPlayer should get last attack player",
      "timedOut": false,
      "duration": 401,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.BossService.getLastAttackPlayer(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "7daeb629-5458-46d7-a2dc-0d1485eabe66",
      "parentUUID": "96204ecc-10ea-4146-b112-0395e2d8a2ec",
      "skipped": false
    },
    {
      "title": "should get url",
      "fullTitle": "getUrl should get url",
      "timedOut": false,
      "duration": 393,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FileStorageService.getUrl(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "267d281f-e138-446f-a22a-6aa4c8d635c0",
      "parentUUID": "8a0cb77e-ab1c-4f80-b6f9-6e1351a79e90",
      "skipped": false
    },
    {
      "title": "should delete",
      "fullTitle": "delete should delete",
      "timedOut": false,
      "duration": 372,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FileStorageService.delete(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "38b00142-2040-4fd7-88b0-1a30f40b6802",
      "parentUUID": "2dd5a3ff-39dc-4c7b-a1db-fc08432134e6",
      "skipped": false
    },
    {
      "title": "should get gifts",
      "fullTitle": "getGifts should get gifts",
      "timedOut": false,
      "duration": 417,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GiftCodeService.getGifts(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "a98aec85-0ff6-4114-9eaa-266a5b4bd905",
      "parentUUID": "3838ce82-bba1-4ac1-a9a5-68a24c43ea6d",
      "skipped": false
    },
    {
      "title": "should redeem",
      "fullTitle": "redeem should redeem",
      "timedOut": false,
      "duration": 373,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GiftCodeService.redeem(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "6e7872f6-a06f-4712-8f0c-af8a9fd54f76",
      "parentUUID": "cf8f9d5b-b5c2-4664-9cfd-6823911865c2",
      "skipped": false
    },
    {
      "title": "should get gifts by code",
      "fullTitle": "getGiftByCode should get gifts by code",
      "timedOut": false,
      "duration": 411,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GiftCodeService.getGiftByCode(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "4c151996-adf4-4a75-b8b6-17cbbd1526ae",
      "parentUUID": "2e5450a1-1fd7-406c-b3db-010044115564",
      "skipped": false
    },
    {
      "title": "should get record",
      "fullTitle": "getRecord should get record",
      "timedOut": false,
      "duration": 387,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GiftCodeService.getRecord(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "bca13370-5f22-4357-b3e4-888d4e5c9918",
      "parentUUID": "8abdd4fc-d6ac-4cc1-b1ae-16ba1898c92e",
      "skipped": false
    },
    {
      "title": "should redeem over mail",
      "fullTitle": "redeemOverMail should redeem over mail",
      "timedOut": false,
      "duration": 385,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GiftCodeService.redeemOverMail(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "b83cae8e-8a9b-48e9-9a8d-b0af2726dfdd",
      "parentUUID": "a5ce29be-87db-40ef-b06e-50e646fc2018",
      "skipped": false
    },
    {
      "title": "should redeem gift by code over mail",
      "fullTitle": "redeemGiftByCodeOverMail should redeem gift by code over mail",
      "timedOut": false,
      "duration": 355,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GiftCodeService.redeemGiftByCodeOverMail(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "04e62780-29ad-4cf7-9197-e964271c4a56",
      "parentUUID": "0aa0d354-e986-423c-98bf-12d3b27b42ae",
      "skipped": false
    },
    {
      "title": "should push message",
      "fullTitle": "pushMessage should push message",
      "timedOut": false,
      "duration": 351,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PrivateChannelService.pushMessage(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "7fd18f6b-f86c-4f69-a5a7-c92965ea4e07",
      "parentUUID": "a361beb7-15dd-4506-b0b4-d3f6e69870c2",
      "skipped": false
    },
    {
      "title": "should push messages",
      "fullTitle": "pushMessages should push messages",
      "timedOut": false,
      "duration": 401,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PrivateChannelService.pushMessages(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "22520383-2b54-4c1f-b8e3-b35e323086ab",
      "parentUUID": "9e0eed28-c51e-42a3-8c77-9e3d47a5ceda",
      "skipped": false
    },
    {
      "title": "should pop message",
      "fullTitle": "popMessage should pop message",
      "timedOut": false,
      "duration": 361,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PrivateChannelService.popMessage(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "1b65a171-43c3-4e08-83ff-a76be0ea0fee",
      "parentUUID": "8136dfc2-f539-4dcd-bcb4-32df4dcde5cb",
      "skipped": false
    },
    {
      "title": "should pop message by",
      "fullTitle": "popMessageBy should pop message by",
      "timedOut": false,
      "duration": 367,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PrivateChannelService.popMessageBy(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "02e60f82-50fb-403d-8f95-e8606b55ba24",
      "parentUUID": "55c8f8f5-8914-4983-b3ed-c97080058590",
      "skipped": false
    },
    {
      "title": "should clear channel",
      "fullTitle": "clearChannel should clear channel",
      "timedOut": false,
      "duration": 358,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PrivateChannelService.clearChannel(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "418d95be-d8af-40ac-86ef-2eeae7e61e63",
      "parentUUID": "982524c1-af3e-41e9-bc3a-d002b8149555",
      "skipped": false
    },
    {
      "title": "should create channel",
      "fullTitle": "createChannel should create channel",
      "timedOut": false,
      "duration": 411,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PublicChannelService.createChannel(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "b82b510b-b9f0-431e-8ae4-472164e4c8be",
      "parentUUID": "2cecffab-17e8-46a2-a8a6-4574d45d4f00",
      "skipped": false
    },
    {
      "title": "should push message",
      "fullTitle": "pushMessage should push message",
      "timedOut": false,
      "duration": 421,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PublicChannelService.pushMessage(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "ef6d17b3-dd07-4e72-a9c7-a909c0f8157c",
      "parentUUID": "4372a5d0-13e9-4cd6-bf89-ee7c513e3dfd",
      "skipped": false
    },
    {
      "title": "should pop all message",
      "fullTitle": "popAllMessage should pop all message",
      "timedOut": false,
      "duration": 339,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PublicChannelService.popAllMessage(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "6077ae11-b282-474e-99fe-1f163aac0711",
      "parentUUID": "b41367b1-e87d-4a89-852f-ba3a537ad03d",
      "skipped": false
    },
    {
      "title": "should pop message",
      "fullTitle": "popMessage should pop message",
      "timedOut": false,
      "duration": 393,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PublicChannelService.popMessage(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "44d31841-0b48-4f8c-b033-7a61d45b3665",
      "parentUUID": "1cfe2c5f-f479-44f2-acd4-0600172548e9",
      "skipped": false
    },
    {
      "title": "should pop message or num",
      "fullTitle": "popMessageOrnum should pop message or num",
      "timedOut": false,
      "duration": 398,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PublicChannelService.popMessageOrnum(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "1c07055c-49de-4e03-b33f-75440f685f69",
      "parentUUID": "cf403644-0b18-4955-9231-e2b2f24dbec0",
      "skipped": false
    },
    {
      "title": "should pop message or num tim",
      "fullTitle": "popMessageOrnumtim should pop message or num tim",
      "timedOut": false,
      "duration": 378,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PublicChannelService.popMessageOrnumtim(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "3a42a753-7d04-4fb8-a14c-15b39100d9e3",
      "parentUUID": "44868966-70a3-4ac0-ad54-219127671097",
      "skipped": false
    },
    {
      "title": "should clear channel",
      "fullTitle": "clearChannel should clear channel",
      "timedOut": false,
      "duration": 344,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PublicChannelService.clearChannel(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "b3f6826e-bcdf-4b46-850f-217083919647",
      "parentUUID": "e95f8196-27a9-4710-9987-aa5facd88f9b",
      "skipped": false
    },
    {
      "title": "should delete message",
      "fullTitle": "deleteMessage should delete message",
      "timedOut": false,
      "duration": 393,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PublicChannelService.deleteMessage(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">123</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "58674de5-2d35-47a8-8159-972e287e517d",
      "parentUUID": "e2ba2155-4ccf-45cd-972f-f1c6dfe92e9a",
      "skipped": false
    },
    {
      "title": "should get message content",
      "fullTitle": "getMessageContent should get message content",
      "timedOut": false,
      "duration": 393,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PublicChannelService.getMessageContent(<span class=\"hljs-number\">123</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "09719f0b-dbb3-4c9a-9634-da4efb5642a8",
      "parentUUID": "291d6ab5-8717-4024-92a6-09b167990792",
      "skipped": false
    },
    {
      "title": "should create did",
      "fullTitle": "createDid should create did",
      "timedOut": false,
      "duration": 384,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DelegateDidService.createDid(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "9dfa0d6e-754b-4005-9c50-87e44de09f1d",
      "parentUUID": "b596572e-dae1-4ab9-ad97-cb181ceb2b5c",
      "skipped": false
    },
    {
      "title": "should query by did",
      "fullTitle": "queryByDid should query by did",
      "timedOut": false,
      "duration": 331,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DelegateDidService.queryByDid(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "e97c3173-18ca-44ed-8eaa-0844fe2bb2ac",
      "parentUUID": "d1ec8a9f-010b-495a-8099-825635c7cdd0",
      "skipped": false
    },
    {
      "title": "should query by conditon",
      "fullTitle": "queryByCondition should query by conditon",
      "timedOut": false,
      "duration": 651,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DelegateDidService.queryByCondition(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "404b33f3-11f6-4ca1-aba7-5027b165c9f0",
      "parentUUID": "69befb39-d139-47c6-a2b2-35b18f507ed9",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "getValue should get value",
      "timedOut": false,
      "duration": 371,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.getValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "0aa42e77-7721-420c-9806-a6d5f92ca134",
      "parentUUID": "3c2fa1e8-7777-463a-b40a-14a5f8ccc376",
      "skipped": false
    },
    {
      "title": "should save or update value",
      "fullTitle": "saveOrUpdateValue should save or update value",
      "timedOut": false,
      "duration": 359,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.saveOrUpdateValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "b585f5dd-9bc0-406b-bf7a-90093d4f8599",
      "parentUUID": "23726ad2-67ab-4370-a17d-4dfdb9770504",
      "skipped": false
    },
    {
      "title": "should get list value",
      "fullTitle": "getListValue should get list value",
      "timedOut": false,
      "duration": 413,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.getListValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "6715c757-f2e3-4e4b-94aa-ca97099da289",
      "parentUUID": "c1d69102-0119-43dd-8e4a-3e6a5982afd7",
      "skipped": false
    },
    {
      "title": "should add list value",
      "fullTitle": "addListValue should add list value",
      "timedOut": false,
      "duration": 348,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.addListValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "c6d85e99-cba1-41c0-8b06-1f8c483a36e4",
      "parentUUID": "e51c3d8d-d827-4f89-a5e7-6df56603a968",
      "skipped": false
    },
    {
      "title": "should update list value",
      "fullTitle": "updateListValue should update list value",
      "timedOut": false,
      "duration": 458,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.updateListValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "396bc0f9-412b-480f-a58a-a685939188d5",
      "parentUUID": "0a248c91-9c69-49e9-9025-2829638967df",
      "skipped": false
    },
    {
      "title": "should get map value",
      "fullTitle": "getMapValue should get map value",
      "timedOut": false,
      "duration": 341,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.getMapValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "38b33415-1654-478f-9f42-b7cb26beffb9",
      "parentUUID": "399f0021-92c2-4f4e-b347-c64d2d86cba4",
      "skipped": false
    },
    {
      "title": "should get map value by hash key",
      "fullTitle": "getMapValueByHashKey should get map value by hash key",
      "timedOut": false,
      "duration": 379,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.getMapValueByHashKey(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "e2829ddd-f539-415a-92df-263453d943e5",
      "parentUUID": "0d3d8531-1068-4bc6-80d1-b92ab3f31028",
      "skipped": false
    },
    {
      "title": "should save or update map",
      "fullTitle": "saveOrUpdateMap should save or update map",
      "timedOut": false,
      "duration": 339,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.saveOrUpdateMap(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "045122e3-3cf5-4e23-8f83-4127bdd5bfad",
      "parentUUID": "15b45aa8-0a1a-4a2d-b0b3-7dabe0c11eea",
      "skipped": false
    },
    {
      "title": "should set or update hash value",
      "fullTitle": "setOrUpdateHashValue should set or update hash value",
      "timedOut": false,
      "duration": 397,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.setOrUpdateHashValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "9744deec-818a-40ab-9a85-caef4bbae473",
      "parentUUID": "84291790-3ba6-4749-9e75-46de937b5bba",
      "skipped": false
    },
    {
      "title": "should get set value",
      "fullTitle": "getSetValue should get set value",
      "timedOut": false,
      "duration": 382,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.getSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "20e4f065-36fa-428d-9580-e73e82340d58",
      "parentUUID": "06574e35-326c-4960-99b1-88ffc924fe16",
      "skipped": false
    },
    {
      "title": "should add set value",
      "fullTitle": "addSetValue should add set value",
      "timedOut": false,
      "duration": 385,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.addSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "fff1e474-35cf-41aa-bf55-36a7badb06cc",
      "parentUUID": "8aa37e6a-3429-4b77-9582-667f5b76cdc2",
      "skipped": false
    },
    {
      "title": "should update set value",
      "fullTitle": "updateSetValue should update set value",
      "timedOut": false,
      "duration": 369,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.updateSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "60ef947c-52aa-4937-aa82-c4a9ce978c99",
      "parentUUID": "6aa5f0be-58c0-41d1-a7c1-b516bfaf4f79",
      "skipped": false
    },
    {
      "title": "should get z set value",
      "fullTitle": "getZSetValue should get z set value",
      "timedOut": false,
      "duration": 390,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.getZSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "336ddc70-8dcf-46d0-aeae-20f832e02f97",
      "parentUUID": "29ac7406-1ed3-4ba7-abd8-40cffa6aa0bb",
      "skipped": false
    },
    {
      "title": "should add z set value",
      "fullTitle": "addZSetValue should add z set value",
      "timedOut": false,
      "duration": 396,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.addZSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "e7767514-3733-4ef1-a234-04a756d3421e",
      "parentUUID": "305270ed-b6c1-4de7-8202-a81b1860ed11",
      "skipped": false
    },
    {
      "title": "should update z set value",
      "fullTitle": "updateZSetValue should update z set value",
      "timedOut": false,
      "duration": 355,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.updateZSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "f62b4f3a-1ddf-45b0-b1eb-b0ab74b91e16",
      "parentUUID": "921d6032-2c4f-4a15-ba49-48dbf309fbee",
      "skipped": false
    },
    {
      "title": "should get z set rang by score",
      "fullTitle": "getZSetRangByScore should get z set rang by score",
      "timedOut": false,
      "duration": 364,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.getZSetRangByScore(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "88d520e4-657d-45cb-a1b6-481205d904c3",
      "parentUUID": "5423e328-542a-44c2-a2b0-d7e71290c69d",
      "skipped": false
    },
    {
      "title": "should get list by index",
      "fullTitle": "getListByIndex should get list by index",
      "timedOut": false,
      "duration": 356,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.getListByIndex(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "363abfe8-92ba-4871-b8c6-186db66a998f",
      "parentUUID": "7667cf7a-6b0b-449e-8019-01bbb161f8cb",
      "skipped": false
    },
    {
      "title": "should remove",
      "fullTitle": "remove should remove",
      "timedOut": false,
      "duration": 408,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.remove(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "bf94c1a7-89ae-4f02-99fa-d993b506e9dd",
      "parentUUID": "e725f1fc-dde7-459e-867f-bcc041fc6464",
      "skipped": false
    },
    {
      "title": "should remove from set ",
      "fullTitle": "removeFromSet should remove from set ",
      "timedOut": false,
      "duration": 366,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.removeFromSet(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "521dca38-6b2a-49df-ada6-dd94a2aa8ba2",
      "parentUUID": "cf2cdeed-c81a-4409-8f95-494082bc1b98",
      "skipped": false
    },
    {
      "title": "should remove from hash",
      "fullTitle": "removeFromHash should remove from hash",
      "timedOut": false,
      "duration": 345,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.removeFromHash(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "537aae02-4c3c-4ce7-adc0-046078446799",
      "parentUUID": "d75262bb-b609-448f-a18a-2526435743a9",
      "skipped": false
    },
    {
      "title": "should containt set",
      "fullTitle": "containtSet should containt set",
      "timedOut": false,
      "duration": 340,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.containtSet(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "a001ac2e-40d1-4c40-aad4-df40431b75eb",
      "parentUUID": "a7d3e7e0-c8fe-48e6-ac77-af7e054bb488",
      "skipped": false
    },
    {
      "title": "should contains hash",
      "fullTitle": "containsHash should contains hash",
      "timedOut": false,
      "duration": 397,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.containsHash(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "2a561e3c-9b06-4b49-ae16-047a98fcfc99",
      "parentUUID": "aa647c97-6d05-4f2c-bec2-7f6bbda8eaf6",
      "skipped": false
    },
    {
      "title": "should contains key",
      "fullTitle": "containsKey should contains key",
      "timedOut": false,
      "duration": 365,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.containsKey(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "da26d933-e71d-4bc7-aa49-dd3498e7e05b",
      "parentUUID": "91376a44-c09b-4a96-9801-1e47b44a2bec",
      "skipped": false
    },
    {
      "title": "should get tickets by id",
      "fullTitle": "getTicketsById should get tickets by id",
      "timedOut": false,
      "duration": 381,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TicketService.getTicketsById(player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "e5a6cbc8-91c6-40e2-9e5f-3d8ad1878652",
      "parentUUID": "d17e83c6-72eb-422d-8bf9-f9eb93f49487",
      "skipped": false
    },
    {
      "title": "should send ticket",
      "fullTitle": "sendTicket should send ticket",
      "timedOut": false,
      "duration": 427,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TicketService.sendTicket({}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "a97a9c3f-eeab-4c13-8fa9-48f4e3765dac",
      "parentUUID": "a1e47b70-4f5f-450e-9f08-388abb142db8",
      "skipped": false
    },
    {
      "title": "should send error report",
      "fullTitle": "sendErrorReport should send error report",
      "timedOut": false,
      "duration": 336,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.ErrorReportService.sendErrorReport(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "e5d22ac1-fd92-47ab-bc10-466c07f040d9",
      "parentUUID": "be8a74d5-9a28-43a7-ae95-e36d0541a477",
      "skipped": false
    }
  ],
  "allHooks": [],
  "allPending": [
    {
      "title": "should send mail",
      "sync": true,
      "_timeout": 4000,
      "_slow": 75,
      "_enableTimeouts": true,
      "timedOut": false,
      "_trace": {},
      "pending": true,
      "type": "test",
      "file": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
      "parent": {
        "title": "sendMail",
        "suites": [],
        "tests": [
          {
            "title": "should send mail",
            "fullTitle": "MailService sendMail should send mail",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "isRoot": false,
            "uuid": "f8e1b4d9-4ea6-4209-b695-81ab360b14fa",
            "parentUUID": "df2a3780-a38d-462a-8ae0-ba3cffd380ff",
            "skipped": false
          }
        ],
        "pending": [
          {
            "title": "should send mail",
            "fullTitle": "MailService sendMail should send mail",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "isRoot": false,
            "uuid": "f8e1b4d9-4ea6-4209-b695-81ab360b14fa",
            "parentUUID": "df2a3780-a38d-462a-8ae0-ba3cffd380ff",
            "skipped": false
          }
        ],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "df2a3780-a38d-462a-8ae0-ba3cffd380ff",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 1,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": true,
        "hasSkipped": false,
        "duration": 0
      },
      "ctx": {}
    },
    {
      "title": "should receive unread",
      "sync": true,
      "_timeout": 4000,
      "_slow": 75,
      "_enableTimeouts": true,
      "timedOut": false,
      "_trace": {},
      "pending": true,
      "type": "test",
      "file": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
      "parent": {
        "title": "receiveUnread",
        "suites": [],
        "tests": [
          {
            "title": "should receive unread",
            "fullTitle": "MailService receiveUnread should receive unread",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "isRoot": false,
            "uuid": "d6eac2b6-edd6-41a4-adfb-555c3203d517",
            "parentUUID": "7bce74f4-ace9-49ca-850c-de56de41023f",
            "skipped": false
          }
        ],
        "pending": [
          {
            "title": "should receive unread",
            "fullTitle": "MailService receiveUnread should receive unread",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "isRoot": false,
            "uuid": "d6eac2b6-edd6-41a4-adfb-555c3203d517",
            "parentUUID": "7bce74f4-ace9-49ca-850c-de56de41023f",
            "skipped": false
          }
        ],
        "root": false,
        "_timeout": 4000,
        "file": "\\src\\test\\test.js",
        "uuid": "7bce74f4-ace9-49ca-850c-de56de41023f",
        "fullFile": "C:\\Users\\Administrator\\Desktop\\github\\sgtcloud-html5-sdk\\src\\test\\test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 1,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": true,
        "hasSkipped": false,
        "duration": 0
      },
      "ctx": {}
    }
  ],
  "allPasses": [
    {
      "title": "should login",
      "fullTitle": "login should login",
      "timedOut": false,
      "duration": 844,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.UserService.login(<span class=\"hljs-string\">'Ak61E175'</span>, <span class=\"hljs-string\">'yoedge2014'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        user = data;<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "4f6c49f7-cd63-4273-ae7c-a4082a0725ae",
      "parentUUID": "6bb34d3a-c111-4b39-9f3d-a432fba551aa",
      "skipped": false
    },
    {
      "title": "should create player",
      "fullTitle": "create should create player",
      "timedOut": false,
      "duration": 458,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.create(player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (data) {<br>        player = data;<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        assert.strictEqual(player.name, data.name);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "47d646f4-29d7-4c49-b0c8-7cf58fc9a277",
      "parentUUID": "4266a66c-6716-4338-ae59-2e0141cf2d25",
      "skipped": false
    },
    {
      "title": "should download Save",
      "fullTitle": "downloadSave should download Save",
      "timedOut": false,
      "duration": 385,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.downloadSave(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "dc8c25f7-eff7-4f70-bc70-f056b86e291a",
      "parentUUID": "0f8afa56-1082-4ef4-b1a6-51ccb71d0834",
      "skipped": false
    },
    {
      "title": "should get by last login time",
      "fullTitle": "getByLastLoginTime should get by last login time",
      "timedOut": false,
      "duration": 379,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.getByLastLoginTime(<span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "ec28898b-41c7-4072-be60-438954fe2b6c",
      "parentUUID": "7cb31a4e-7590-40da-bc75-5c28192786bb",
      "skipped": false
    },
    {
      "title": "should get by name",
      "fullTitle": "getByName should get by name",
      "timedOut": false,
      "duration": 366,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.getByName(player.name, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "06c73d62-ed90-4801-ba31-97c3cb3c6c55",
      "parentUUID": "f9461266-7070-43dd-b945-5ee58e02317f",
      "skipped": false
    },
    {
      "title": "should get by user id",
      "fullTitle": "getByUserId should get by user id",
      "timedOut": false,
      "duration": 418,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.getByUserId(user.userid, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "2c3b3772-5727-4235-9034-0840c1700ec2",
      "parentUUID": "089b3938-3918-41e4-9556-a51b077ba93d",
      "skipped": false
    },
    {
      "title": "should get friends max number",
      "fullTitle": "getFriendsMaxNumber should get friends max number",
      "timedOut": false,
      "duration": 405,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.getFriendsMaxNumber(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "87eca147-f932-4102-8e7d-03d4ff7bfeeb",
      "parentUUID": "7e5e6b6a-581b-481e-a6ec-979b4265292d",
      "skipped": false
    },
    {
      "title": "should get one by user id",
      "fullTitle": "getOneByUserId should get one by user id",
      "timedOut": false,
      "duration": 438,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.getOneByUserId(user.userid, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "6a927715-6cf3-4f04-a3e9-5ade6b27c927",
      "parentUUID": "aff14dcc-1111-4cd7-8f18-fc1b08727f29",
      "skipped": false
    },
    {
      "title": "should get player by custom id",
      "fullTitle": "getPlayerByCustomId should get player by custom id",
      "timedOut": false,
      "duration": 375,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.getPlayerByCustomId(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "d3de8a4b-c72a-4e3c-91f9-6ceb5aeafac0",
      "parentUUID": "af16ee72-2f02-49af-9362-dccd06ebc5cc",
      "skipped": false
    },
    {
      "title": "should get player by id",
      "fullTitle": "getPlayerById should get player by id",
      "timedOut": false,
      "duration": 409,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.getPlayerById(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "8d4b3088-08d1-47d9-a666-19bc400aa3e4",
      "parentUUID": "1c7f89ba-5840-4dc2-8c2b-878ef8da955d",
      "skipped": false
    },
    {
      "title": "should search players by last login",
      "fullTitle": "searchPlayersByLastLogin should search players by last login",
      "timedOut": false,
      "duration": 377,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.searchPlayersByLastLogin(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "4c6ec903-f402-45d5-8cb4-b082d6b44c82",
      "parentUUID": "e47deed1-846f-4382-a844-0b2050b3a2ea",
      "skipped": false
    },
    {
      "title": "should search players by last login condition",
      "fullTitle": "searchPlayersByLastLoginCondition should search players by last login condition",
      "timedOut": false,
      "duration": 388,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.searchPlayersByLastLoginCondition(<span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">1</span>, [player.id], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "7af19ce8-0c11-40be-a446-3e84620e27fb",
      "parentUUID": "006eb53c-787c-4dc6-85cb-e9ec8375a7b8",
      "skipped": false
    },
    {
      "title": "should set friends max number",
      "fullTitle": "setFriendsMaxNumber should set friends max number",
      "timedOut": false,
      "duration": 376,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.setFriendsMaxNumber(player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "c32d23b9-187d-4264-a8e8-8b857833467f",
      "parentUUID": "b02dba13-2a33-4f68-80b6-bf3cdcc2b770",
      "skipped": false
    },
    {
      "title": "should update",
      "fullTitle": "update should update",
      "timedOut": false,
      "duration": 381,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.update(player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "761fd1f8-6f64-4132-86b3-42405d2057b6",
      "parentUUID": "912ccc14-2924-42bf-b5fd-b4abe20d2634",
      "skipped": false
    },
    {
      "title": "should upload Save",
      "fullTitle": "uploadSave should upload Save",
      "timedOut": false,
      "duration": 373,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.uploadSave(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "46fb0f35-f781-4c18-8dcc-a149a54af3af",
      "parentUUID": "206c717c-b963-486e-9f33-2c35b8ee3fff",
      "skipped": false
    },
    {
      "title": "should delete player",
      "fullTitle": "deletePlayerByPlayerId should delete player",
      "timedOut": false,
      "duration": 793,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerService.deletePlayerByPlayerId(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        SgtApi.PlayerService.getPlayerById(<span class=\"hljs-string\">'8a20a23072544'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>            player = data;<br>        });<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "c8e0ab20-23dc-42fb-a779-18102d1d9cbf",
      "parentUUID": "0228152f-3eda-4705-bf79-f61fb3f41601",
      "skipped": false
    },
    {
      "title": "should add player",
      "fullTitle": "addPlayer should add player",
      "timedOut": false,
      "duration": 371,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerExtraService.addPlayer(player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "cd8b7501-8ab7-4dd2-b636-1cd7ef1d1350",
      "parentUUID": "b6b66862-cdd7-4cfa-a63a-7a7452b374ad",
      "skipped": false
    },
    {
      "title": "should find add",
      "fullTitle": "findAll should find add",
      "timedOut": false,
      "duration": 381,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerExtraService.findAll(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "c0d558d5-a2bc-47d1-85f7-132f758be5a5",
      "parentUUID": "d5f92e9b-d5be-4c69-8ba2-79ca692cf132",
      "skipped": false
    },
    {
      "title": "should find all by condition",
      "fullTitle": "findAllByCondition should find all by condition",
      "timedOut": false,
      "duration": 404,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerExtraService.findAllByCondition({}, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "558e59f3-887f-4113-921f-a1535326a6fa",
      "parentUUID": "83138090-d61e-4746-8810-e3f86d73ec16",
      "skipped": false
    },
    {
      "title": "should get player by id",
      "fullTitle": "getPlayerById should get player by id",
      "timedOut": false,
      "duration": 371,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerExtraService.getPlayerById(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "9279552e-8012-4b6b-94db-99dda3254f2b",
      "parentUUID": "3506211f-ef67-419f-8714-de3e00964ae3",
      "skipped": false
    },
    {
      "title": "should get player list",
      "fullTitle": "getPlayerList should get player list",
      "timedOut": false,
      "duration": 354,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerExtraService.getPlayerList({}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "709be972-2bd6-4822-915f-0def0921f24e",
      "parentUUID": "4b21f3ac-d960-42dc-89db-f0df126cb815",
      "skipped": false
    },
    {
      "title": "should update player map",
      "fullTitle": "updatePlayerMap should update player map",
      "timedOut": false,
      "duration": 384,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerExtraService.updatePlayerMap(player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "76d2c059-08c5-4826-80c7-c1d4250e713b",
      "parentUUID": "d8f6b0c4-57fd-4bba-ad63-765d1edbf09f",
      "skipped": false
    },
    {
      "title": "should update player",
      "fullTitle": "updatePlayer should update player",
      "timedOut": false,
      "duration": 373,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerExtraService.updatePlayer(player.id, player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "6f0d16ab-82fa-4e97-a5e6-95bd3c11c95d",
      "parentUUID": "b436a7d8-0bc7-4fce-9ef2-2cb0d5b8b7f3",
      "skipped": false
    },
    {
      "title": "should delete player by id",
      "fullTitle": "deletePlayerById should delete player by id",
      "timedOut": false,
      "duration": 351,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PlayerExtraService.deletePlayerById(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "dc538676-f52e-41ab-8b41-494ac0468410",
      "parentUUID": "31f76fd1-5b3f-4f8a-84b7-d0aa21c3876b",
      "skipped": false
    },
    {
      "title": "should achieve",
      "fullTitle": "achieve should achieve",
      "timedOut": false,
      "duration": 336,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.achieve(player.id, achievementId, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "dd292845-8ea3-4bab-9b0c-60ff16d27e2a",
      "parentUUID": "336b5dc3-d7fe-4f78-a7b2-714f40c6b029",
      "skipped": false
    },
    {
      "title": "should complete",
      "fullTitle": "complete should complete",
      "timedOut": false,
      "duration": 357,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.complete(player.id, achievementId, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "469266fc-38d5-4463-bb46-2820ba9091dc",
      "parentUUID": "7975cb54-b27f-4426-86c2-8c20be56af4e",
      "skipped": false
    },
    {
      "title": "should excute achievements by type",
      "fullTitle": "excuteAchievementsByType should excute achievements by type",
      "timedOut": false,
      "duration": 374,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.excuteAchievementsByType(<span class=\"hljs-string\">'123456789'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "0c242675-90da-42f7-a5b9-16cfb7556843",
      "parentUUID": "6bdb297f-55ba-4de0-a3b8-312bf7d3bf32",
      "skipped": false
    },
    {
      "title": "should custom achievement by type",
      "fullTitle": "customAchievementsByType should custom achievement by type",
      "timedOut": false,
      "duration": 365,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.customAchievementsByType(<span class=\"hljs-string\">'123456789'</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "a480a99f-9e33-49e3-9f54-8afd1528caeb",
      "parentUUID": "aeac4c96-8dde-496c-bdf9-97448f07d4e0",
      "skipped": false
    },
    {
      "title": "should get achievement by id",
      "fullTitle": "getAchievementById should get achievement by id",
      "timedOut": false,
      "duration": 350,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.getAchievementById(achievementId, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "35708cd2-59ec-4601-8c3f-814eff6fb601",
      "parentUUID": "6237ee44-4133-4ae3-a7b4-0262a83f7ee7",
      "skipped": false
    },
    {
      "title": "should get achievements by type",
      "fullTitle": "getAchievementsByType should get achievements by type",
      "timedOut": false,
      "duration": 377,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.getAchievementsByType(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "9483cd95-e176-4e6c-829c-3aa26194c9ae",
      "parentUUID": "69fcb8ef-c9e7-4465-93af-cb914b502343",
      "skipped": false
    },
    {
      "title": "should all achievements",
      "fullTitle": "getAllAchievements should all achievements",
      "timedOut": false,
      "duration": 412,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.getAllAchievements(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "12c4ff3c-15df-481f-b7be-f89a6672456f",
      "parentUUID": "a0863346-8857-473f-b9b2-32b0418ffa72",
      "skipped": false
    },
    {
      "title": "should get available achievements",
      "fullTitle": "getAvailableAchievements should get available achievements",
      "timedOut": false,
      "duration": 435,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.getAvailableAchievements(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "23b748d8-e30d-4cbd-aac9-a8f54f4455b2",
      "parentUUID": "ec584ead-573a-4c07-980f-161f8120a261",
      "skipped": false
    },
    {
      "title": "should get complete achievements",
      "fullTitle": "getCompleteAchievements should get complete achievements",
      "timedOut": false,
      "duration": 448,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.getCompleteAchievements(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "05e61b22-954e-4a3a-9e8c-6eba62d3673f",
      "parentUUID": "89e8eb79-fcb9-41cf-888b-f859b22383b1",
      "skipped": false
    },
    {
      "title": "should get done achievements",
      "fullTitle": "getDoneAchievements should get done achievements",
      "timedOut": false,
      "duration": 437,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.getDoneAchievements(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "a8228c9b-262e-492f-a361-897463a1f695",
      "parentUUID": "e5ac127b-0d1c-48f6-9d32-0bd7783c72ac",
      "skipped": false
    },
    {
      "title": "should set achievement progress",
      "fullTitle": "setAchievementProgress should set achievement progress",
      "timedOut": false,
      "duration": 396,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.setAchievementProgress(player.id, achievementId, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "6618c3d3-e0bc-4b79-a385-fc3e66ea9519",
      "parentUUID": "080b704f-8a26-42dd-9374-b69848b0019f",
      "skipped": false
    },
    {
      "title": "should set achievements progress by type",
      "fullTitle": "setAchievementsProgressByType should set achievements progress by type",
      "timedOut": false,
      "duration": 364,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AchievementService.setAchievementsProgressByType(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "38cf5acd-3102-45df-beea-44d66a43c3e6",
      "parentUUID": "4fbd45c1-a825-4a0b-b25c-181b403a8a37",
      "skipped": false
    },
    {
      "title": "should get announce by type",
      "fullTitle": "getAnnounceByType should get announce by type",
      "timedOut": false,
      "duration": 457,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.AnnouncementService.getAnnounceByType(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "09cbbcb4-b87c-4450-801a-f1465bf0a377",
      "parentUUID": "abd19c15-567f-440a-8c10-8a0941d135d8",
      "skipped": false
    },
    {
      "title": "should get available campaigns",
      "fullTitle": "getAvailableCampaigns should get available campaigns",
      "timedOut": false,
      "duration": 350,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CampaignService.getAvailableCampaigns(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "fdd38e0d-5aca-4ec7-bf16-feff3d1c24aa",
      "parentUUID": "3265dc6b-6bac-4fb6-b820-bea6fb66c7cb",
      "skipped": false
    },
    {
      "title": "should get by time zone",
      "fullTitle": "getByTimeZone should get by time zone",
      "timedOut": false,
      "duration": 366,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CampaignService.getByTimeZone(<span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "b6f1e539-9393-45ad-a4bf-b3fa832d90da",
      "parentUUID": "5f063b75-7970-43b5-b935-0a55d3232a78",
      "skipped": false
    },
    {
      "title": "should get campaign by id",
      "fullTitle": "getCampaignById should get campaign by id",
      "timedOut": false,
      "duration": 402,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CampaignService.getCampaignById(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "d6c6d88e-7207-41ac-ac9d-da5cff8940b1",
      "parentUUID": "a42e436e-1882-47c4-a7f6-d715612f8562",
      "skipped": false
    },
    {
      "title": "should get campaign detail by campaign id",
      "fullTitle": "getCampaignDetailByCampaignId should get campaign detail by campaign id",
      "timedOut": false,
      "duration": 444,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CampaignService.getCampaignDetailByCampaignId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "ac620bc3-6486-4d01-ad96-5f07c4683b25",
      "parentUUID": "84064b1a-c052-4d07-adf4-72d162bff92c",
      "skipped": false
    },
    {
      "title": "should get campaign detail by campaign detail id",
      "fullTitle": "getCampaignDetailByCampaignDetailId should get campaign detail by campaign detail id",
      "timedOut": false,
      "duration": 418,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CampaignService.getCampaignDetailByCampaignDetailId(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "638d6123-b4e8-4cc3-9501-23c162f9f0c4",
      "parentUUID": "6182f864-760d-483a-b22e-973dda68efd0",
      "skipped": false
    },
    {
      "title": "should get campaign progress",
      "fullTitle": "getCampaignProgress should get campaign progress",
      "timedOut": false,
      "duration": 419,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CampaignService.getCampaignProgress(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "166a4274-b36f-4a36-83bc-484b7d26f117",
      "parentUUID": "b1e91850-b0b8-4017-8344-89936afd43e1",
      "skipped": false
    },
    {
      "title": "should update progress",
      "fullTitle": "updateProgress should update progress",
      "timedOut": false,
      "duration": 395,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CampaignService.updateProgress(<span class=\"hljs-string\">'2'</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "78834444-ee81-4ef3-8774-4b29ea1e4d83",
      "parentUUID": "02bc43df-444b-4c4d-b288-54a5b7757617",
      "skipped": false
    },
    {
      "title": "should checkin",
      "fullTitle": "checkin should checkin",
      "timedOut": false,
      "duration": 411,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.checkin(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "da8f7284-dab1-4b39-8fe3-0a10fa2902b0",
      "parentUUID": "385ac6e0-c4c2-41f6-8855-84a166e880c2",
      "skipped": false
    },
    {
      "title": "should accumulate count",
      "fullTitle": "accumulateCount should accumulate count",
      "timedOut": false,
      "duration": 372,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.accumulateCount(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "e8574531-d6a5-423a-9c96-4aed48c9c541",
      "parentUUID": "16b8d5d7-7802-4a24-90eb-0d76f46a9651",
      "skipped": false
    },
    {
      "title": "should continuous count",
      "fullTitle": "continuousCount should continuous count",
      "timedOut": false,
      "duration": 399,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.continuousCount(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "5963ee61-0c41-4c3a-b7a5-795600270c4e",
      "parentUUID": "2f450c2e-c1fe-4816-af34-3bbbfc66ab9b",
      "skipped": false
    },
    {
      "title": "should get checkin board by checkin board id",
      "fullTitle": "getCheckinBoardByCheckinBoardId should get checkin board by checkin board id",
      "timedOut": false,
      "duration": 377,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.getCheckinBoardByCheckinBoardId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        asser.ok(<span class=\"hljs-literal\">false</span>);<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "9f5cf2e8-3783-4459-8ef5-ee6782fbe0d4",
      "parentUUID": "162bb3ea-a992-48f4-9f4f-6185f26a0a19",
      "skipped": false
    },
    {
      "title": "should get last checkin time",
      "fullTitle": "getLastCheckinTime should get last checkin time",
      "timedOut": false,
      "duration": 332,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.getLastCheckinTime(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "fad2d7d4-6ab6-4278-bde8-8a5e2b12927c",
      "parentUUID": "ae669bbd-a741-4608-ab17-7e18ecef62fc",
      "skipped": false
    },
    {
      "title": "should get reward by checkin board id",
      "fullTitle": "getRewardByCheckinBoardId should get reward by checkin board id",
      "timedOut": false,
      "duration": 332,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.getRewardByCheckinBoardId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "c926be8c-b102-498f-bac0-d6b28e938b83",
      "parentUUID": "c62c3758-3703-4c1f-915a-4d1e89d1a51b",
      "skipped": false
    },
    {
      "title": "should set checkin times",
      "fullTitle": "setCheckinTimes should set checkin times",
      "timedOut": false,
      "duration": 374,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.setCheckinTimes(player.id, <span class=\"hljs-string\">'begintoday'</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "d1d1edb8-f5f1-4668-9883-7489151c76e4",
      "parentUUID": "150e0bb3-a5c3-4c2c-9e16-ea382b95df7c",
      "skipped": false
    },
    {
      "title": "should validate checkin",
      "fullTitle": "validateCheckin should validate checkin",
      "timedOut": false,
      "duration": 383,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.validateCheckin(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "fd9e8494-9c95-4227-ab76-9815883033e2",
      "parentUUID": "9d72c1ed-13c1-4b09-b221-638fac4421b1",
      "skipped": false
    },
    {
      "title": "should get available chekcin boards",
      "fullTitle": "getAvailableCheckinBoards should get available chekcin boards",
      "timedOut": false,
      "duration": 408,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.getAvailableCheckinBoards(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "b9aada29-4131-47d5-b723-c51e18cc7f51",
      "parentUUID": "e9b7246f-02e5-4fc4-9075-45e03fb9b071",
      "skipped": false
    },
    {
      "title": "should get available chekcin boards by tag",
      "fullTitle": "getAvailableCheckinBoardsByTag should get available chekcin boards by tag",
      "timedOut": false,
      "duration": 368,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.getAvailableCheckinBoardsByTag(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "214a09c7-aa6a-4912-8b89-20082ed6c842",
      "parentUUID": "821c9c73-3107-4f55-ae93-e031ec41d7c5",
      "skipped": false
    },
    {
      "title": "should get available chekcin boards by type",
      "fullTitle": "getAvailableCheckinBoardsByType should get available chekcin boards by type",
      "timedOut": false,
      "duration": 354,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.CheckinBoardService.getAvailableCheckinBoardsByType(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "74062c64-665e-4725-ba1b-118a4a1a8f03",
      "parentUUID": "f25ce327-6e7b-4760-8cb4-bb3c0c13f154",
      "skipped": false
    },
    {
      "title": "should execute task",
      "fullTitle": "executeTask should execute task",
      "timedOut": false,
      "duration": 386,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DailyTaskService.executeTask(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "da776ec7-3ed7-4ec6-896c-81591cd9f8f1",
      "parentUUID": "b862ea67-4776-4cc8-8faa-fef99fc16a16",
      "skipped": false
    },
    {
      "title": "should execute task by type",
      "fullTitle": "executeTasksByType should execute task by type",
      "timedOut": false,
      "duration": 361,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DailyTaskService.executeTasksByType(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "6d092fe1-2ea8-43de-afe0-bd4725c27fbe",
      "parentUUID": "454448a2-e219-457a-b5e4-8bc656785473",
      "skipped": false
    },
    {
      "title": "should add execute tasks by type",
      "fullTitle": "addExecuteTasksByType should add execute tasks by type",
      "timedOut": false,
      "duration": 365,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DailyTaskService.addExecuteTasksByType(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "a3ef4ea8-5f67-4cd9-a55d-b5597d3eba45",
      "parentUUID": "f3cf441a-8b54-4827-9152-ea65ea8263d1",
      "skipped": false
    },
    {
      "title": "should get daily tasks",
      "fullTitle": "getDailyTasks should get daily tasks",
      "timedOut": false,
      "duration": 394,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DailyTaskService.getDailyTasks(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "d0259aea-90a5-4afd-a4fd-36b9688be79e",
      "parentUUID": "33392cc6-ee7c-4b36-a23d-dfdc2bc8e0f0",
      "skipped": false
    },
    {
      "title": "should get daily tasks by type",
      "fullTitle": "getDailyTasksByType should get daily tasks by type",
      "timedOut": false,
      "duration": 404,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DailyTaskService.getDailyTasksByType(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "983c36a4-fca8-4b7e-8a31-27f8ed50ac6d",
      "parentUUID": "574805ab-62cc-4c15-801d-15e94b58d4ea",
      "skipped": false
    },
    {
      "title": "should get reward",
      "fullTitle": "getReward should get reward",
      "timedOut": false,
      "duration": 407,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DailyTaskService.getReward(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data === <span class=\"hljs-string\">'您已经领取了任务奖励，不要这么贪得无厌哦！'</span>) {<br>            assert(<span class=\"hljs-literal\">true</span>);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>                assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>            } <span class=\"hljs-keyword\">else</span> {<br>                assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>            }<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "279d2d6c-a592-42e7-934e-9e23c42295c1",
      "parentUUID": "b3aadd87-4bd9-44f2-8db0-1872e8ff08d9",
      "skipped": false
    },
    {
      "title": "should set task progress",
      "fullTitle": "setTaskProgress should set task progress",
      "timedOut": false,
      "duration": 354,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DailyTaskService.setTaskProgress(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "93aed2f5-e75d-4d41-b9d6-579559226607",
      "parentUUID": "135181a4-7246-4a05-be32-ae1a6bbd690c",
      "skipped": false
    },
    {
      "title": "should set task progress by type",
      "fullTitle": "setTasksProgressByType should set task progress by type",
      "timedOut": false,
      "duration": 366,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DailyTaskService.setTasksProgressByType(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "599fea3a-e17e-454e-acf4-3b929e2df80c",
      "parentUUID": "f9b0a651-d31f-4481-a021-ae3954c25480",
      "skipped": false
    },
    {
      "title": "should add action count",
      "fullTitle": "addActionCount should add action count",
      "timedOut": false,
      "duration": 362,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.addActionCount(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "8b1fcb8a-bf39-4b28-a231-692f85675720",
      "parentUUID": "ce1e7558-84e6-4e1f-84dd-7a142c9d1631",
      "skipped": false
    },
    {
      "title": "should add action count time",
      "fullTitle": "addActionCountTime should add action count time",
      "timedOut": false,
      "duration": 392,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.addActionCountTime(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "44616dbc-495f-4bcd-8f5b-30bca74d3935",
      "parentUUID": "b09dbfdf-e7f7-4792-b2f6-50b4d9da9582",
      "skipped": false
    },
    {
      "title": "should complete",
      "fullTitle": "complete should complete",
      "timedOut": false,
      "duration": 395,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.complete(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "49fd44a8-be1e-4cf3-8f0a-d21e3ff053ed",
      "parentUUID": "24d17813-2a48-4c4d-b4af-e3a10945f5b6",
      "skipped": false
    },
    {
      "title": "should get achievement by id",
      "fullTitle": "getAchievementById should get achievement by id",
      "timedOut": false,
      "duration": 363,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getAchievementById(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "efff24b4-8cf0-4280-8bf9-eb90f42b66aa",
      "parentUUID": "93392d22-e8be-4009-a2ed-4785220323b1",
      "skipped": false
    },
    {
      "title": "should get achievements",
      "fullTitle": "getAchievements should get achievements",
      "timedOut": false,
      "duration": 389,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getAchievements(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "fdd3b243-905b-4df1-a505-953654546d74",
      "parentUUID": "ad9686e4-058d-4cd9-8cfc-a63578703bad",
      "skipped": false
    },
    {
      "title": "should get achievements by type",
      "fullTitle": "getAchievementsByType should get achievements by type",
      "timedOut": false,
      "duration": 372,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getAchievementsByType(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "a3d9dae3-6c23-43a3-91c2-9987f43cc746",
      "parentUUID": "a0609a1b-69e8-4027-9299-189cfc9f3fad",
      "skipped": false
    },
    {
      "title": "should get action count",
      "fullTitle": "getActionCount should get action count",
      "timedOut": false,
      "duration": 376,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getActionCount(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "8dadd0f8-37a1-48dc-b571-4339eeb38c29",
      "parentUUID": "5eb428a6-dc09-4e9a-bb30-da3a834c5010",
      "skipped": false
    },
    {
      "title": "should get all achievements",
      "fullTitle": "getAllAchievements should get all achievements",
      "timedOut": false,
      "duration": 358,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getAllAchievements(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "9eece931-4d52-4c33-8f97-e37b9493b85b",
      "parentUUID": "f3dff5a2-af9f-4c24-9b6d-fd28274ac4d4",
      "skipped": false
    },
    {
      "title": "should get all daily tasks",
      "fullTitle": "getAllDailyTasks should get all daily tasks",
      "timedOut": false,
      "duration": 367,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getAllDailyTasks(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "ea1c25db-3acf-4161-99af-78fe26564842",
      "parentUUID": "c0403cde-11f5-41ea-bf38-71765526f30a",
      "skipped": false
    },
    {
      "title": "should get all tasks",
      "fullTitle": "getAllTasks should get all tasks",
      "timedOut": false,
      "duration": 406,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getAllTasks(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "5c18f270-55ee-48c6-9a9e-229b9b33242b",
      "parentUUID": "0ae09f12-5e14-407f-b0b8-1fceede5652e",
      "skipped": false
    },
    {
      "title": "should get complete achievements",
      "fullTitle": "getCompleteAchievements should get complete achievements",
      "timedOut": false,
      "duration": 373,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getCompleteAchievements(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "0bb4268c-9f25-42a8-8743-0a18d8d1923e",
      "parentUUID": "0cb9bd02-5103-4e21-9c54-c508db75beab",
      "skipped": false
    },
    {
      "title": "should get complete daily tasks",
      "fullTitle": "getCompleteDailyTasks should get complete daily tasks",
      "timedOut": false,
      "duration": 366,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getCompleteDailyTasks(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "d3b759d5-ea8b-4413-ac6a-8a4e79cfa680",
      "parentUUID": "e670f62c-d5c2-46c1-8cf9-52a3d3536cce",
      "skipped": false
    },
    {
      "title": "should get complete tasks",
      "fullTitle": "getCompleteTasks should get complete tasks",
      "timedOut": false,
      "duration": 343,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getCompleteTasks(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "cd64efc0-1e1d-4664-ab0a-883a106cf971",
      "parentUUID": "50b40968-9656-4f45-bd49-91b5dd8a82bd",
      "skipped": false
    },
    {
      "title": "should get daily task by id",
      "fullTitle": "getDailyTaskById should get daily task by id",
      "timedOut": false,
      "duration": 360,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getDailyTaskById(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "4c58181f-2134-4b0b-9823-08ce801ca5ba",
      "parentUUID": "e0d825ef-885d-4a1a-9f57-77307a606264",
      "skipped": false
    },
    {
      "title": "should get daily tasks",
      "fullTitle": "getDailyTasks should get daily tasks",
      "timedOut": false,
      "duration": 350,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getDailyTasks(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "70c49489-03a2-41c8-8a92-67637ee18a17",
      "parentUUID": "256ba909-6a42-499b-ab19-667ddaf67ff0",
      "skipped": false
    },
    {
      "title": "should get daily tasks by type",
      "fullTitle": "getDailyTasksByType should get daily tasks by type",
      "timedOut": false,
      "duration": 350,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getDailyTasksByType(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "0fafa5f4-5abc-4f43-aa43-2030faca4980",
      "parentUUID": "84e66fec-db44-48f8-9cef-7b3b13483a75",
      "skipped": false
    },
    {
      "title": "should get reward",
      "fullTitle": "getReward should get reward",
      "timedOut": false,
      "duration": 400,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getReward(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "b5069b22-bd02-4563-8e73-eb93892c75ec",
      "parentUUID": "dfb2e7b7-6ff3-4d38-adad-ae7107fb417c",
      "skipped": false
    },
    {
      "title": "should get daily tasks",
      "fullTitle": "getDailyTasks should get daily tasks",
      "timedOut": false,
      "duration": 351,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TaskService.getDailyTasks(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "3c95f7c0-bb0e-4fb5-a28e-48e901c3c81e",
      "parentUUID": "ab5b6550-b245-4036-b8e9-9ee5c883d0ec",
      "skipped": false
    },
    {
      "title": "should accept invite",
      "fullTitle": "acceptInvite should accept invite",
      "timedOut": false,
      "duration": 386,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.acceptInvite(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "02dc1e2a-d2ca-4c55-bdcc-1ee16e875f06",
      "parentUUID": "1202a719-8178-41e2-94fe-3c372dbafe61",
      "skipped": false
    },
    {
      "title": "should accept invite by mail",
      "fullTitle": "acceptInviteByMail should accept invite by mail",
      "timedOut": false,
      "duration": 366,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.acceptInviteByMail(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, mail, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "54dfc1f4-d925-4ef2-bc13-191eb6078207",
      "parentUUID": "a6b58c5c-ff2f-4343-8f86-20b93a87455e",
      "skipped": false
    },
    {
      "title": "should get denied",
      "fullTitle": "getDenied should get denied",
      "timedOut": false,
      "duration": 381,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.getDenied(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "ec9424ce-25d9-486d-ae34-26795cc17690",
      "parentUUID": "f4368a54-baed-413c-8940-105f0bf49b49",
      "skipped": false
    },
    {
      "title": "should get friends count",
      "fullTitle": "getFrindsCount should get friends count",
      "timedOut": false,
      "duration": 358,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.getFrindsCount(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "2b2c0878-b6ba-4eeb-900d-c9c263f911e9",
      "parentUUID": "656c817c-54b8-4f06-9917-9374bc25fc4a",
      "skipped": false
    },
    {
      "title": "should get invite",
      "fullTitle": "getInvite should get invite",
      "timedOut": false,
      "duration": 392,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.getInvite(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "4101e400-57a0-47fa-a4b4-20c076978d92",
      "parentUUID": "cd22297a-839b-49c7-9c8c-598475a9046b",
      "skipped": false
    },
    {
      "title": "should get my friends",
      "fullTitle": "getMyFriends should get my friends",
      "timedOut": false,
      "duration": 364,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.getMyFriends(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "28e571bb-d8d2-4f98-9c7b-63dd2c04985c",
      "parentUUID": "58bf0aa8-8c40-44f5-9ca5-92c225b731ca",
      "skipped": false
    },
    {
      "title": "should get not confirm",
      "fullTitle": "getNotConfirm should get not confirm",
      "timedOut": false,
      "duration": 347,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.getNotConfirm(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "ebbb3896-bd45-49f5-8654-31204d329b7e",
      "parentUUID": "8e4e6aef-958d-4213-ad0e-1afb938a7c06",
      "skipped": false
    },
    {
      "title": "should invite",
      "fullTitle": "invite should invite",
      "timedOut": false,
      "duration": 363,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.invite(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'456'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "432175d1-db70-4a21-968c-cc8e2f49c32c",
      "parentUUID": "c4b123f3-f45c-4820-9bc4-f4a1c2edd857",
      "skipped": false
    },
    {
      "title": "should invite by mails",
      "fullTitle": "inviteByMails should invite by mails",
      "timedOut": false,
      "duration": 400,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.inviteByMails(<span class=\"hljs-string\">'123'</span>, [<span class=\"hljs-string\">'123'</span>], [mail], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "95c313b5-6531-4a0c-8180-3dea067ba457",
      "parentUUID": "c2991be9-d573-44be-99a9-b99b98acecb3",
      "skipped": false
    },
    {
      "title": "should is my friend",
      "fullTitle": "isMyfriend should is my friend",
      "timedOut": false,
      "duration": 369,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.isMyfriend(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "171ee9c0-d58c-4ab2-96a4-fea5b7162cf8",
      "parentUUID": "ff006d78-7908-40a7-b18a-c117e042ed28",
      "skipped": false
    },
    {
      "title": "should refuse",
      "fullTitle": "refuse should refuse",
      "timedOut": false,
      "duration": 381,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.refuse(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "c39d92d8-cb71-423f-8135-71dadaa7e3d3",
      "parentUUID": "bbdc2796-59c0-4f45-8471-a15625073252",
      "skipped": false
    },
    {
      "title": "should unfriend",
      "fullTitle": "unfriend should unfriend",
      "timedOut": false,
      "duration": 394,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipService.unfriend(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "7496a259-4354-4709-9a94-eb8372a8b3f3",
      "parentUUID": "95d56b93-bece-4db3-a924-84a8b17310b2",
      "skipped": false
    },
    {
      "title": "should get all my friends and ext",
      "fullTitle": "getAllMyFriendsAndExt should get all my friends and ext",
      "timedOut": false,
      "duration": 369,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipExtraService.getAllMyFriendsAndExt(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "718a34cd-5eb7-43a7-a663-fe3686a63143",
      "parentUUID": "d634019d-1799-48c6-bdd8-617760575508",
      "skipped": false
    },
    {
      "title": "should get my friends and ext",
      "fullTitle": "getMyFriendAndExt should get my friends and ext",
      "timedOut": false,
      "duration": 415,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipExtraService.getMyFriendAndExt(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "2ce52f54-fb1c-4e18-ba94-ed45237ca0e0",
      "parentUUID": "9e3e5293-7aff-46b9-9c8c-1b84d9e1a458",
      "skipped": false
    },
    {
      "title": "should update all my friend ext",
      "fullTitle": "updateAllMyFriendExt should update all my friend ext",
      "timedOut": false,
      "duration": 384,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipExtraService.updateAllMyFriendExt(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "f8edfc57-be60-44f4-ab14-cc7036acce82",
      "parentUUID": "e143d9da-d97d-4b80-8bd4-8f77c089b99c",
      "skipped": false
    },
    {
      "title": "should update my friend all ext",
      "fullTitle": "updateMyFriendAllExt should update my friend all ext",
      "timedOut": false,
      "duration": 349,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipExtraService.updateMyFriendAllExt(player.id, <span class=\"hljs-string\">''</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "860d8ca7-1b4d-446a-b4d7-90a152e413e9",
      "parentUUID": "f22c4bfc-9407-4601-8f75-ddf76d7765ef",
      "skipped": false
    },
    {
      "title": "should update my friend ext",
      "fullTitle": "updateMyFriendExt should update my friend ext",
      "timedOut": false,
      "duration": 366,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FriendshipExtraService.updateMyFriendExt(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "4f3f9c84-33e8-47e3-a110-3d6905e5b424",
      "parentUUID": "11acff54-c826-4782-98c9-a449b81058a0",
      "skipped": false
    },
    {
      "title": "should add player into black list",
      "fullTitle": "addPlayerIntoBlacklist should add player into black list",
      "timedOut": false,
      "duration": 428,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.BlacklistService.addPlayerIntoBlacklist(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "6ec84c1a-4e96-411e-8ef7-2a048789824e",
      "parentUUID": "c5aab277-1960-4d42-96da-e412bb3d3a88",
      "skipped": false
    },
    {
      "title": "should is in black list",
      "fullTitle": "isInBlacklist should is in black list",
      "timedOut": false,
      "duration": 345,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.BlacklistService.isInBlacklist(<span class=\"hljs-string\">'123'</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "bce30149-b075-47ba-a7c5-17ede2430f5d",
      "parentUUID": "90607a16-8aed-4b29-9244-097b6191475f",
      "skipped": false
    },
    {
      "title": "should auto balance draw",
      "fullTitle": "autoBalanceDraw should auto balance draw",
      "timedOut": false,
      "duration": 366,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GachaBoxService.autoBalanceDraw(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "3167ac57-6409-42cd-ba54-faf11631f58d",
      "parentUUID": "3d1fd675-8b69-4439-a28b-c3ecfba0861d",
      "skipped": false
    },
    {
      "title": "should auto balance draw quality",
      "fullTitle": "autoBalanceDrawQuality should auto balance draw quality",
      "timedOut": false,
      "duration": 392,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GachaBoxService.autoBalanceDrawQuality(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "89b1d83f-e1fc-4ea5-aeac-f40ac4277a9a",
      "parentUUID": "56d989c9-8ba7-4f1e-9c62-040c7f901c4a",
      "skipped": false
    },
    {
      "title": "should auto balance max draw",
      "fullTitle": "autoBalanceDrawMaxQuality should auto balance max draw",
      "timedOut": false,
      "duration": 393,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GachaBoxService.autoBalanceDrawMaxQuality(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "a9f06fbf-bfdb-41c6-9819-b8c3ce46969f",
      "parentUUID": "877d21d5-d3a4-47b2-9a91-8441e49ada6f",
      "skipped": false
    },
    {
      "title": "should draw",
      "fullTitle": "draw should draw",
      "timedOut": false,
      "duration": 409,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GachaBoxService.draw(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "a6f84ccc-0684-4fbc-b912-a6575b083441",
      "parentUUID": "923909de-60c3-46ee-9942-c92e37e91c52",
      "skipped": false
    },
    {
      "title": "should get available gacha box",
      "fullTitle": "getAvailableGachaBox should get available gacha box",
      "timedOut": false,
      "duration": 450,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GachaBoxService.getAvailableGachaBox(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "e3a77554-d190-465a-ad54-709e6642f1cc",
      "parentUUID": "2090d54b-dc4c-4def-8997-b2c38c625a04",
      "skipped": false
    },
    {
      "title": "should get gacha box by name",
      "fullTitle": "getGachaBoxByName should get gacha box by name",
      "timedOut": false,
      "duration": 383,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GachaBoxService.getGachaBoxByName(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "76cb2421-daf8-4a4d-af24-ca18a8d337f8",
      "parentUUID": "51cd6cf0-d3fe-4511-9ca8-eb5b7b5dd9c5",
      "skipped": false
    },
    {
      "title": "should get lotteries by gacha box id",
      "fullTitle": "getLotteriesByGachaBoxId should get lotteries by gacha box id",
      "timedOut": false,
      "duration": 360,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GachaBoxService.getLotteriesByGachaBoxId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "516473b8-9e2c-43f7-a565-a893987f55a6",
      "parentUUID": "eddf2a65-c08f-4f02-9174-07e6107c9bc1",
      "skipped": false
    },
    {
      "title": "should limit draw",
      "fullTitle": "limitDraw should limit draw",
      "timedOut": false,
      "duration": 352,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GachaBoxService.limitDraw(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "8a0e25df-94de-482d-a792-94cb4dae27fe",
      "parentUUID": "c2763f57-f401-49f9-9250-fe967cf8e999",
      "skipped": false
    },
    {
      "title": "should add up leader board score",
      "fullTitle": "addUpLeaderBoardScore should add up leader board score",
      "timedOut": false,
      "duration": 383,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.LeaderBoardService.addUpLeaderBoardScore(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "7320c316-7e61-465f-bcee-77ea5afc7663",
      "parentUUID": "a3e2c5f2-86b8-4963-8e8e-28e295da8038",
      "skipped": false
    },
    {
      "title": "should get leader board by leader id",
      "fullTitle": "getLeaderBoardByLeaderId should get leader board by leader id",
      "timedOut": false,
      "duration": 358,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.LeaderBoardService.getLeaderBoardByLeaderId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "b9a73541-3b69-439e-90b7-fa96ac9fed66",
      "parentUUID": "36cbee67-8ebf-4df7-9fe3-6d7285520b3d",
      "skipped": false
    },
    {
      "title": "should get leader board score by example",
      "fullTitle": "getLeaderBoardScoreByExample should get leader board score by example",
      "timedOut": false,
      "duration": 351,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.LeaderBoardService.getLeaderBoardScoreByExample(<span class=\"hljs-string\">''</span>, player, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "3ca55f31-aedf-434d-93fb-9fc4785d8a0b",
      "parentUUID": "3643939d-bb2a-4ce9-9ddc-a1667fe46a5f",
      "skipped": false
    },
    {
      "title": "should get leader board score by leader id and player id",
      "fullTitle": "getLeaderBoardScoreByLeaderIdAndPlayerId should get leader board score by leader id and player id",
      "timedOut": false,
      "duration": 372,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.LeaderBoardService.getLeaderBoardScoreByLeaderIdAndPlayerId(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "226464e7-ac66-44c8-8815-2017335ad0e6",
      "parentUUID": "9cfbf728-c37f-4056-aaa4-45360c8c7247",
      "skipped": false
    },
    {
      "title": "should get leader board scores by leader id and player id",
      "fullTitle": "getLeaderBoardScoresByLeaderIdAndPlayerId should get leader board scores by leader id and player id",
      "timedOut": false,
      "duration": 416,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.LeaderBoardService.getLeaderBoardScoresByLeaderIdAndPlayerId(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "c8babc13-e94e-4822-aed6-5e702134d205",
      "parentUUID": "e67b6466-f471-4e9a-b842-8f5b00380d9c",
      "skipped": false
    },
    {
      "title": "should get top leader board score by leader id",
      "fullTitle": "getTopLeaderBoardScoreByLeaderId should get top leader board score by leader id",
      "timedOut": false,
      "duration": 384,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.LeaderBoardService.getTopLeaderBoardScoreByLeaderId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "c76a260b-07d9-4e2f-9a30-55af17d5b5a1",
      "parentUUID": "0683721b-6f45-4e12-b034-91d41ba96801",
      "skipped": false
    },
    {
      "title": "should submit leader board score",
      "fullTitle": "submitLeaderBoardScore should submit leader board score",
      "timedOut": false,
      "duration": 361,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.LeaderBoardService.submitLeaderBoardScore(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "9171022a-ad9c-49c5-85d3-cc2d6eb5f3ab",
      "parentUUID": "6a2431d3-b1a4-4f68-a331-ec43423442d4",
      "skipped": false
    },
    {
      "title": "should receive",
      "fullTitle": "receive should receive",
      "timedOut": false,
      "duration": 372,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.MailService.receive(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "27c10361-578f-48b0-a427-008c20d39558",
      "parentUUID": "764dc61b-b92b-4157-932a-5250f53e6907",
      "skipped": false
    },
    {
      "title": "should read mail",
      "fullTitle": "readMail should read mail",
      "timedOut": false,
      "duration": 365,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.MailService.readMail(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "7cae8af4-f4c7-4ae7-81a5-524ab4e2f89a",
      "parentUUID": "7bfded94-4029-44d2-bd7a-f0e74a8a0183",
      "skipped": false
    },
    {
      "title": "should read and pick attachment",
      "fullTitle": "readAndPickAttachment should read and pick attachment",
      "timedOut": false,
      "duration": 388,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.MailService.readAndPickAttachment(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "3099027b-9254-4e91-8c26-fb19e1a4e1f3",
      "parentUUID": "07fc684d-678c-47f4-aa14-0ddfae4ee4a8",
      "skipped": false
    },
    {
      "title": "should delete mail",
      "fullTitle": "deleteMail should delete mail",
      "timedOut": false,
      "duration": 407,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.MailService.deleteMail([<span class=\"hljs-string\">'123'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "e345d357-1db7-42b1-9192-858584fa0dee",
      "parentUUID": "1b0b4425-e649-49a8-9ab5-bee8d945eb23",
      "skipped": false
    },
    {
      "title": "should get readed and unreaded mails",
      "fullTitle": "getReadedAndUnreadedMails should get readed and unreaded mails",
      "timedOut": false,
      "duration": 410,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.MailService.getReadedAndUnreadedMails(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "ad5251fc-46c6-4bd2-99e1-a42359ed5362",
      "parentUUID": "91fcb30f-5a60-41ec-a3b3-9f50f579675f",
      "skipped": false
    },
    {
      "title": "should pich attachment",
      "fullTitle": "pickAttachment should pich attachment",
      "timedOut": false,
      "duration": 429,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.MailService.pickAttachment(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "9fe878fb-1a5f-4cf8-a324-36c0c106999f",
      "parentUUID": "7e7d9d2e-d678-4137-9036-e1603aa50036",
      "skipped": false
    },
    {
      "title": "should get latest notification",
      "fullTitle": "getLatestNotification should get latest notification",
      "timedOut": false,
      "duration": 462,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.NotificationService.getLatestNotification(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "f8699f9e-87fa-4ace-a5ed-8fa47fa12e08",
      "parentUUID": "4abeacd6-c60e-426f-8eda-ebb0938ca765",
      "skipped": false
    },
    {
      "title": "should get latest notification by time",
      "fullTitle": "getLatestNotificationByTime should get latest notification by time",
      "timedOut": false,
      "duration": 411,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.NotificationService.getLatestNotificationByTime(player.id, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "dd320a45-bf87-4c68-883a-2647db991713",
      "parentUUID": "d0601f3a-4804-4c9f-a578-654f971965e7",
      "skipped": false
    },
    {
      "title": "should get supported stores",
      "fullTitle": "getSupportedStores should get supported stores",
      "timedOut": false,
      "duration": 382,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PurchaseService.getSupportedStores(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "8f6b7591-71e4-4683-857f-984fea697fe7",
      "parentUUID": "b4001da8-b898-4a38-9d23-accecb5b71e5",
      "skipped": false
    },
    {
      "title": "should get available charge points",
      "fullTitle": "getAvailableChargePoints should get available charge points",
      "timedOut": false,
      "duration": 402,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PurchaseService.getAvailableChargePoints(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "a1587748-c825-42ec-8731-2b422f21a171",
      "parentUUID": "417cbd5c-5311-41ad-a311-11bd21c12813",
      "skipped": false
    },
    {
      "title": "should get payment result",
      "fullTitle": "getPaymentResult should get payment result",
      "timedOut": false,
      "duration": 385,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PurchaseService.getPaymentResult(player.id, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "ef2762eb-bfe3-4e0f-9def-268f1d328eea",
      "parentUUID": "4add43c7-78c2-41f3-8cc0-1f859ff254f0",
      "skipped": false
    },
    {
      "title": "should get total charge cost",
      "fullTitle": "getTotalChargeCost should get total charge cost",
      "timedOut": false,
      "duration": 386,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PurchaseService.getTotalChargeCost(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "346565c4-99de-4d41-9795-de57c0e28787",
      "parentUUID": "e5910f72-57c2-4f38-bbf7-f356935318de",
      "skipped": false
    },
    {
      "title": "should is first charge",
      "fullTitle": "isFirstCharge should is first charge",
      "timedOut": false,
      "duration": 366,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PurchaseService.isFirstCharge(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "46552e3e-9fd9-4d71-91e2-b132fbdd284d",
      "parentUUID": "c8dedd39-e157-4d4d-b518-018c103ed583",
      "skipped": false
    },
    {
      "title": "should get charge times",
      "fullTitle": "getChargeTimes should get charge times",
      "timedOut": false,
      "duration": 392,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PurchaseService.getChargeTimes(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "9dbb2225-9dc0-4655-baba-2b70716e170c",
      "parentUUID": "7a9a34b2-972b-4ffe-9328-18aa623842ec",
      "skipped": false
    },
    {
      "title": "should get default store",
      "fullTitle": "getDefaultStore should get default store",
      "timedOut": false,
      "duration": 376,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StoreService.getDefaultStore(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "6645be9a-2315-4774-8182-b4f6d5228559",
      "parentUUID": "59a6dc30-d067-4130-a6f2-7f5f25ecf7cf",
      "skipped": false
    },
    {
      "title": "should ge store",
      "fullTitle": "getStore should ge store",
      "timedOut": false,
      "duration": 374,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StoreService.getStore(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "fb620519-99dc-4736-96c2-64faf6ab09fe",
      "parentUUID": "c04838c6-d5de-4a82-a65e-546e8995f083",
      "skipped": false
    },
    {
      "title": "should purchase",
      "fullTitle": "purchase should purchase",
      "timedOut": false,
      "duration": 400,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StoreService.purchase(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "aa55c0e2-bb23-4334-8608-ecd29ebed137",
      "parentUUID": "9d031f9b-903b-435e-9a70-f76143bcffbb",
      "skipped": false
    },
    {
      "title": "should count store orders by player id",
      "fullTitle": "countStoreOrdersByPlayerId should count store orders by player id",
      "timedOut": false,
      "duration": 353,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StoreService.countStoreOrdersByPlayerId(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "5413d55b-fb98-41c2-9af9-f15bb5702b9d",
      "parentUUID": "9755867c-cd35-4739-9d91-c45f7e0d1dce",
      "skipped": false
    },
    {
      "title": "should count item orders by player id",
      "fullTitle": "countItemOrdersByPlayerId should count item orders by player id",
      "timedOut": false,
      "duration": 367,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StoreService.countItemOrdersByPlayerId(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "2e97c563-7221-43e7-8a2d-fcd0f82b13f4",
      "parentUUID": "74a99d77-7c18-4f55-b32a-5ac7fb26125c",
      "skipped": false
    },
    {
      "title": "should get oder by id",
      "fullTitle": "getOrderById should get oder by id",
      "timedOut": false,
      "duration": 350,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StoreService.getOrderById(<span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "20a2a84b-ed97-46b5-a9fb-c483049e1b68",
      "parentUUID": "c311a0cf-c947-4b32-b68b-7927e4bbf319",
      "skipped": false
    },
    {
      "title": "should get last purchase time mills",
      "fullTitle": "getLastPurchaseTimeMillis should get last purchase time mills",
      "timedOut": false,
      "duration": 392,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StoreService.getLastPurchaseTimeMillis(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "9a9dda41-4d9d-4004-bc2d-7ecc98c05353",
      "parentUUID": "511dcd62-4e25-4ea1-883d-b2bed3d1dcc8",
      "skipped": false
    },
    {
      "title": "should update order status",
      "fullTitle": "updateOrderStatus should update order status",
      "timedOut": false,
      "duration": 358,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StoreService.updateOrderStatus(<span class=\"hljs-string\">''</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "0098ecb7-a4c4-44a6-823d-b1a2bf94d07b",
      "parentUUID": "dc15d5ad-bbd1-4b19-8742-0d902e7b8b7a",
      "skipped": false
    },
    {
      "title": "should get all charge points",
      "fullTitle": "getAllChargePoints should get all charge points",
      "timedOut": false,
      "duration": 361,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.ChargePointService.getAllChargePoints(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "c1942240-11e7-4cfc-a2a9-8cab0a50ab43",
      "parentUUID": "8f168934-0d39-4821-8fc3-24105591ccd0",
      "skipped": false
    },
    {
      "title": "should get available charge points",
      "fullTitle": "getAvailableChargePoints should get available charge points",
      "timedOut": false,
      "duration": 320,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.ChargePointService.getAvailableChargePoints(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "efd3ac04-2d8a-461c-8274-dde6c402cea8",
      "parentUUID": "44ff5716-eb6d-4e76-a2d5-09fb33e35c74",
      "skipped": false
    },
    {
      "title": "should get by boss id str",
      "fullTitle": "getByBossIdstr should get by boss id str",
      "timedOut": false,
      "duration": 382,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.BossService.getByBossIdstr([<span class=\"hljs-string\">''</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "d5a3071c-ec03-4323-b7b8-20b5c580809d",
      "parentUUID": "81a273dd-ac59-41a1-b7e3-1ab62454a387",
      "skipped": false
    },
    {
      "title": "should get by boss id int",
      "fullTitle": "getByBossIdint should get by boss id int",
      "timedOut": false,
      "duration": 433,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.BossService.getByBossIdint([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "b708d4de-b3cb-4ce2-9541-b50fc50e117c",
      "parentUUID": "67fb0be3-2b5a-41b0-b4b9-e42471836462",
      "skipped": false
    },
    {
      "title": "should get by boss id",
      "fullTitle": "getByBossId should get by boss id",
      "timedOut": false,
      "duration": 388,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.BossService.getByBossId(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "a803a0f9-3d08-4124-95b3-5ba342483f1d",
      "parentUUID": "643b11e3-84e1-4c5e-a4e0-c0bf7ae27efe",
      "skipped": false
    },
    {
      "title": "should attack",
      "fullTitle": "attack should attack",
      "timedOut": false,
      "duration": 371,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.BossService.attack(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "172803f8-328a-456b-9fe5-c1a0abb775f6",
      "parentUUID": "6bddc173-a938-4f8e-b8ca-2aabee90252f",
      "skipped": false
    },
    {
      "title": "should get current hp",
      "fullTitle": "getCurrentHP should get current hp",
      "timedOut": false,
      "duration": 442,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.BossService.getCurrentHP(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "62067f10-ce25-4014-9865-ca052b0c67be",
      "parentUUID": "034f806d-f889-4524-8a43-c6c82e873173",
      "skipped": false
    },
    {
      "title": "should get last attack player",
      "fullTitle": "getLastAttackPlayer should get last attack player",
      "timedOut": false,
      "duration": 401,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.BossService.getLastAttackPlayer(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "aa66d9fb-97c2-4fc1-98f9-9bf15c67de67",
      "parentUUID": "96204ecc-10ea-4146-b112-0395e2d8a2ec",
      "skipped": false
    },
    {
      "title": "should get url",
      "fullTitle": "getUrl should get url",
      "timedOut": false,
      "duration": 393,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FileStorageService.getUrl(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "acb1dc97-dad9-4b85-a35e-61bdbffb4c0a",
      "parentUUID": "8a0cb77e-ab1c-4f80-b6f9-6e1351a79e90",
      "skipped": false
    },
    {
      "title": "should delete",
      "fullTitle": "delete should delete",
      "timedOut": false,
      "duration": 372,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.FileStorageService.delete(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "b9e6c268-e33f-4112-8266-e0531c35414f",
      "parentUUID": "2dd5a3ff-39dc-4c7b-a1db-fc08432134e6",
      "skipped": false
    },
    {
      "title": "should get gifts",
      "fullTitle": "getGifts should get gifts",
      "timedOut": false,
      "duration": 417,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GiftCodeService.getGifts(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "2bc201eb-98f1-4b56-9f04-0170c0f7277e",
      "parentUUID": "3838ce82-bba1-4ac1-a9a5-68a24c43ea6d",
      "skipped": false
    },
    {
      "title": "should redeem",
      "fullTitle": "redeem should redeem",
      "timedOut": false,
      "duration": 373,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GiftCodeService.redeem(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "7fa092fd-d8cf-4003-a11a-e35fc8bc7c46",
      "parentUUID": "cf8f9d5b-b5c2-4664-9cfd-6823911865c2",
      "skipped": false
    },
    {
      "title": "should get gifts by code",
      "fullTitle": "getGiftByCode should get gifts by code",
      "timedOut": false,
      "duration": 411,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GiftCodeService.getGiftByCode(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "c5fca94b-4ae7-42cc-b00b-ac49e96708e8",
      "parentUUID": "2e5450a1-1fd7-406c-b3db-010044115564",
      "skipped": false
    },
    {
      "title": "should get record",
      "fullTitle": "getRecord should get record",
      "timedOut": false,
      "duration": 387,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GiftCodeService.getRecord(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "4db5b4f7-32e7-4de7-8759-7be70a457358",
      "parentUUID": "8abdd4fc-d6ac-4cc1-b1ae-16ba1898c92e",
      "skipped": false
    },
    {
      "title": "should redeem over mail",
      "fullTitle": "redeemOverMail should redeem over mail",
      "timedOut": false,
      "duration": 385,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GiftCodeService.redeemOverMail(player.id, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-string\">'123'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "bf2319b3-4940-43e3-9b82-6ff556b12a0e",
      "parentUUID": "a5ce29be-87db-40ef-b06e-50e646fc2018",
      "skipped": false
    },
    {
      "title": "should redeem gift by code over mail",
      "fullTitle": "redeemGiftByCodeOverMail should redeem gift by code over mail",
      "timedOut": false,
      "duration": 355,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.GiftCodeService.redeemGiftByCodeOverMail(player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "aa6592d5-c3b6-41b4-94df-efdd8c4063e8",
      "parentUUID": "0aa0d354-e986-423c-98bf-12d3b27b42ae",
      "skipped": false
    },
    {
      "title": "should push message",
      "fullTitle": "pushMessage should push message",
      "timedOut": false,
      "duration": 351,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PrivateChannelService.pushMessage(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "67b79829-a84d-4faf-9dc1-8392f3ca80f6",
      "parentUUID": "a361beb7-15dd-4506-b0b4-d3f6e69870c2",
      "skipped": false
    },
    {
      "title": "should push messages",
      "fullTitle": "pushMessages should push messages",
      "timedOut": false,
      "duration": 401,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PrivateChannelService.pushMessages(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "be5a4e13-6a8a-45e3-aa98-d5f1ce8b1066",
      "parentUUID": "9e0eed28-c51e-42a3-8c77-9e3d47a5ceda",
      "skipped": false
    },
    {
      "title": "should pop message",
      "fullTitle": "popMessage should pop message",
      "timedOut": false,
      "duration": 361,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PrivateChannelService.popMessage(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "9c8d687d-d923-446e-a313-b85254ec89f9",
      "parentUUID": "8136dfc2-f539-4dcd-bcb4-32df4dcde5cb",
      "skipped": false
    },
    {
      "title": "should pop message by",
      "fullTitle": "popMessageBy should pop message by",
      "timedOut": false,
      "duration": 367,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PrivateChannelService.popMessageBy(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "ab399fc5-735c-48a8-b3bb-eea091e0c068",
      "parentUUID": "55c8f8f5-8914-4983-b3ed-c97080058590",
      "skipped": false
    },
    {
      "title": "should clear channel",
      "fullTitle": "clearChannel should clear channel",
      "timedOut": false,
      "duration": 358,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PrivateChannelService.clearChannel(<span class=\"hljs-string\">''</span>, player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "5a15c6ae-98e0-4559-a3aa-7b6e4c119533",
      "parentUUID": "982524c1-af3e-41e9-bc3a-d002b8149555",
      "skipped": false
    },
    {
      "title": "should create channel",
      "fullTitle": "createChannel should create channel",
      "timedOut": false,
      "duration": 411,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PublicChannelService.createChannel(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "4a386b06-1cc0-4b12-bcab-3e92fa67a3cf",
      "parentUUID": "2cecffab-17e8-46a2-a8a6-4574d45d4f00",
      "skipped": false
    },
    {
      "title": "should push message",
      "fullTitle": "pushMessage should push message",
      "timedOut": false,
      "duration": 421,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PublicChannelService.pushMessage(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "22a645f2-997e-4530-b85a-4d15a2e28142",
      "parentUUID": "4372a5d0-13e9-4cd6-bf89-ee7c513e3dfd",
      "skipped": false
    },
    {
      "title": "should pop all message",
      "fullTitle": "popAllMessage should pop all message",
      "timedOut": false,
      "duration": 339,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PublicChannelService.popAllMessage(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "7a474adf-e270-4740-8495-5011519e0262",
      "parentUUID": "b41367b1-e87d-4a89-852f-ba3a537ad03d",
      "skipped": false
    },
    {
      "title": "should pop message",
      "fullTitle": "popMessage should pop message",
      "timedOut": false,
      "duration": 393,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PublicChannelService.popMessage(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "48d39fad-d681-482f-b517-b430bbec5a32",
      "parentUUID": "1cfe2c5f-f479-44f2-acd4-0600172548e9",
      "skipped": false
    },
    {
      "title": "should pop message or num",
      "fullTitle": "popMessageOrnum should pop message or num",
      "timedOut": false,
      "duration": 398,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PublicChannelService.popMessageOrnum(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "3656124c-b041-46a9-9221-61f730245500",
      "parentUUID": "cf403644-0b18-4955-9231-e2b2f24dbec0",
      "skipped": false
    },
    {
      "title": "should pop message or num tim",
      "fullTitle": "popMessageOrnumtim should pop message or num tim",
      "timedOut": false,
      "duration": 378,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PublicChannelService.popMessageOrnumtim(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "c4ea95a6-cd9e-4d52-83f6-4a644f25636a",
      "parentUUID": "44868966-70a3-4ac0-ad54-219127671097",
      "skipped": false
    },
    {
      "title": "should clear channel",
      "fullTitle": "clearChannel should clear channel",
      "timedOut": false,
      "duration": 344,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PublicChannelService.clearChannel(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "764821e4-722d-4229-a2ec-bf3914487915",
      "parentUUID": "e95f8196-27a9-4710-9987-aa5facd88f9b",
      "skipped": false
    },
    {
      "title": "should delete message",
      "fullTitle": "deleteMessage should delete message",
      "timedOut": false,
      "duration": 393,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PublicChannelService.deleteMessage(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">123</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "b055e15f-d94d-46be-972e-d402991d8763",
      "parentUUID": "e2ba2155-4ccf-45cd-972f-f1c6dfe92e9a",
      "skipped": false
    },
    {
      "title": "should get message content",
      "fullTitle": "getMessageContent should get message content",
      "timedOut": false,
      "duration": 393,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.PublicChannelService.getMessageContent(<span class=\"hljs-number\">123</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "e54dc9ae-9fd3-4f2b-a768-28365f1f3941",
      "parentUUID": "291d6ab5-8717-4024-92a6-09b167990792",
      "skipped": false
    },
    {
      "title": "should create did",
      "fullTitle": "createDid should create did",
      "timedOut": false,
      "duration": 384,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DelegateDidService.createDid(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "b88864ab-2aa5-490e-99ab-454dacb4c015",
      "parentUUID": "b596572e-dae1-4ab9-ad97-cb181ceb2b5c",
      "skipped": false
    },
    {
      "title": "should query by did",
      "fullTitle": "queryByDid should query by did",
      "timedOut": false,
      "duration": 331,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DelegateDidService.queryByDid(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "343bc2ed-3fee-473b-bc49-cb8a01508d35",
      "parentUUID": "d1ec8a9f-010b-495a-8099-825635c7cdd0",
      "skipped": false
    },
    {
      "title": "should query by conditon",
      "fullTitle": "queryByCondition should query by conditon",
      "timedOut": false,
      "duration": 651,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.DelegateDidService.queryByCondition(player.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "b989c5b6-02ba-4175-82b8-f6273f36ff8f",
      "parentUUID": "69befb39-d139-47c6-a2b2-35b18f507ed9",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "getValue should get value",
      "timedOut": false,
      "duration": 371,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.getValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "ec1790a4-66ae-4d3d-94f5-fcc6d4413279",
      "parentUUID": "3c2fa1e8-7777-463a-b40a-14a5f8ccc376",
      "skipped": false
    },
    {
      "title": "should save or update value",
      "fullTitle": "saveOrUpdateValue should save or update value",
      "timedOut": false,
      "duration": 359,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.saveOrUpdateValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "58ca3af6-3aa3-43ca-ae04-877eb241a77f",
      "parentUUID": "23726ad2-67ab-4370-a17d-4dfdb9770504",
      "skipped": false
    },
    {
      "title": "should get list value",
      "fullTitle": "getListValue should get list value",
      "timedOut": false,
      "duration": 413,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.getListValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "ca1491a6-e94b-4c5b-8b3e-3bfe95e78078",
      "parentUUID": "c1d69102-0119-43dd-8e4a-3e6a5982afd7",
      "skipped": false
    },
    {
      "title": "should add list value",
      "fullTitle": "addListValue should add list value",
      "timedOut": false,
      "duration": 348,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.addListValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "40eff10c-e2a3-4596-a8de-55435a2ffc55",
      "parentUUID": "e51c3d8d-d827-4f89-a5e7-6df56603a968",
      "skipped": false
    },
    {
      "title": "should update list value",
      "fullTitle": "updateListValue should update list value",
      "timedOut": false,
      "duration": 458,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.updateListValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "8489ceec-dac1-4b2c-bc6f-a0fdb61be6c6",
      "parentUUID": "0a248c91-9c69-49e9-9025-2829638967df",
      "skipped": false
    },
    {
      "title": "should get map value",
      "fullTitle": "getMapValue should get map value",
      "timedOut": false,
      "duration": 341,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.getMapValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "d2fc9aa0-c3e1-4454-98d7-27feb26c1cf6",
      "parentUUID": "399f0021-92c2-4f4e-b347-c64d2d86cba4",
      "skipped": false
    },
    {
      "title": "should get map value by hash key",
      "fullTitle": "getMapValueByHashKey should get map value by hash key",
      "timedOut": false,
      "duration": 379,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.getMapValueByHashKey(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "a02ef3ad-f15c-4f74-a6c9-2d8f031548f3",
      "parentUUID": "0d3d8531-1068-4bc6-80d1-b92ab3f31028",
      "skipped": false
    },
    {
      "title": "should save or update map",
      "fullTitle": "saveOrUpdateMap should save or update map",
      "timedOut": false,
      "duration": 339,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.saveOrUpdateMap(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "b3bf5360-455c-4858-b014-d0bbfd95bfab",
      "parentUUID": "15b45aa8-0a1a-4a2d-b0b3-7dabe0c11eea",
      "skipped": false
    },
    {
      "title": "should set or update hash value",
      "fullTitle": "setOrUpdateHashValue should set or update hash value",
      "timedOut": false,
      "duration": 397,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.setOrUpdateHashValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "4ce0bd39-c713-46ac-a68b-966ebe7de6b7",
      "parentUUID": "84291790-3ba6-4749-9e75-46de937b5bba",
      "skipped": false
    },
    {
      "title": "should get set value",
      "fullTitle": "getSetValue should get set value",
      "timedOut": false,
      "duration": 382,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.getSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "6cc14007-3a5c-48d0-a6e0-4efc5cd2c3f6",
      "parentUUID": "06574e35-326c-4960-99b1-88ffc924fe16",
      "skipped": false
    },
    {
      "title": "should add set value",
      "fullTitle": "addSetValue should add set value",
      "timedOut": false,
      "duration": 385,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.addSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "9986339f-6bbb-4d9d-905a-e20709a9865a",
      "parentUUID": "8aa37e6a-3429-4b77-9582-667f5b76cdc2",
      "skipped": false
    },
    {
      "title": "should update set value",
      "fullTitle": "updateSetValue should update set value",
      "timedOut": false,
      "duration": 369,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.updateSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "eb97bf8b-bdde-495e-b701-700b35ed41a4",
      "parentUUID": "6aa5f0be-58c0-41d1-a7c1-b516bfaf4f79",
      "skipped": false
    },
    {
      "title": "should get z set value",
      "fullTitle": "getZSetValue should get z set value",
      "timedOut": false,
      "duration": 390,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.getZSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "6c1b135d-1b85-4a5d-8bd7-47d218e330de",
      "parentUUID": "29ac7406-1ed3-4ba7-abd8-40cffa6aa0bb",
      "skipped": false
    },
    {
      "title": "should add z set value",
      "fullTitle": "addZSetValue should add z set value",
      "timedOut": false,
      "duration": 396,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.addZSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "6e1e79d2-39db-4ec3-8b0b-cb44ad67e846",
      "parentUUID": "305270ed-b6c1-4de7-8202-a81b1860ed11",
      "skipped": false
    },
    {
      "title": "should update z set value",
      "fullTitle": "updateZSetValue should update z set value",
      "timedOut": false,
      "duration": 355,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.updateZSetValue(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "78dc9dfa-b327-47b0-8974-14d9d60c47ef",
      "parentUUID": "921d6032-2c4f-4a15-ba49-48dbf309fbee",
      "skipped": false
    },
    {
      "title": "should get z set rang by score",
      "fullTitle": "getZSetRangByScore should get z set rang by score",
      "timedOut": false,
      "duration": 364,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.getZSetRangByScore(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "a7e53a76-bc28-40ea-a8f6-067fe2c12979",
      "parentUUID": "5423e328-542a-44c2-a2b0-d7e71290c69d",
      "skipped": false
    },
    {
      "title": "should get list by index",
      "fullTitle": "getListByIndex should get list by index",
      "timedOut": false,
      "duration": 356,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.getListByIndex(<span class=\"hljs-string\">''</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "d5309068-bc44-456f-a80c-8a63aed7e49f",
      "parentUUID": "7667cf7a-6b0b-449e-8019-01bbb161f8cb",
      "skipped": false
    },
    {
      "title": "should remove",
      "fullTitle": "remove should remove",
      "timedOut": false,
      "duration": 408,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.remove(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "815d5a27-9363-49b0-8abc-712945f828e5",
      "parentUUID": "e725f1fc-dde7-459e-867f-bcc041fc6464",
      "skipped": false
    },
    {
      "title": "should remove from set ",
      "fullTitle": "removeFromSet should remove from set ",
      "timedOut": false,
      "duration": 366,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.removeFromSet(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "5f0e9672-04e1-4f7f-bf92-18a2451f6359",
      "parentUUID": "cf2cdeed-c81a-4409-8f95-494082bc1b98",
      "skipped": false
    },
    {
      "title": "should remove from hash",
      "fullTitle": "removeFromHash should remove from hash",
      "timedOut": false,
      "duration": 345,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.removeFromHash(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "15f622a7-40d0-4335-90f5-e5fb09f908e9",
      "parentUUID": "d75262bb-b609-448f-a18a-2526435743a9",
      "skipped": false
    },
    {
      "title": "should containt set",
      "fullTitle": "containtSet should containt set",
      "timedOut": false,
      "duration": 340,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.containtSet(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "eebebc96-19bc-446c-b5a1-704b98a71528",
      "parentUUID": "a7d3e7e0-c8fe-48e6-ac77-af7e054bb488",
      "skipped": false
    },
    {
      "title": "should contains hash",
      "fullTitle": "containsHash should contains hash",
      "timedOut": false,
      "duration": 397,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.containsHash(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "b498c70b-5e40-4984-b29c-1b6c518910fa",
      "parentUUID": "aa647c97-6d05-4f2c-bec2-7f6bbda8eaf6",
      "skipped": false
    },
    {
      "title": "should contains key",
      "fullTitle": "containsKey should contains key",
      "timedOut": false,
      "duration": 365,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.StructuredDataService.containsKey(<span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "9d3a9df0-dba7-4196-a329-2098cb3c1647",
      "parentUUID": "91376a44-c09b-4a96-9801-1e47b44a2bec",
      "skipped": false
    },
    {
      "title": "should get tickets by id",
      "fullTitle": "getTicketsById should get tickets by id",
      "timedOut": false,
      "duration": 381,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TicketService.getTicketsById(player.id, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "e4364eb9-cfe5-4207-9dd0-b728477c948a",
      "parentUUID": "d17e83c6-72eb-422d-8bf9-f9eb93f49487",
      "skipped": false
    },
    {
      "title": "should send ticket",
      "fullTitle": "sendTicket should send ticket",
      "timedOut": false,
      "duration": 427,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.TicketService.sendTicket({}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "f15ecb0e-f4c6-4a03-a20f-be10adf99026",
      "parentUUID": "a1e47b70-4f5f-450e-9f08-388abb142db8",
      "skipped": false
    },
    {
      "title": "should send error report",
      "fullTitle": "sendErrorReport should send error report",
      "timedOut": false,
      "duration": 336,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "SgtApi.ErrorReportService.sendErrorReport(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">''</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">result, data</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (result) {<br>        assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>    } <span class=\"hljs-keyword\">else</span> {<br>        <span class=\"hljs-keyword\">if</span> (data.match(<span class=\"hljs-string\">'Exception'</span>)) {<br>            assert.ok(<span class=\"hljs-literal\">true</span>, data);<br>        } <span class=\"hljs-keyword\">else</span> {<br>            assert.ok(<span class=\"hljs-literal\">false</span>, data);<br>        }<br>    }<br>    done();<br>});",
      "isRoot": false,
      "uuid": "c6c07bf6-0dfe-4595-93f0-157a1ab7245c",
      "parentUUID": "be8a74d5-9a28-43a7-ae95-e36d0541a477",
      "skipped": false
    }
  ],
  "allFailures": []
}